<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://ahermosilla.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://ahermosilla.com/" rel="alternate" type="text/html" /><updated>2020-07-24T07:40:22+00:00</updated><id>http://ahermosilla.com/feed.xml</id><title type="html">Andres Hermosilla | brain –archive</title><subtitle>Hi there, this is where I archive some of my brain records on development and design topics I've been working through. Some of these thoughts are raw as I'm evolving and others  are refined from years of experience.
</subtitle><entry><title type="html">Setup ZAP baseline for CI &amp;amp; tracking with JIRA</title><link href="http://ahermosilla.com/security/2020/07/24/zap-baseline-with-jira.html" rel="alternate" type="text/html" title="Setup ZAP baseline for CI &amp;amp; tracking with JIRA" /><published>2020-07-24T00:00:00+00:00</published><updated>2020-07-24T00:00:00+00:00</updated><id>http://ahermosilla.com/security/2020/07/24/zap-baseline-with-jira</id><content type="html" xml:base="http://ahermosilla.com/security/2020/07/24/zap-baseline-with-jira.html">&lt;p&gt;Doing a baseline security scan of your web application before deployment is a simple way to improve the security of your application. Adding a scan to your CI as part of your SDLC makes it effortless to iterate and improve your application’s security. There are lots of options for scanning your web application, but in this post we’ll focus on scanning with &lt;a href=&quot;https://www.zaproxy.org/&quot;&gt;OWASP ZAP&lt;/a&gt;! I’m going to walk through getting a basic scan setup and configured and then show how you can script up loading the results into &lt;a href=&quot;https://www.atlassian.com/software/jira&quot;&gt;JIRA&lt;/a&gt;. I don’t get into configuration details of the CI, I’ve done this setup primarily with teams using Jenkins, but it translate well into any CI. (If you are using Github, there is a nice post on &lt;a href=&quot;https://www.zaproxy.org/blog/2020-04-09-automate-security-testing-with-zap-and-github-actions/&quot;&gt;ZAP with Github Actions&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I put together the majority of this guide a couple years ago so some of the scripts haven’t been tested recently&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Docker&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jq&lt;/code&gt;  &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt; (cli) &lt;a href=&quot;https://github.com/Netflix-Skunkworks/go-jira&quot;&gt;https://github.com/Netflix-Skunkworks/go-jira&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prepare&quot;&gt;Prepare&lt;/h2&gt;
&lt;p&gt;You’ll need Docker installed on your system to try things out. When you are setup, you can execute this command to do a test run against your application  (Change the url to your application endpoint). The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alerts.json&lt;/code&gt; will have a report of findings and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alerts.conf&lt;/code&gt; is a config file (being generated this time with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-g&lt;/code&gt; flag) you can change (&lt;a href=&quot;https://www.zaproxy.org/docs/docker/baseline-scan/&quot;&gt;https://www.zaproxy.org/docs/docker/baseline-scan/&lt;/a&gt;) - pay attention to stdout for now. There will be minimal output, running the command will take 30 seconds to 5 minutes depending on how many crawlable urls you have.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--env&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PYTHONBUFFERED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;:/zap/wrk/:rw &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; owasp/zap2docker-stable zap-baseline.py &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; https://ahermosilla.com/ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-J&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;alerts.json&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; alerts.conf &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-config spider.maxDepth=1 -config spider.thread=4 -config spider.maxChildren=1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;review&quot;&gt;Review&lt;/h2&gt;
&lt;p&gt;After the command runs &amp;amp; finishes you’ll see some results in stdout that look like the output below. Review the results &amp;amp; make note of any items that may be false positives, noting the number in the square brackets after the label (e.g &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[10010]&lt;/code&gt;)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- snip ---
PASS: WSDL File Passive Scanner [90030]
PASS: Loosely Scoped Cookie [90033]
WARN-NEW: Cookie No HttpOnly Flag [10010] x 13 
	https://ahermosilla.com/
	https://ahermosilla.com/account/login?return_url=https%3A%2F%2Fahermosilla.com
	https://ahermosilla.com/user/auth/login?return_url=https%3A%2F%2Fahermosilla.com
	https://ahermosilla.com/robots.txt
	https://ahermosilla.com/sitemap.xml
WARN-NEW: Cookie Without Secure Flag [10011] x 13 
	https://ahermosilla.com/
--- snip ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tune&quot;&gt;Tune&lt;/h2&gt;
&lt;p&gt;The scan from the first step will generate an  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alerts.conf&lt;/code&gt; which you can tune.  You can change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WARN&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IGNORE&lt;/code&gt; for false positives or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WARN&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FAIL&lt;/code&gt; for items that you would want to fail builds for. Tuning is optional, but like most tools, you can get better mileage with tuning. Once you have altered the config, do some more test runs with the supplied config to verify the changes are what you want.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;alerts.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# zap-baseline rule configuration file
# Change WARN to IGNORE to ignore rule or FAIL to fail if rule matches
# Only the rule identifiers are used - the names are just for info
# You can add your own messages to each rule by appending them after a tab on each line.
10009   WARN    (In Page Banner Information Leak)
10010   WARN    (Cookie No HttpOnly Flag)
10011   WARN    (Cookie Without Secure Flag)
10015   WARN    (Incomplete or No Cache-control and Pragma HTTP Header Set)
10016   WARN    (Web Browser XSS Protection Not Enabled)
10017   WARN    (Cross-Domain JavaScript Source File Inclusion)
10019   WARN    (Content-Type Header Missing)
10020   WARN    (X-Frame-Options Header Scanner)
10021   WARN    (X-Content-Type-Options Header Missing)
10023   WARN    (Information Disclosure - Debug Error Messages)
10024   WARN    (Information Disclosure - Sensitive Information in URL)
10025   WARN    (Information Disclosure - Sensitive Information in HTTP Referrer Header)
10026   WARN    (HTTP Parameter Override)
10027   WARN    (Information Disclosure - Suspicious Comments)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that you have adjusted the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alerts.conf&lt;/code&gt; file, you 
 can run the command again, this time with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-c&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;:/zap/wrk/:rw &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; owasp/zap2docker-stable zap-baseline.py  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; https://ahermosilla.com/ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-J&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;alerts.json&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; alerts.conf &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-config spider.maxDepth=1 -config spider.thread=4 -config spider.maxChildren=1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;building&quot;&gt;Building&lt;/h2&gt;
&lt;p&gt;Once you have everything tuned &amp;amp; verified, add a job to your CI environment. You should setup parameterized builds to pass in your target and alerts configuration. I recommend running the scans after acceptance testing, but find where it best fits into your team’s SDLC. This is essentially the script you can use.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JIRA_PROJECT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TST
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TARGET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://ahermosilla.com/'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IGNORE_IDS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;alerts.conf  | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^#'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;IGNORE | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f1&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\r\n'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;REPORT_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;report-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'+%Y%m%d%H%M%S'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.json&quot;&lt;/span&gt;
 
docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;:/zap/wrk/:rw &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; owasp/zap2docker-stable zap-baseline.py  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TARGET&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-J&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$REPORT_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; alerts.conf &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 1 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-config spider.maxDepth=1 -config spider.thread=4 -config spider.maxChildren=1'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Export alerts to JIRA&lt;/span&gt;
./zap_alerts_to_jira.sh &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$REPORT_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jira&quot;&gt;JIRA&lt;/h2&gt;
&lt;p&gt;Everyone who has used JIRA has feelings about JIRA (myself included). This base script enables you to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt; cli to create tickets from the alerts generated by ZAP. For teams that primarily work out of JIRA, this is very helpful for keeping tabs of any issues ZAP has found.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;report_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;target_host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JIRA_PROJECT&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ignore_ids&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IGNORE_IDS&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt; 10026&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# If ignore_ids is actually a file instead of numbers&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ignore_ids&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# https://github.com/zaproxy/zaproxy/wiki/ZAP-Baseline-Scan#configuration-file&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[i] Reading alerts conf file for alerts to ignore&quot;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;ignore_ids&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ignore_ids&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;  | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^#'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;IGNORE | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ print $1 }'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\r\n'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target_host&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[!] You need to provide a target host ./zap_alerts_to_jira.sh report.json myapp.com'&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;10
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;should_ignore_id&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;local id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ignore_ids&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;then
    return &lt;/span&gt;1
  &lt;span class=&quot;k&quot;&gt;fi

  for &lt;/span&gt;iid &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ignore_ids&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;do
    if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$iid&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;then
      return &lt;/span&gt;0
    &lt;span class=&quot;k&quot;&gt;fi
  done
  return &lt;/span&gt;1
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

create_jira_issue&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.description,&quot;\n&quot;, (.uris[] | &quot; - \(.)&quot;)'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s/://g&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;c&quot;&gt;# If you want to add custom fields etc, you will need to change the go-jira create templates&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# which can be generated with `jira export-templates` and then&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# adjusted in ~/.jira.d/templates/create&lt;/span&gt;
  jira create &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--issuetype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Task &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--noedit&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--override&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;summary=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--override&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;description=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

handle_target_alerts&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alerts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; alert
  &lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.id'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;\(.id) -- \(.name)&quot;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;should_ignore_id &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;then
      &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[i] Ignoring alert &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prefix&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;continue
    fi

    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;risk_code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.riskcode'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$risk_code&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;then
      &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[i] Low risk ... skipping creating [&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;continue
    fi&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# If you change your summary after issues have been created, you will end up with duplicates&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -- &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;found&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;jira list &lt;span class=&quot;nt&quot;&gt;--limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;nt&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;project=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; AND summary~'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;found&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;then
      &lt;/span&gt;create_jira_issue &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else
      &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;issue_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;found&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[i] Issue already being tracked &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;issue_key&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; [&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&quot;&lt;/span&gt;
      jira comment &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;issue_key&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--noedit&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;--comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ZAP issue still being seen'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fi
  done&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alerts&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; jira&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; jq&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[!] Expects jira cli &amp;amp; jq to be installed&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; - https://github.com/Netflix-Skunkworks/go-jira&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;report_file&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[!] That does not appear to be a report file &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;report_file&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[!] Specify your jira project with JIRA_PROJECT env variable'&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[i] Checking if the configured JIRA project exists'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!(&lt;/span&gt;jira list &lt;span class=&quot;nt&quot;&gt;--project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[!] That project does not exist&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;report_file&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.site | type'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$site_type&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;array&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;report_file&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.site | length'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;max-1&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;0 &lt;span class=&quot;nv&quot;&gt;$max&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;report_file&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.site[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@host&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target_host&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;then
      &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[!] Ignoring alerts for &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; 
      &lt;span class=&quot;k&quot;&gt;continue
    fi

    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alerts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;report_file&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.site[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;].alerts[] | {uris: [.instances[]|.uri], description: .desc, id: .pluginid, name: .alert, riskcode: .riskcode }&quot;&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-L1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
    handle_target_alerts &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alerts&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;done
else 
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;report_file&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.site[&quot;@host&quot;]'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target_host&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[!] Ignoring alerts for &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return
  fi
    
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alerts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;report_file&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.site.alerts[] | {uris: [.instances[]|.uri], description: .desc, id: .pluginid, name: .alert, riskcode: .riskcode }'&lt;/span&gt; | xargs &lt;span class=&quot;nt&quot;&gt;-L1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
  handle_target_alerts &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alerts&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;jira_cli_login.sh&lt;/strong&gt;&lt;br /&gt;
Configuring authentication with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt; cli typically requires manually interaction. In the context of CI, configuring auth to work with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;expect&lt;/code&gt; is a bit hacky. Doing some digging, I found &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jira&lt;/code&gt; use a json file ( &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.jira.d/cookies&lt;/code&gt;) credentials … so I just created a script that generates that json file. &lt;em&gt;Warning, I haven’t tested this script in awhile&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'[{&quot;Name&quot;:&quot;atlassian.xsrf.token&quot;,&quot;Value&quot;:&quot;&quot;,&quot;Path&quot;:&quot;/&quot;,&quot;Domain&quot;:&quot;jira.internal.net&quot;,&quot;Expires&quot;:&quot;2030-04-30T11:35:02.409249143-07:00&quot;,&quot;RawExpires&quot;:&quot;&quot;,&quot;MaxAge&quot;:0,&quot;Secure&quot;:false,&quot;HttpOnly&quot;:false,&quot;Raw&quot;:&quot;atlassian.xsrf.token=; Path=/&quot;,&quot;Unparsed&quot;:null},{&quot;Name&quot;:&quot;JSESSIONID&quot;,&quot;Value&quot;:&quot;&quot;,&quot;Path&quot;:&quot;/&quot;,&quot;Domain&quot;:&quot;jira.internal.net&quot;,&quot;Expires&quot;:&quot;2030-04-30T11:35:02.301767644-07:00&quot;,&quot;RawExpires&quot;:&quot;&quot;,&quot;MaxAge&quot;:0,&quot;Secure&quot;:false,&quot;HttpOnly&quot;:true,&quot;Raw&quot;:&quot;JSESSIONID=; Path=/; HttpOnly&quot;,&quot;Unparsed&quot;:null}]'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--silent&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; /dev/null  &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; - &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST   https://jira.internal.net/rest/auth/1/session   &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'content-type: application/json'&lt;/span&gt;   &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{ &quot;username&quot;: &quot;'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JIRA_USER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&quot;, &quot;password&quot;: &quot;'&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JIRA_PASS&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' }'&lt;/span&gt;  | &lt;span class=&quot;nb&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n3&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f6&lt;/span&gt;,7 | &lt;span class=&quot;nb&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\t'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cookies&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;token | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'='&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f2&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;JID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cookies&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;JSESSIONID | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'='&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f2&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s//&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/g&quot;&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s//&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JID&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/g&quot;&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ~/.jira.d/cookies.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="security" /><category term="security" /><category term="zap" /><summary type="html">Doing a baseline security scan of your web application before deployment is a simple way to improve the security of your application. Adding a scan to your CI as part of your SDLC makes it effortless to iterate and improve your application’s security. There are lots of options for scanning your web application, but in this post we’ll focus on scanning with OWASP ZAP! I’m going to walk through getting a basic scan setup and configured and then show how you can script up loading the results into JIRA. I don’t get into configuration details of the CI, I’ve done this setup primarily with teams using Jenkins, but it translate well into any CI. (If you are using Github, there is a nice post on ZAP with Github Actions)</summary></entry><entry><title type="html">dig without dig</title><link href="http://ahermosilla.com/snippet/2020/07/20/snippet-dig-without-dig.html" rel="alternate" type="text/html" title="dig without dig" /><published>2020-07-20T00:00:00+00:00</published><updated>2020-07-20T00:00:00+00:00</updated><id>http://ahermosilla.com/snippet/2020/07/20/snippet-dig-without-dig</id><content type="html" xml:base="http://ahermosilla.com/snippet/2020/07/20/snippet-dig-without-dig.html">&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'host: dns.google.com'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'https://8.8.8.8/resolve?name=assets.github.com&amp;amp;type=NS'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  | jq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="snippet" /><category term="dns" /><summary type="html">curl -s -H 'host: dns.google.com' \ 'https://8.8.8.8/resolve?name=assets.github.com&amp;amp;type=NS' \ | jq</summary></entry><entry><title type="html">Reverse Engineering the az-cli to use the python sdk</title><link href="http://ahermosilla.com/cloud/2020/07/15/reverse-engineering-az-cli-to-sdk.html" rel="alternate" type="text/html" title="Reverse Engineering the az-cli to use the python sdk" /><published>2020-07-15T00:00:00+00:00</published><updated>2020-07-15T00:00:00+00:00</updated><id>http://ahermosilla.com/cloud/2020/07/15/reverse-engineering-az-cli-to-sdk</id><content type="html" xml:base="http://ahermosilla.com/cloud/2020/07/15/reverse-engineering-az-cli-to-sdk.html">&lt;p&gt;For scripting things in AWS, switching between boto and the aws cli is seamless because they use the same interfaces. The name of the python module matches the subcommand in the cli and the arguments and options all line up. This is not the case with Azure ….&lt;/p&gt;

&lt;p&gt;There seems to be inconsistent names between the az-cli, azure-sdk &amp;amp; the Azure portal, which makes creating scripts a bit challenging. Additionally challenging, the docs are not fleshed out and hard to find, so I’ve had to ‘trailblaze’ to discover how to use the sdk.&lt;/p&gt;

&lt;p&gt;After wrestling through figuring out how to find &amp;amp; install the modules necessary for certain datasets I have developed a pattern for discovering how to use the python sdk.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt;&lt;br /&gt;
I was trying to create a script that pulled non-compliant resources from Azure Policy. The steps below document my journey to figuring out how to use the python sdk to do that.&lt;/p&gt;

&lt;h2 id=&quot;clone-azure-cli&quot;&gt;Clone azure-cli&lt;/h2&gt;
&lt;p&gt;Search around for an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;az&lt;/code&gt; command that has the same names in the portal or yields similar data to the UI.
Digging through &lt;a href=&quot;https://docs.microsoft.com/en-us/cli/azure/policy/state?view=azure-cli-latest#az-policy-state-list&quot;&gt;docs&lt;/a&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;az policy state list -g &quot;NameOfResourceGroup&quot;&lt;/code&gt; looked like it was a good place to start. We are going to clone the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;azure-cli&lt;/code&gt; repo and look for the modules that are used for that command.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Clone repo&lt;/span&gt;
git clone https://github.com/Azure/azure-cli
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;azure-cli

&lt;span class=&quot;c&quot;&gt;# Look for the command pattern&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# See output below&lt;/span&gt;
ag &lt;span class=&quot;nt&quot;&gt;--python&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'policy state'&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;--ignore-dir&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'*test'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--ignore&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'**help.py*'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;src/azure-cli/azure/cli/command_modules/policyinsights/_params.py
107:    with self.argument_context('policy state') as c:
112:            help='Within the specified time interval, get all policy states instead of the latest only.')
120:    with self.argument_context('policy state summarize') as c:

src/azure-cli/azure/cli/command_modules/policyinsights/commands.py
36:    with self.command_group('policy state', policy_states_sdk, client_factory=policy_states_operations) as g:

src/azure-cli/azure/cli/command_modules/sql/_params.py
790:                   help='Auditing policy state',
811:                   help='Threat detection policy state',
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that the region of the code base is narrowed, let us open that directory in our editor &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;code src/azure-cli/azure/cli/command_modules/policyinsights/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When I look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commands.py&lt;/code&gt; file, I notice &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;azure.mgmt.policyinsights.*&lt;/code&gt;, which looks like a python module (which it is), so that is a good direction indicator.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# ... Parts ommited for brevity
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load_command_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;policy_events_sdk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CliCommandType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;operations_tmpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'azure.mgmt.policyinsights.operations#PolicyEventsOperations.{}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exception_handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;policy_insights_exception_handler&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;policy_states_sdk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CliCommandType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;operations_tmpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'azure.mgmt.policyinsights.operations#PolicyStatesOperations.{}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exception_handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;policy_insights_exception_handler&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next I’ll do a case sensitive search for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Client&lt;/code&gt; - I’ve noticed there a is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{$Service}Client&lt;/code&gt; pattern in the python-sdk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/reversing-az/code-find-client.png&quot; alt=&quot;Search For Client&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sure enough, you can see the python module imported &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;from azure.mgmt.policyinsights import PolicyInsightsClient&lt;/code&gt;. Equipped with that knowledge, we can take a look at the python sdk. The specific module is found in &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/policyinsights/azure-mgmt-policyinsights/azure/mgmt/policyinsights&quot;&gt;here&lt;/a&gt; and we can take a look at it to figure out how to use it.&lt;/p&gt;

&lt;h2 id=&quot;look-at-requests-in-ui&quot;&gt;Look at Requests in UI&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/reversing-az/az-policy.png&quot; alt=&quot;AZ Policy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Starting with the cli is a good place to start, however it doesn’t always yield fruitful results.
Dig around in the UI for Policy, looking for properties, names, etc. One you can find is 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;providers/Microsoft.Management/managementGroups/corp/providers/Microsoft.Authorization/policyAssignments/205aa080f2cb4xxxxxxxx&lt;/code&gt;. For me, the part that sticks out is the part right before an id, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policyAssignments&lt;/code&gt;. Later, I’ll look for anything with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policy&lt;/code&gt; in the type of a resource using the Resource Graph Explorer.&lt;/p&gt;

&lt;p&gt;I’ve noticed many pages interact directly with the same apis that the az-cli and python-sdk do, so I’ll open my browser network requests inspector and see what I can find.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/reversing-az/az-policy-network.png&quot; alt=&quot;AZ Policy Network&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So far, the endpoint with consistently useful data is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;batch?api-version=xxxx&lt;/code&gt;. If you look at the request it gives you a hint at what endpoints we want to interact with. I look at the request and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Microsoft.PolicyInsights/policyStates&lt;/code&gt; is the part that sticks out to me as interesting. It is contained in part of a url, likely from an API that the sdk interacts with.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;requests&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;httpMethod&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;5f152e3e-xxxx-yyyy-zzzz-000000000000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;requestHeaderDetails&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;commandName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Microsoft_Azure_Policy.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://management.azure.com/providers/Microsoft.Management/managementGroups/codxxxxx/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2019-10-01&amp;amp;$top=250&amp;amp;$select=resourceId,resourceType,resourceLocation,timestamp,complianceState,policyDefinitionVersion,policySetDefinitionVersion&amp;amp;$filter=policyAssignmentId eq '/providers/Microsoft.Management/managementGroups/corp/providers/Microsoft.Authorization/policyAssignments/205aa080f2cb446a9exxxxxx' and policyDefinitionId eq '/providers/Microsoft.Authorization/policyDefinitions/34c877ad-xxxx-yyyy-zzzz-000000000000' and policyDefinitionReferenceId eq '13350666179920xxxxxxx' and ((complianceState eq 'noncompliant'))&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Armed with a pattern to look for, let’s try finding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Microsoft.PolicyInsights/policyStates&lt;/code&gt; in the SDK.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# The sdk is ~200mb&lt;/span&gt;
git clone https://github.com/Azure/azure-sdk-for-python
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;azure-sdk-for-python/
ag &lt;span class=&quot;nt&quot;&gt;--python&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Microsoft.PolicyInsights/policyStates'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sdk/policyinsights/azure-mgmt-policyinsights/azure/mgmt/policyinsights/operations/_policy_states_operations.py
149:    list_query_results_for_management_group.metadata = {'url': '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults'}
230:    summarize_for_management_group.metadata = {'url': '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize'}
331:    list_query_results_for_subscription.metadata = {'url': '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults'}
411:    summarize_for_subscription.metadata = {'url': '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize'}
515:    list_query_results_for_resource_group.metadata = {'url': '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults'}
598:    summarize_for_resource_group.metadata = {'url': '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize'}
704:    list_query_results_for_resource.metadata = {'url': '/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults'}
784:    summarize_for_resource.metadata = {'url': '/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize'}
858:    trigger_subscription_evaluation.metadata = {'url': '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/latest/triggerEvaluation'}
936:    trigger_resource_group_evaluation.metadata = {'url': '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyStates/latest/triggerEvaluation'}
1041:    list_query_results_for_policy_set_definition.metadata = {'url': '/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policySetDefinitions/{policySetDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults'}
1126:    summarize_for_policy_set_definition.metadata = {'url': '/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policySetDefinitions/{policySetDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize'}
1231:    list_query_results_for_policy_definition.metadata = {'url': '/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults'}
1315:    summarize_for_policy_definition.metadata = {'url': '/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize'}
1420:    list_query_results_for_subscription_level_policy_assignment.metadata = {'url': '/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults'}
1504:    summarize_for_subscription_level_policy_assignment.metadata = {'url': '/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize'}
1612:    list_query_results_for_resource_group_level_policy_assignment.metadata = {'url': '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults'}
1700:    summarize_for_resource_group_level_policy_assignment.metadata = {'url': '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize'}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So starting from the UI we’ve narrowed down what part of the SDK to interact with. This lines up with what we discovered earlier looking at the azure-cli. Typically a module for a service has &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;models&lt;/code&gt; &amp;amp;  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;operations&lt;/code&gt; directories, so we want to open the directory above, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sdk/policyinsights/azure-mgmt-policyinsights/azure/mgmt/policyinsight&lt;/code&gt;. Generally, with modules, we don’t want to interact directly with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;operations/*.py&lt;/code&gt;, there is a “public-interface” via a client which executes operations. To find the “public-interface” you need to look in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__init__.py&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Looking at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__init__.py&lt;/code&gt; you will find &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__all__ = ['PolicyInsightsClient', 'PolicyInsightsClientConfiguration']&lt;/code&gt;, which is python for “you can/should access these in this module”. From there if you drill down into the client in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_policy_insights_client.py&lt;/code&gt; you will see the operation we found being imported and used in the client’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__init__&lt;/code&gt; method.&lt;/p&gt;

&lt;h2 id=&quot;look-at-resource-graph&quot;&gt;Look at Resource Graph&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/reversing-az/az-rg-query.png&quot; alt=&quot;AZ Resource Graph&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some resources can be fetched using the resource graph. Once you have the pattern down for interacting with the resource graph client, instead of having to figure out additional clients you can possibly just figure a new query.&lt;/p&gt;

&lt;p&gt;For example, if I wanted to get all public ips, using the network module from the python-sdk, it would take some effort. However, I can create a resource graph query to get that same data without having to iterate through all the subscriptions and resource groups&lt;/p&gt;

&lt;h4 id=&quot;example&quot;&gt;Example&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;where type in~ ('Microsoft.Network/PublicIpAddresses') and isnotempty(properties.ipAddress) 
  | project id,name,type,location,subscriptionId,resourceGroup,kind,tags,properties.ipAddress 
  | sort by tolower(tostring(name)) asc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;azure.mgmt.resourcegraph.models&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rg&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;azure.mgmt.resourcegraph&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResourceGraphClient&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Parts omitted for brevity
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;resource_graph_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;credentials&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_subscriptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subscription_ids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscription_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;has_more&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;per_page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has_more&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QueryRequestOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;per_page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per_page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query_request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QueryRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;subscriptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscription_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResourceGraphClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'columns'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rows'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;has_more&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per_page&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;discovery&quot;&gt;Discovery&lt;/h3&gt;
&lt;p&gt;It’s not immediately clear what resources are available to query. I find querying with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type contains '...'&lt;/code&gt; and trying different values helps me to discover what types of data are available. When I looked around for resources around policy, there was nothing that stuck out.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resources 
| where type contains 'insight' or type contains 'policy'
| distinct  type
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sample&quot;&gt;Sample&lt;/h2&gt;
&lt;p&gt;Okay, so with all that spelunking, what did we finally land on for getting the policy state using the python-sdk?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;shared.azure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;az&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;azure.mgmt.policyinsights&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PolicyInsightsClient&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;credentials&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;az&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;insights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PolicyInsightsClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;insights&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;policy_states&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_query_results_for_management_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'latest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rootmanagementgroup'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# @todo needs pagination
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="cloud" /><category term="azure" /><category term="cloud" /><category term="python" /><summary type="html">For scripting things in AWS, switching between boto and the aws cli is seamless because they use the same interfaces. The name of the python module matches the subcommand in the cli and the arguments and options all line up. This is not the case with Azure ….</summary></entry><entry><title type="html">Setup Windows 10 in Azure</title><link href="http://ahermosilla.com/cloud/2020/07/14/setup-windows-10-azure.html" rel="alternate" type="text/html" title="Setup Windows 10 in Azure" /><published>2020-07-14T00:00:00+00:00</published><updated>2020-07-14T00:00:00+00:00</updated><id>http://ahermosilla.com/cloud/2020/07/14/setup-windows-10-azure</id><content type="html" xml:base="http://ahermosilla.com/cloud/2020/07/14/setup-windows-10-azure.html">&lt;p&gt;&lt;img src=&quot;/assets/img/windows-10-rdp.png&quot; alt=&quot;RDP&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The other day I needed to test a Windows application, but I’m using a Mac. If you need to audit/test a Windows application on a Mac or Linux box, Microsoft provides some developer VM images you can use for free &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/&quot;&gt;https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/&lt;/a&gt;. I went ahead and downloaded the VM image for VirtualBox and starting the VM. I allocated 3 cores and 8GB of RAM thinking that should be enough power to test reasonably (I’m using MacBook Pro 2018 with the i5 and 16GB of RAM). Overall performance was tolerable, but I kept having issues where the VM would unresponsive for 30 seconds at a time. When auditing an application, the speed of iteration is important - I want to a fast feedback cycle when interacting with the application - this was not happening.&lt;/p&gt;

&lt;p&gt;Switching gears a bit, I’ve been learning Azure, mostly from the perspective of securing cloud resources. It is really easy to deploy resources &amp;amp; Microsoft tech (eg Windows 10) has first-class support. I thought, what if instead of trying to tune settings in Windows &amp;amp; VirtualBox to get tolerable performance, what if I just deploy a VM in Azure and &lt;a href=&quot;https://apps.apple.com/us/app/microsoft-remote-desktop/id1295203466&quot;&gt;RDP&lt;/a&gt; in? After having gone through the process, I can tell you, a Windows environment in Azure takes very little effort!&lt;/p&gt;

&lt;p&gt;My goal during this discovery process was to be able to quickly setup new environments for new applications I needed to test. I wanted to have a script at the end which I could use to spin up assets. I would start by creating a resource in the Azure Portal and then try to do the same with with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;az-cli&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install azure-cli&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;
&lt;h3 id=&quot;resource-group&quot;&gt;Resource Group&lt;/h3&gt;
&lt;p&gt;In Azure, any resource you create will fall under your subscription, as well as a Resource Group, which is essentially a named grouping bucket you create.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;az group create &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; westus &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; DesktopAppTest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;create-vm&quot;&gt;Create VM&lt;/h3&gt;
&lt;p&gt;When creating a VM in Azure, there are countless options, but in this context there are a couple that are important. You need to figure the specific image you will be using as well as the size (CPU/MEM) for the VM configuration.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# List images ... you can find Windows 10&lt;/span&gt;
az vm image list &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; table
az vm image list &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; table &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--offer&lt;/span&gt; Windows-10

&lt;span class=&quot;c&quot;&gt;# Output sample&lt;/span&gt;
Offer       Publisher                Sku                          Urn                                                                                   Version
&lt;span class=&quot;nt&quot;&gt;----------&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;-----------------------&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;---------------------------&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;------------------------------------------------------------------------------------&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;---------------------&lt;/span&gt;
Windows-10  MicrosoftWindowsDesktop  19h1-ent                     MicrosoftWindowsDesktop:Windows-10:19h1-ent:18362.836.2005071659                      18362.836.2005071659
Windows-10  MicrosoftWindowsDesktop  19h1-ent                     MicrosoftWindowsDesktop:Windows-10:19h1-ent:18362.900.2006061800                      18362.900.2006061800
Windows-10  MicrosoftWindowsDesktop  19h1-ent                     MicrosoftWindowsDesktop:Windows-10:19h1-ent:18362.959.2007101755                      18362.959.2007101755
Windows-10  MicrosoftWindowsDesktop  19h1-ent-gensecond           MicrosoftWindowsDesktop:Windows-10:19h1-ent-gensecond:18362.836.2005071659            18362.836.2005071659
Windows-10  MicrosoftWindowsDesktop  19h1-ent-gensecond           MicrosoftWindowsDesktop:Windows-10:19h1-ent-gensecond:18362.900.2006061800            18362.900.2006061800
Windows-10  MicrosoftWindowsDesktop  19h1-ent-gensecond           MicrosoftWindowsDesktop:Windows-10:19h1-ent-gensecond:18362.959.2007101755            18362.959.2007101755
Windows-10  MicrosoftWindowsDesktop  19h1-entn                    MicrosoftWindowsDesktop:Windows-10:19h1-entn:18362.836.2005071659                     18362.836.2005071659
Windows-10  MicrosoftWindowsDesktop  19h1-entn                    MicrosoftWindowsDesktop:Windows-10:19h1-entn:18362.900.2006061800                     18362.900.2006061800
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# List sizes ... we want at least 8GB memory&lt;/span&gt;
az vm list-sizes &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt; westus &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; table

&lt;span class=&quot;c&quot;&gt;# Output sample&lt;/span&gt;
MaxDataDiskCount    MemoryInMb    Name                    NumberOfCores    OsDiskSizeInMb    ResourceDiskSizeInMb
&lt;span class=&quot;nt&quot;&gt;------------------&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;------------&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;----------------------&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;---------------&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;----------------&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;----------------------&lt;/span&gt;
64                  5836800       Standard_M208ms_v2      208              1047552           4194304
64                  2918400       Standard_M208s_v2       208              1047552           4194304
64                  5836800       Standard_M416-208s_v2   416              1047552           8388608
64                  5836800       Standard_M416s_v2       416              1047552           8388608
64                  11673600      Standard_M416-208ms_v2  416              1047552           8388608
64                  11673600      Standard_M416ms_v2      416              1047552           8388608
8                   172032        Standard_NP10s          10               1047552           753664
16                  344064        Standard_NP20s          
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For the image I used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MicrosoftWindowsDesktop:Windows-10:19h1-pro:18362.959.2007101755&lt;/code&gt;, which is the image you select when you use the Azure portal. The VM size &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Standard_D2ds_v4&lt;/code&gt; provides 8GB of MEM and 2 CPU, which for the application I was running was going to be enough power.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;An aside, if you have multiple Azure subscriptions, you will need to specify which subscription the resources will deploy into.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Create a vm using a Windows 10 VM&lt;/span&gt;
az vm create &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; win-10-app-x-test &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; DesktopAppTest &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;--image&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'MicrosoftWindowsDesktop:Windows-10:19h1-pro:18362.959.2007101755'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;--admin-username&lt;/span&gt; myapp &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;--size&lt;/span&gt; Standard_D2ds_v4 &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt;  westus &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;--subscription&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;c3a7d4a7-xxxx-yyyy-zzzz-000000000000&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When you run the command, it will prompt you to input a password for RDP. Make sure to use a password with at least 20 characters since this asset will be exposed to the internet after deployment. (We’ll remedy this later)&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Output sample&lt;/span&gt;
Admin Password: 
Confirm Admin Password: 
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;- Finished ..
  &lt;span class=&quot;s2&quot;&gt;&quot;fqdns&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/subscriptions/c3a7d4a7-xxxx-yyyy-zzzz-000000000000/resourceGroups/DesktopAppTest/providers/Microsoft.Compute/virtualMachines/win-10-app-x-test&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;location&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;westus&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;macAddress&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;00-0D-3A-F6-F4-FC&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;powerState&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;VM running&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;privateIpAddress&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;10.0.1.7&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;publicIpAddress&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;40.91.105.xxx&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;resourceGroup&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;DesktopAppTest&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;zones&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/h3&gt;
&lt;p&gt;There is likely a baseline setup of tools &amp;amp; apps you want to be installed on your VM. Having to manually install those tools every time you create a new box up would be time consuming. I wanted to script up installing the tools (Burp,ZAP,FireFox,etc) to get things moving faster. Luckily, for Windows, there is a third party package manager (think &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apt-get&lt;/code&gt;) called &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;. I created a small PowerShell script to install Chocolatey as well as some base packages I would need in every environment. You can copy the script and save in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bootstrap.ps1&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Install chocolatey and configure env &lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Set-ExecutionPolicy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bypass&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Scope&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Force&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.WebClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DownloadString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://chocolatey.org/install.ps1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'PATH=%PATH%;C:\ProgramData\chocolatey\bin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Set system wide environment variable&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetEnvironmentVariable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'APP_DEBUG_FLAG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;EnvironmentVariableTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Machine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;';C:\ProgramData\chocolatey\bin\'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Install apps with choco&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;choco&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;burp-suite-free-edition&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;choco&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sysmon&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;choco&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;procexp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;choco&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firefox&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;choco&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;choco&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strings&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;choco&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vscode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Download specific files&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ItemType&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Directory&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Force&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C:\\installers'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new-object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.WebClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Downloadfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://getcomposer.org/Composer-Setup.exe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'C:\\installers\Composer-Setup.exe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Show hidden holders &amp;amp; show extensions in explorer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Set-ItemProperty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Set-ItemProperty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HideFileExt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Stop-Process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-processname&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;explorer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Copying and pasting this file via RDP is not that big a deal, but I wanted to make the process as hands off as possible. I tried to embed the script in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;customdata&lt;/code&gt; during deployment, but never had luck with getting that working. I ending up settling on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;az vm run-command invoke --command-id RunPowerShellScript&lt;/code&gt; to execute the bootstrapping script.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DesktopAppTest'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'westus'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;vmname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'win-10-app-x-test'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Run a script using a file &lt;/span&gt;
az vm run-command invoke  &lt;span class=&quot;nt&quot;&gt;--command-id&lt;/span&gt; RunPowerShellScript &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;vmname&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;--scripts&lt;/span&gt; @bootstrap.ps1  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;security&quot;&gt;Security&lt;/h3&gt;
&lt;p&gt;I mentioned earlier, by default, your VM will be exposed to the internet. Azure has assigned/created a Network Security Group which is attached to your VM’s NIC. You can alter to tighten up the security - we should limit the source addresses for RDP to your personal IP&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DesktopAppTest'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'westus'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;vmname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'win-10-app-x-test'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Update network security group to only allow RDP from your ip&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;nsgid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;az network nic show  &lt;span class=&quot;nt&quot;&gt;--ids&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;az vm show &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;vmname&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'networkProfile.networkInterfaces[0].id'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; tsv&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'networkSecurityGroup.id'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; tsv&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;ruleid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;az network nsg show &lt;span class=&quot;nt&quot;&gt;--ids&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;nsgid&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'securityRules[?destinationPortRange == `&quot;3389&quot;`].id | [0]'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; tsv&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Use ifconfig.co to get your ip to update the rule&lt;/span&gt;
az network nsg rule update &lt;span class=&quot;nt&quot;&gt;--ids&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ruleid&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;--source-address-prefixes&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl https://ifconfig.co/&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/32&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;improvements&quot;&gt;Improvements&lt;/h2&gt;
&lt;p&gt;If you are spinning up new VMs often, you should take a look at &lt;a href=&quot;https://www.packer.io/&quot;&gt;Packer&lt;/a&gt; for building base images. Once you have a base image with your apps installed, you can deploy that instead of doing a fresh install of apps each deploy.&lt;/p&gt;</content><author><name></name></author><category term="cloud" /><category term="azure" /><category term="cloud" /><category term="windows" /><summary type="html"></summary></entry><entry><title type="html">Where does IP data come from?</title><link href="http://ahermosilla.com/tools/2020/07/07/where-ip-data-lives.html" rel="alternate" type="text/html" title="Where does IP data come from?" /><published>2020-07-07T00:00:00+00:00</published><updated>2020-07-07T00:00:00+00:00</updated><id>http://ahermosilla.com/tools/2020/07/07/where-ip-data-lives</id><content type="html" xml:base="http://ahermosilla.com/tools/2020/07/07/where-ip-data-lives.html">&lt;p&gt;I’ve wondered for quite some time, how do sites like &lt;a href=&quot;https://ipinfo.io&quot;&gt;https://ipinfo.io&lt;/a&gt; get their data? Secondly, the question I had was “Could I gather/build out the data used by these sorts of services?”. Off the bat, looking at the data, I made the assumption that the ownership data is stored publicly or “premiumly” that I could access, but where? So I did some digging around and below is some the datasets I discovered.&lt;/p&gt;

&lt;h2 id=&quot;iana&quot;&gt;IANA&lt;/h2&gt;
&lt;p&gt;ICANN runs IANA which allocates IP addresses globally. The IANA allocates blocks of IPs to RIRs (Regional Internet Registry) which manage the blocks allocated to them. You can view the list of ranges and how they are allocated here &lt;a href=&quot;https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.xhtml&quot;&gt;https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.xhtml&lt;/a&gt;. It seems they allocate  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/8&lt;/code&gt; ranges, which you can also see here &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_assigned_/8_IPv4_address_blocks&quot;&gt;https://en.wikipedia.org/wiki/List_of_assigned_/8_IPv4_address_blocks&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;rir&quot;&gt;RIR&lt;/h2&gt;
&lt;p&gt;The RIR is a regional registry (RIPE, APNIC, ARIN, LACNIC, NRO, AFRINIC) and you can see the &lt;a href=&quot;https://en.wikipedia.org/wiki/Regional_Internet_registry#/media/File:Regional_Internet_Registries_world_map.svg&quot;&gt;map here&lt;/a&gt;. Each RIR will further allocate addresses to a LIR.&lt;/p&gt;

&lt;h2 id=&quot;asn&quot;&gt;ASN&lt;/h2&gt;
&lt;p&gt;So with that knowledge, I dug down into each RIR to see where I could possibly mine the allocated addresses. I found there were dumps of data which took me some time to look through to find what datasets would be helpful. In the process of looking at ARIN datasets I ran across the term &lt;a href=&quot;https://en.wikipedia.org/wiki/Autonomous_system_(Internet)&quot;&gt;ASN&lt;/a&gt;. ASNs are assigned by the IANA to each RIR which assign those the ASNs to a block.
You can see all the assigments here &lt;a href=&quot;https://www.iana.org/assignments/as-numbers/as-numbers.xhtml&quot;&gt;https://www.iana.org/assignments/as-numbers/as-numbers.xhtml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So you can get the list of ASN details from each RIR. It did notice RIPE had the details for every RIR (&lt;a href=&quot;https://ftp.ripe.net/pub/stats/&quot;&gt;https://ftp.ripe.net/pub/stats/&lt;/a&gt;
) so you don’t necessarily have to go to every RIR to get that data. Using the data I could figure out what ranges and ASNs belonged together.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get all ASNs
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://ftp.ripe.net/ripe/asnames/asn.txt&quot;&gt;https://ftp.ripe.net/ripe/asnames/asn.txt&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Get a list of ASNs for ARIN
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;ftp://ftp.arin.net/info/asn.txt&quot;&gt;ftp://ftp.arin.net/info/asn.txt&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Get ASNs &amp;amp; ranges for ARIN
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://ftp.arin.net/pub/stats/arin/delegated-arin-extended-latest&quot;&gt;http://ftp.arin.net/pub/stats/arin/delegated-arin-extended-latest&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Get a specific ASN
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://rdap.arin.net/registry/autnum/15169&quot;&gt;https://rdap.arin.net/registry/autnum/15169&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Use whois to get ranges for an ASN
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;whois -h whois.radb.net -- '-i origin AS714' | grep -Eo &quot;([0-9.]+){4}/[0-9]+&quot; | head&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For verification that the data was good, I looked up some addresses at IP info to see if things checked out, and everything looked good, but there was some caveats. I looked up some of the ranges and they were noted as inactive. How did I know a given range was “inactive”, there were not clear indicators in the ARIN datasets?&lt;/p&gt;

&lt;p&gt;Another challenge was associating ranges to a specific ASN. You can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reg-id&lt;/code&gt; column to tie ASNs and IPs under the same org, but it isn’t clear how to tie an ASN to a specific IP allocation.&lt;/p&gt;

&lt;h3 id=&quot;stats-delegated-format&quot;&gt;Stats delegated format&lt;/h3&gt;
&lt;p&gt;Looking at the delegated extended datasets, they look like this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-2.3|arin|1594044013396|154725|19700101|20200706|-0400&quot;&gt;arin|*|asn|*|28470|summary
arin|*|ipv4|*|66069|summary
arin|*|ipv6|*|60186|summary
arin|US|asn|1|1|20010920|assigned|e5e3b9c13678dfc483fb1f819d70883c
arin|US|asn|2|1|19910110|assigned|c3a16289a7ed6fb75fec2e256e5b5101
arin|US|asn|3|1|00000000|assigned|d98c567cda2db06e693f2b574eafe848
arin|US|asn|4|1|19840222|assigned|8c3f2df306a67e97a7abb5a2a0335865
arin|US|asn|5|1|19840202|assigned|17758c838b246924a54466f28f2b45ef
arin|US|asn|6|1|19840202|assigned|481b80475499335d51156e7b72507568
arin|US|asn|8|1|19840326|assigned|5f676a1dae02fc7cb708558c3ff1d122
arin|US|asn|9|1|19840417|assigned|859ff8395a142b506a4aa4425d450e1d
arin|US|asn|10|1|00000000|assigned|3fa2e5aa48f205a7696ea6fbcd437cff
arin|US|asn|11|1|19840704|assigned|88e9e1a9f78221c5b97e72d580642205
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It look me awhile to decipher the format, especially the last column, but this is the gist of it (I finally found a doc on the &lt;a href=&quot;https://www.arin.net/reference/research/statistics/nro_extended_stats_format.pdf&quot;&gt;format&lt;/a&gt;). The last column essentially is a key to help you associate rows with a given org.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;registry|country_code|type|start|value|date|status|reg-­‐id[|extensions...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;bgp&quot;&gt;BGP&lt;/h2&gt;
&lt;p&gt;During my research process, verifying information about ranges and ownership I ran into &lt;a href=&quot;https://bgp.he.net/AS3356&quot;&gt;https://bgp.he.net/AS3356&lt;/a&gt;. BGP (which I won’t dig into because I haven’t take the time yet to understand) is a protcol for exchanging routing information. I found you can download dumps of the exchanges and parse through them. Inside those dumps (&lt;a href=&quot;http://archive.routeviews.org/bgpdata/&quot;&gt;http://archive.routeviews.org/bgpdata/&lt;/a&gt;
), you can find ASNs and ranges - aha! this is where I can sort out if a range is inactive or not!&lt;/p&gt;

&lt;p&gt;The data roughly looks like this when you dump it out with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bgpdump&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TYPE      ?|  DATE    |?|FROM     |ASN |PREFIX    |ASNPATH   |ORG|NEXT_HOP |?|?|COMMUNITY
TABLE_DUMP2|1593640801|B|12.0.1.63|7018|8.8.8.0/24|7018 15169|IGP|12.0.1.63|0|0|7018:2500 7018:37232|NAG||
TABLE_DUMP2|1593640801|B|144.228.241.130|1239|8.8.8.0/24|1239 15169|IGP|144.228.241.130|0|80||NAG||
TABLE_DUMP2|1593640801|B|208.51.134.246|3549|8.8.8.0/24|3549 3356 15169|IGP|208.51.134.246|0|2504|3356:2 3356:86 3356:500 3356:666 3356:2064 3356:11078 3549:2352 3549:31826|NAG||
TABLE_DUMP2|1593640801|B|202.232.0.3|2497|8.8.8.0/24|2497 15169|IGP|202.232.0.3|0|0||NAG||
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Get outgoing IP and asn&lt;/span&gt;
bgpdump &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; rib.20200701.2200.bz2  | &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'|'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 4,5

&lt;span class=&quot;c&quot;&gt;# Find matches for a specific ASN&lt;/span&gt;
bgpdump updates.20200428.1815 | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'AS6447'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Parsing through a rib file you can find figure out what ASNs are associated with what ranges and are still active.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;So I’m still not concluded … but you can start to see how the pieces are coming together. I’m not clear on how you get specific states or cities, but that’s why things are not concluded.&lt;/p&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;
&lt;p&gt;During my process of searching for data I always find useful looks that directly contributed to my discoveries or are related.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://host.io/&quot;&gt;https://host.io/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blogofsomeguy.com/a/2017-07-26/fastmetrics-p4-mapping-ip-to-asn.html&quot;&gt;https://blogofsomeguy.com/a/2017-07-26/fastmetrics-p4-mapping-ip-to-asn.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/t2mune/mrtparse/blob/master/examples/summary.py&quot;&gt;https://github.com/t2mune/mrtparse/blob/master/examples/summary.py&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ftp.ripe.net/ripe/ipmap/&quot;&gt;https://ftp.ripe.net/ripe/ipmap/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://asn.cymru.com/&quot;&gt;https://asn.cymru.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.iana.org/whois?q=67.187.185.36&quot;&gt;https://www.iana.org/whois?q=67.187.185.36&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://search.arin.net/rdap/?query=67.187.185.36&amp;amp;searchFilter=ipaddr&quot;&gt;https://search.arin.net/rdap/?query=67.187.185.36&amp;amp;searchFilter=ipaddr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://team-cymru.com/community-services/ip-asn-mapping/&quot;&gt;https://team-cymru.com/community-services/ip-asn-mapping/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rest.db.ripe.net/search?query-string=8.8.8.8&amp;amp;type-filter=inetnum&quot;&gt;http://rest.db.ripe.net/search?query-string=8.8.8.8&amp;amp;type-filter=inetnum&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hackertarget.com/as-ip-lookup/&quot;&gt;https://hackertarget.com/as-ip-lookup/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rdap.arin.net/registry/ip/8.8.8.8&quot;&gt;https://rdap.arin.net/registry/ip/8.8.8.8&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Look at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arin_originas0_originautnums&lt;/code&gt; for ASN&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.arin.net/resources/registry/whois/rdap/#rdap-urls&quot;&gt;https://www.arin.net/resources/registry/whois/rdap/#rdap-urls&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.icann.org/rdap&quot;&gt;https://www.icann.org/rdap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="tools" /><category term="ip" /><summary type="html">I’ve wondered for quite some time, how do sites like https://ipinfo.io get their data? Secondly, the question I had was “Could I gather/build out the data used by these sorts of services?”. Off the bat, looking at the data, I made the assumption that the ownership data is stored publicly or “premiumly” that I could access, but where? So I did some digging around and below is some the datasets I discovered.</summary></entry><entry><title type="html">Getting sneaky with DNS for SSRF</title><link href="http://ahermosilla.com/security/2020/06/04/sneaky-dns-ssrf.html" rel="alternate" type="text/html" title="Getting sneaky with DNS for SSRF" /><published>2020-06-04T00:00:00+00:00</published><updated>2020-06-04T00:00:00+00:00</updated><id>http://ahermosilla.com/security/2020/06/04/sneaky-dns-ssrf</id><content type="html" xml:base="http://ahermosilla.com/security/2020/06/04/sneaky-dns-ssrf.html">&lt;p&gt;Generally when I make http requests against a domain, I wouldn’t expect it to make requests on my localhost - but sometimes, just that happens. For getting sneaky with &lt;a href=&quot;https://owasp.org/www-community/attacks/Server_Side_Request_Forgery&quot;&gt;SSRF&lt;/a&gt; attacks you can have a DNS record point to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;. When a record pointing to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt; is resolved, your application will end up making requests &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;. For experimentation, I used one of Rapid7’s free datasets, &amp;amp; found the domain &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;volks-seat.de&lt;/code&gt; pointing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;. It never occurred to me you could do such a thing so I did some digging ;) to see what I could learn.&lt;/p&gt;

&lt;h3 id=&quot;check-record&quot;&gt;Check Record&lt;/h3&gt;
&lt;p&gt;You can check DNS record for a domain you suspect is pointing to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;. Using dig check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANSWER&lt;/code&gt; section for where the domain points. I confirmed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;volks-seat.de&lt;/code&gt; did in fact point to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dig volks-seat.de | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-A2&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;';; ANSWER'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ;; ANSWER SECTION:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# volks-seat.de.          71858   IN      A       127.0.0.1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;quick-test&quot;&gt;Quick Test&lt;/h3&gt;
&lt;p&gt;Okay, so DNS resolves the domain to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;, how do applications actually respond to this? As a basic test, I started a webserver on my machine to simple list the contents of a directory.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Start up a webserver in a directory
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pwd &amp;amp;&amp;amp; echo ruh_roh_raggy &amp;gt; zzzzz_flag.txt&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python -m SimpleHTTPServer 8000&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Fetch the page and see if anything looks familiar
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl http://volks-seat.de:8000&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;You’ll see towards the end of the output &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zzzzz_flag.txt&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -vs http://volks-seat.de:8000 2&amp;gt;&amp;amp;1 | grep Connected&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;When showing verbose output you’ll see curl connecting to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;example-app&quot;&gt;Example App&lt;/h3&gt;
&lt;p&gt;So how does this come into play with SSRF in your app? An application may have a whitelist/blacklist of valid hosts to perform certain actions against. Let’s imagine you had an app that simply checked if a site was up or not. We want to prevent users from trying to access private assets so we create a basic blacklist of hosts that we won’t want to be reached. Let’s take a look at this basic example below that captures the concept.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ignore_hosts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'127.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'169.254.169.254'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s1&quot;&gt;'0.0.0.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'192.168.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'10.0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'172.16.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$url_alive&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://volks-seat.de:3000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$parsed_url&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parse_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url_alive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$parsed_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Invalid host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;in_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$parsed_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ignore_hosts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Invalid host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// We should also check protocol ... &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ... but you get the idea&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_get_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url_alive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;explode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$http_response_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;??&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;HTTP/1.1 0 x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;??&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'success'&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'status_code'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$status_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'body'&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can see the hostname is checked from the parse uri, but that is not enough to protect yourself. The example above is problematic because once the “bad” DNS record is resolved, the ip the hostname resolves to ends up being &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;. An attacker can “recon” our internal server adding tests for every port (0-65535) with the same domain to see what else can be found. If, for example, you had Elasticsearch running without authentication, an attacker could add the url &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://volks-seat.de:9200/_stats/indexing,store&lt;/code&gt; and access content you wouldn’t want them to.&lt;/p&gt;

&lt;p&gt;To actually make sure everything is sane, the application needs to resolve the host and make sure the host is not a host we want to ignore&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Resolve the ip and make sure that is not in the blacklist&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Naive, may not be performant&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;gethostbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$parsed_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; 

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;in_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$parsed_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ignore_hosts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;in_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ignore_hosts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Invalid host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;finding-records&quot;&gt;Finding Records&lt;/h3&gt;
&lt;p&gt;You can take a look at some dns records pointing to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt; using Rapid7’s public dataset
https://blog.rapid7.com/2018/10/16/how-to-conduct-dns-reconnaissance-for-02-using-rapid7-open-data-and-aws/&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rapid7_fdns_any&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'127.0.0.1'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;https://owasp.org/www-community/attacks/Server_Side_Request_Forgery&lt;/li&gt;
  &lt;li&gt;https://blog.appsecco.com/an-ssrf-privileged-aws-keys-and-the-capital-one-breach-4c3c2cded3af&lt;/li&gt;
  &lt;li&gt;https://www.hackerone.com/blog-How-To-Server-Side-Request-Forgery-SSRF&lt;/li&gt;
  &lt;li&gt;https://portswigger.net/web-security/ssrf&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dns-rebinding&quot;&gt;DNS Rebinding&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Related&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An app many check the DNS record for a domain to ensure the domain does not point to private instances. With DNS rebinding attacks, you have a short TTL for a record which changes between a public ip &amp;amp; a private ip. Your application may see that a domain resolves to a public ip and then continues on to the request, but if you don’t explicitly use the ip that was resolved earlier, the library/module making requests may make another DNS query which resolves to a private ip since the original DNS request.&lt;/p&gt;

&lt;h4 id=&quot;links-1&quot;&gt;Links&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;https://medium.com/@brannondorsey/attacking-private-networks-from-the-internet-with-dns-rebinding-ea7098a2d325&lt;/li&gt;
  &lt;li&gt;https://danielmiessler.com/blog/dns-rebinding-explained/&lt;/li&gt;
  &lt;li&gt;https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2018/august/singularity-of-origin-a-dns-rebinding-attack-framework/&lt;/li&gt;
  &lt;li&gt;https://github.com/nccgroup/singularity&lt;/li&gt;
  &lt;li&gt;https://github.com/taviso/rbndr&lt;/li&gt;
  &lt;li&gt;https://research.nccgroup.com/2020/03/30/impact-of-dns-over-https-doh-on-dns-rebinding-attacks/&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="security" /><category term="ssrf" /><category term="dns" /><summary type="html">Generally when I make http requests against a domain, I wouldn’t expect it to make requests on my localhost - but sometimes, just that happens. For getting sneaky with SSRF attacks you can have a DNS record point to 127.0.0.1. When a record pointing to 127.0.0.1 is resolved, your application will end up making requests 127.0.0.1. For experimentation, I used one of Rapid7’s free datasets, &amp;amp; found the domain volks-seat.de pointing 127.0.0.1. It never occurred to me you could do such a thing so I did some digging ;) to see what I could learn.</summary></entry><entry><title type="html">Thinking about computer science?</title><link href="http://ahermosilla.com/learning/2017/07/29/thinking-about-com-sci.html" rel="alternate" type="text/html" title="Thinking about computer science?" /><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><id>http://ahermosilla.com/learning/2017/07/29/thinking-about-com-sci</id><content type="html" xml:base="http://ahermosilla.com/learning/2017/07/29/thinking-about-com-sci.html">&lt;p&gt;My initial career plans were to get degree in Mechanical Engineering. Plans didn’t go as planned, and I wasn’t quite 
mature enough to handle the level of rigor immediately outside of high school. My plans evolved into an art direction, 
since I always enjoyed art &amp;amp; I decided to ignore the $$$ (or there lack of) problem with art careers. From art, I realized 
I needed to make some money so I honed in on Graphic Design, which actually described my art process anyways. I went to 
community college, and then to Fresno State majored in GD and minored in Philosophy. My first job out of school was doing 
front-end development. My background in design and small experience with coding HTML/CSS made me a good fit for the position 
which consisted mostly of PSD to HMTL conversion. There I realized I could make the computer do repetitive tasks for me so 
that I wouldn’t have to - welcome to programming! From that position I moved on to another marketing agency doing the same
 thing, but more advanced websites, also while doing design as well. From there I made the jump into full-time development as 
a Software Engineer.&lt;/p&gt;

&lt;p&gt;Before I give any advice suggestions regarding programming I will give you some general advice/questions to help you decide what to pursue.
What activity did/do you most enjoy when you were younger?
When I was a kid, I always enjoyed building things with Legos. For a long time I knew when I was older I wanted to build stuff. 
Initially I thought that would be engineering, but I didn’t particularly enjoy the math and science (which changed after I ‘grew’ up) 
when I was younger. I realized an important part of the building for me was the aesthetic, which led me down the graphic design path. 
Recognizing what you enjoyed as a kid can help you identify careers that line up with who you are. That being said, be 
pragmatic at the same time. I enjoyed art, but choose a focus that could pay bills vs eating paint.&lt;/p&gt;

&lt;h3 id=&quot;what-sort-of-life-style-do-you-want-to-have&quot;&gt;What sort of life-style do you want to have?&lt;/h3&gt;
&lt;p&gt;Initially, before I settled on graphic design &amp;amp; then programming I decided I wanted a career that would give me flexibility and 
wouldn’t require me to necessarily work every day or even at a specific location. I wanted something that I could easily work from home and/or 
for myself. I didn’t care as much about money, I just wanted freedom - I just always assumed money was the avenue to freedom.
 Some people like to travel, some people like to be outdoors, some people like
 to never see another person during their job, some people like variety and some people don’t. Figuring out what kind of lifestyle you want to live 
can help you eliminate a number of options and hone in on what make sense.&lt;/p&gt;

&lt;h3 id=&quot;where-do-you-want-to-live&quot;&gt;Where do you want to live?&lt;/h3&gt;
&lt;p&gt;I want to be where my family lives, which is currently Fresno area. STEM jobs in this area are typically ag-focused 
but there are places I can work. Now if I wanted to study Marine Biology, I probably couldn’t live in Fresno and do that. 
You need to consider what how the work you want to do lines up or doesn’t line up with where you you want to live&lt;/p&gt;

&lt;h3 id=&quot;what-is-the-forecast-of-career&quot;&gt;What is the forecast of career?&lt;/h3&gt;
&lt;p&gt;Will the field be relevant in 10 years? Does it pay enough to support a family? Will robots take over your job very soon?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.npr.org/sections/money/2015/05/21/408234543/will-your-job-be-done-by-a-machine&quot;&gt;http://www.npr.org/sections/money/2015/05/21/408234543/will-your-job-be-done-by-a-machine&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;avoid-college-debt&quot;&gt;Avoid College Debt&lt;/h3&gt;
&lt;p&gt;College debt carries with you until you pay it off. You can’t declare bankruptcy and rid yourself of it.
 It really puts you at a disadvantage financially. For this reason I would suggest starting off 
with community college and then go to a four year school. This is additionally helpful for students that are unsure – 
it’s not worth wasting money on general-ed classes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hamiltonproject.org/charts/undergraduate_student_loan_calculator&quot;&gt;http://www.hamiltonproject.org/charts/undergraduate_student_loan_calculator&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;softwareprogramming&quot;&gt;Software/Programming&lt;/h2&gt;
&lt;h3 id=&quot;context&quot;&gt;Context&lt;/h3&gt;
&lt;p&gt;My focus in the world of software is and will always be the web so my suggestions as far as technology goes will be web-slanted. 
Many of the suggestions transcend the web platform but do keep that in mind.&lt;/p&gt;

&lt;p&gt;Computers are constantly evolving machines. They require you to also evolve to maintain relevance in the industry. If you enjoy learning and trying new things you will be fine. If you don’t enjoy constant evolution and change, you probably won’t be happy. Below are some good ingredients to success.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adaptiveness&lt;/li&gt;
  &lt;li&gt;Not afraid of trial and error&lt;/li&gt;
  &lt;li&gt;Humility&lt;/li&gt;
  &lt;li&gt;Learning&lt;/li&gt;
  &lt;li&gt;Can-do-attitude&lt;/li&gt;
  &lt;li&gt;Efficiency&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;learn-linux&quot;&gt;Learn Linux&lt;/h3&gt;
&lt;p&gt;Linux is on servers, phones, cameras, cars … linux is everywhere! No matter what you decide to focus on software wise you will probably have to work with linux. In fact, good ol’ Microsft released .NET for linux and is transitioning Azure to linux? To learn install Ubuntu (easiest to start with) on a computer and learn the command line. You can also get an Amazon EC2 free instance! Most servers are linux and the number of jobs you can get just from being awesome at linux is quite substantial.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;Virtualbox&lt;/a&gt; - Fire up a linux vm!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overthewire.org/wargames/bandit/bandit0.html&quot;&gt;http://overthewire.org/wargames/bandit/bandit0.html&lt;/a&gt;  - use ssh to learn on a vm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/ec2/pricing/&quot;&gt;AWS EC2&lt;/a&gt; - free tier!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jlevy/the-art-of-command-line&quot;&gt;CLI Tips &amp;amp; Tricks&lt;/a&gt; - lots of cli tips&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;learn-languages&quot;&gt;Learn Languages&lt;/h3&gt;
&lt;p&gt;You should learn the language that fits into the industry that interests you - if you aren’t sure yet what you interests you, that’s ok. Below are some common language that are good to know and are pretty universal. Keep in mind this advice come from the web platform perspective.&lt;/p&gt;

&lt;p&gt;In regards to learning specifically, you can only learn if you do. Come up with a project, and create it in the language you want to learn. A simple project for learning a web stack for example is to make a twitter clone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Charts on Trends&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.tiobe.com/tiobe_index&quot;&gt;Tiobe Index&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.indeed.com/jobtrends/q-python-q-javascript-q-ruby-q-c++.html&quot;&gt;Indeed Trends&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;python&quot;&gt;Python&lt;/h4&gt;
&lt;p&gt;Python is an easy language to get started with. It is supported on every platform and is easy to read. It does a good job of introducing you to programming concepts and to clean code. Almost every software company has python somewhere in their infrastructure – I can guarantee you, you can use it the rest of your career. There are so many resources&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://learnpythonthehardway.org/&quot;&gt;Python the Hard way&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codecademy.com/learn/python&quot;&gt;Code Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;javascript&quot;&gt;JavaScript&lt;/h4&gt;
&lt;p&gt;“Always bet on JavaScript” - It is the “Lingua franca” of the web. There are tons of resources everywhere and you don’t need
anything other than a browser to get started on it. Personally I have spent the most time on JavaScript and really enjoy it
but there are lots of gotchas compared to python that make it less intuitive.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/&quot;&gt;NodeSchool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bonsaiden.github.io/JavaScript-Garden/&quot;&gt;JavaScript Garden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;golang&quot;&gt;Golang&lt;/h4&gt;
&lt;p&gt;Golang is a statically typed language that was designed with concurrency from the get-go. It’s a very fast and up and coming platform.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gobyexample.com/&quot;&gt;Go by Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;learn-a-database&quot;&gt;Learn a Database&lt;/h4&gt;
&lt;p&gt;MySql, SQL Server, Postgres - it doesn’t matter, just know some SQL basics! Relational databases are going to be here forever
and so familiarity with creating data structures and querying data is handy-dandy!&lt;/p&gt;

&lt;h4 id=&quot;learn-version-control&quot;&gt;Learn Version Control&lt;/h4&gt;
&lt;p&gt;Version control is a skill every professioanl developer must have! If you work on a team or even by yourself
the organization you’ll be working at will have something.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codeschool.com/courses/try-git&quot;&gt;https://www.codeschool.com/courses/try-git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.git-tower.com/learn/ &quot;&gt;https://www.git-tower.com/learn/ &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/git/&quot;&gt;https://www.atlassian.com/git/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://learngitbranching.js.org/ &quot;&gt;http://learngitbranching.js.org/ &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;resources-for-learning&quot;&gt;Resources for learning&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/karlhorky/learn-to-program&quot;&gt;https://github.com/karlhorky/learn-to-program&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://exercism.io/&quot;&gt;http://exercism.io/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codecademy.com/&quot;&gt;https://www.codecademy.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tutsplus.com/&quot;&gt;http://tutsplus.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://teamtreehouse.com/&quot;&gt;https://teamtreehouse.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codeschool.com/&quot;&gt;https://www.codeschool.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.pluralsight.com/&quot;&gt;https://www.pluralsight.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;alternative-degrees&quot;&gt;Alternative Degrees&lt;/h3&gt;
&lt;p&gt;Computer science degrees don’t guarantee success or jobs and are generally  at least 5+ years  behind current trends. The reality is your best education will be self motivated using many of the online resources available. I think generally getting a degree is a good idea, but it may serve you well to have a degree to complement your self-guided computer education.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Complementary&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Economics, Finance, Business, Statistics, Cognitive Science, Psychology, Linguistics, Mathematics, Graphic Design/Comm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Related&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Engineering, Information System&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are tons of industries that have lots of oppurtunity if you have mixed disciplines. Many industries have barely started
leveraging computers so many are ripe the evolution brought on by software. For example if you combo a medical education
with a software education you will have unique opportunities that require expertise in both fields that others could never have.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.quora.com/What-advice-would-you-give-to-a-Computer-Science-major-student-that-you-wish-you-were-given-when-you-started-Computer-Science&quot;&gt;https://www.quora.com/What-advice-would-you-give-to-a-Computer-Science-major-student-that-you-wish-you-were-given-when-you-started-Computer-Science&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="learning" /><category term="raw" /><category term="ideas" /><summary type="html">My initial career plans were to get degree in Mechanical Engineering. Plans didn’t go as planned, and I wasn’t quite mature enough to handle the level of rigor immediately outside of high school. My plans evolved into an art direction, since I always enjoyed art &amp;amp; I decided to ignore the $$$ (or there lack of) problem with art careers. From art, I realized I needed to make some money so I honed in on Graphic Design, which actually described my art process anyways. I went to community college, and then to Fresno State majored in GD and minored in Philosophy. My first job out of school was doing front-end development. My background in design and small experience with coding HTML/CSS made me a good fit for the position which consisted mostly of PSD to HMTL conversion. There I realized I could make the computer do repetitive tasks for me so that I wouldn’t have to - welcome to programming! From that position I moved on to another marketing agency doing the same thing, but more advanced websites, also while doing design as well. From there I made the jump into full-time development as a Software Engineer. Before I give any advice suggestions regarding programming I will give you some general advice/questions to help you decide what to pursue. What activity did/do you most enjoy when you were younger? When I was a kid, I always enjoyed building things with Legos. For a long time I knew when I was older I wanted to build stuff. Initially I thought that would be engineering, but I didn’t particularly enjoy the math and science (which changed after I ‘grew’ up) when I was younger. I realized an important part of the building for me was the aesthetic, which led me down the graphic design path. Recognizing what you enjoyed as a kid can help you identify careers that line up with who you are. That being said, be pragmatic at the same time. I enjoyed art, but choose a focus that could pay bills vs eating paint. What sort of life-style do you want to have? Initially, before I settled on graphic design &amp;amp; then programming I decided I wanted a career that would give me flexibility and wouldn’t require me to necessarily work every day or even at a specific location. I wanted something that I could easily work from home and/or for myself. I didn’t care as much about money, I just wanted freedom - I just always assumed money was the avenue to freedom. Some people like to travel, some people like to be outdoors, some people like to never see another person during their job, some people like variety and some people don’t. Figuring out what kind of lifestyle you want to live can help you eliminate a number of options and hone in on what make sense. Where do you want to live? I want to be where my family lives, which is currently Fresno area. STEM jobs in this area are typically ag-focused but there are places I can work. Now if I wanted to study Marine Biology, I probably couldn’t live in Fresno and do that. You need to consider what how the work you want to do lines up or doesn’t line up with where you you want to live What is the forecast of career? Will the field be relevant in 10 years? Does it pay enough to support a family? Will robots take over your job very soon? http://www.npr.org/sections/money/2015/05/21/408234543/will-your-job-be-done-by-a-machine Avoid College Debt College debt carries with you until you pay it off. You can’t declare bankruptcy and rid yourself of it. It really puts you at a disadvantage financially. For this reason I would suggest starting off with community college and then go to a four year school. This is additionally helpful for students that are unsure – it’s not worth wasting money on general-ed classes. http://www.hamiltonproject.org/charts/undergraduate_student_loan_calculator Software/Programming Context My focus in the world of software is and will always be the web so my suggestions as far as technology goes will be web-slanted. Many of the suggestions transcend the web platform but do keep that in mind. Computers are constantly evolving machines. They require you to also evolve to maintain relevance in the industry. If you enjoy learning and trying new things you will be fine. If you don’t enjoy constant evolution and change, you probably won’t be happy. Below are some good ingredients to success. Adaptiveness Not afraid of trial and error Humility Learning Can-do-attitude Efficiency Learn Linux Linux is on servers, phones, cameras, cars … linux is everywhere! No matter what you decide to focus on software wise you will probably have to work with linux. In fact, good ol’ Microsft released .NET for linux and is transitioning Azure to linux? To learn install Ubuntu (easiest to start with) on a computer and learn the command line. You can also get an Amazon EC2 free instance! Most servers are linux and the number of jobs you can get just from being awesome at linux is quite substantial. Virtualbox - Fire up a linux vm! http://overthewire.org/wargames/bandit/bandit0.html - use ssh to learn on a vm AWS EC2 - free tier! CLI Tips &amp;amp; Tricks - lots of cli tips Learn Languages You should learn the language that fits into the industry that interests you - if you aren’t sure yet what you interests you, that’s ok. Below are some common language that are good to know and are pretty universal. Keep in mind this advice come from the web platform perspective. In regards to learning specifically, you can only learn if you do. Come up with a project, and create it in the language you want to learn. A simple project for learning a web stack for example is to make a twitter clone. Charts on Trends Tiobe Index Indeed Trends Python Python is an easy language to get started with. It is supported on every platform and is easy to read. It does a good job of introducing you to programming concepts and to clean code. Almost every software company has python somewhere in their infrastructure – I can guarantee you, you can use it the rest of your career. There are so many resources Python the Hard way Code Academy JavaScript “Always bet on JavaScript” - It is the “Lingua franca” of the web. There are tons of resources everywhere and you don’t need anything other than a browser to get started on it. Personally I have spent the most time on JavaScript and really enjoy it but there are lots of gotchas compared to python that make it less intuitive. NodeSchool JavaScript Garden Golang Golang is a statically typed language that was designed with concurrency from the get-go. It’s a very fast and up and coming platform. Go by Example Learn a Database MySql, SQL Server, Postgres - it doesn’t matter, just know some SQL basics! Relational databases are going to be here forever and so familiarity with creating data structures and querying data is handy-dandy! Learn Version Control Version control is a skill every professioanl developer must have! If you work on a team or even by yourself the organization you’ll be working at will have something. https://www.codeschool.com/courses/try-git https://www.git-tower.com/learn/ https://www.atlassian.com/git/ http://learngitbranching.js.org/ Resources for learning https://github.com/karlhorky/learn-to-program http://exercism.io/ https://www.codecademy.com/ http://tutsplus.com/ https://teamtreehouse.com/ https://www.codeschool.com/ https://www.pluralsight.com/ Alternative Degrees Computer science degrees don’t guarantee success or jobs and are generally at least 5+ years behind current trends. The reality is your best education will be self motivated using many of the online resources available. I think generally getting a degree is a good idea, but it may serve you well to have a degree to complement your self-guided computer education. Complementary Economics, Finance, Business, Statistics, Cognitive Science, Psychology, Linguistics, Mathematics, Graphic Design/Comm Related Engineering, Information System There are tons of industries that have lots of oppurtunity if you have mixed disciplines. Many industries have barely started leveraging computers so many are ripe the evolution brought on by software. For example if you combo a medical education with a software education you will have unique opportunities that require expertise in both fields that others could never have. https://www.quora.com/What-advice-would-you-give-to-a-Computer-Science-major-student-that-you-wish-you-were-given-when-you-started-Computer-Science</summary></entry><entry><title type="html">Design resources for developers</title><link href="http://ahermosilla.com/craftmanship/2017/07/29/design-for-devs.html" rel="alternate" type="text/html" title="Design resources for developers" /><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><id>http://ahermosilla.com/craftmanship/2017/07/29/design-for-devs</id><content type="html" xml:base="http://ahermosilla.com/craftmanship/2017/07/29/design-for-devs.html">&lt;p&gt;As a developer, it is beneficial to understand basics of design
and how people digest information. You may think to yourself that you will never
have to create a visual interface, but the reality is even code
has a visual aspect which has impact on its consumption. A deeper
understanding of visual perception can positively impact your code!&lt;/p&gt;

&lt;h4 id=&quot;principles&quot;&gt;Principles&lt;/h4&gt;
&lt;p&gt;Design is a mature industry with centuries of application and study. There are many
tried and true principles and concepts that you should apply and keep in mind when
creating designs. Also understanding the elements of design and how they relate 
together allows you to put the pieces together in a cohesive fashion&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://www.johnlovett.com/test.htm&lt;/li&gt;
  &lt;li&gt;http://visual.ly/6-principles-design&lt;/li&gt;
  &lt;li&gt;http://learndesignprinciples.com/&lt;/li&gt;
  &lt;li&gt;http://www.creativebloq.com/graphic-design/gestalt-theory-10134960&lt;/li&gt;
  &lt;li&gt;http://graphicdesign.spokanefalls.edu/tutorials/process/gestaltprinciples/gestaltprinc.htm&lt;/li&gt;
  &lt;li&gt;http://lifehacker.com/5739492/learn-the-basics-of-design-this-weekend&lt;/li&gt;
  &lt;li&gt;http://justcreative.com/2008/06/13/how-to-design-learn-the-basics/&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;typography&quot;&gt;Typography&lt;/h4&gt;
&lt;p&gt;A vast amount of information that is communicated is in the form of text.
The visual form of this text affects how the information presented is consumed.
If letters are very too close together or too far apart, reading can be hindered. 
If margin between lines of text is too big, discerning if information belongs together
can become difficult. Typography is about addressing these sorts of problems with
text and presenting text in a legible readable format.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;http://tangledindesign.com/5-basic-principles-you-must-consider-to-master-the-art-of-typography/&lt;/li&gt;
  &lt;li&gt;https://www.smashingmagazine.com/2009/03/10-principles-for-readable-web-typography/&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;layouts&quot;&gt;Layouts&lt;/h4&gt;
&lt;p&gt;TODO&lt;/p&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;
&lt;p&gt;There are a number of resources to help developer types understand basics of design. 
I’ve also included articles that cover the the concept of information hierarchy,
which is very important tool for aiding the digestion of information.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://blog.prototypr.io/design-for-programmers-d38c56982cd0&lt;/li&gt;
  &lt;li&gt;https://hackdesign.org/lessons&lt;/li&gt;
  &lt;li&gt;https://webdesign.tutsplus.com/articles/typography-basics-for-developers–webdesign-14025&lt;/li&gt;
  &lt;li&gt;http://www.slideshare.net/Wolfr/design-for-developersonlineversionlong/25-Examples_of_desirable_qualities_Fast&lt;/li&gt;
  &lt;li&gt;https://realm.io/news/christopher-downer-design-101-for-developers/&lt;/li&gt;
  &lt;li&gt;https://www.smashingmagazine.com/2015/02/design-principles-dominance-focal-points-hierarchy/&lt;/li&gt;
  &lt;li&gt;https://thoughtbot.com/upcase/design-for-developers&lt;/li&gt;
  &lt;li&gt;http://www.dadapixel.com/blog/2014/7/30/opinion-information-density-isnt-as-important-as-information-hierarchy&lt;/li&gt;
  &lt;li&gt;https://www.smashingmagazine.com/2014/03/design-principles-visual-perception-and-the-principles-of-gestalt/&lt;/li&gt;
  &lt;li&gt;http://ui-patterns.com/&lt;/li&gt;
  &lt;li&gt;http://uxmag.com/&lt;/li&gt;
  &lt;li&gt;http://52weeksofux.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;showcases&quot;&gt;Showcases&lt;/h2&gt;
&lt;p&gt;Reading about principles &amp;amp; concepts is great but may feel abstract. 
Seeing finished products where these principles are applied helps tie 
the concepts together.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://www.awwwards.com/websites&lt;/li&gt;
  &lt;li&gt;pttrns.com&lt;/li&gt;
  &lt;li&gt;http://littlebigdetails.com/&lt;/li&gt;
  &lt;li&gt;https://material.uplabs.com/&lt;/li&gt;
  &lt;li&gt;http://beta.uihaus.com/&lt;/li&gt;
  &lt;li&gt;https://www.uplabs.com/&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tutorials&quot;&gt;Tutorials&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;https://tutsplus.com/&lt;/li&gt;
  &lt;li&gt;https://teamtreehouse.com/tracks/web-design&lt;/li&gt;
  &lt;li&gt;https://www.coursera.org/browse/computer-science/design-and-product?languages=en&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;books&quot;&gt;Books&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;https://www.amazon.com/Things-Designer-People-Voices-Matter/dp/0321767535&lt;/li&gt;
  &lt;li&gt;https://www.amazon.com/Dont-Make-Think-Revisited-Usability/dp/0321965515/ref=pd_sbs_14_img_0?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=KSRVRJR3RBHD00H7TVQD&lt;/li&gt;
  &lt;li&gt;https://www.amazon.com/Designing-Mind-Simple-Understanding-Interface/dp/012375030X/&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="craftmanship" /><category term="design" /><category term="raw" /><summary type="html">As a developer, it is beneficial to understand basics of design and how people digest information. You may think to yourself that you will never have to create a visual interface, but the reality is even code has a visual aspect which has impact on its consumption. A deeper understanding of visual perception can positively impact your code! Principles Design is a mature industry with centuries of application and study. There are many tried and true principles and concepts that you should apply and keep in mind when creating designs. Also understanding the elements of design and how they relate together allows you to put the pieces together in a cohesive fashion http://www.johnlovett.com/test.htm http://visual.ly/6-principles-design http://learndesignprinciples.com/ http://www.creativebloq.com/graphic-design/gestalt-theory-10134960 http://graphicdesign.spokanefalls.edu/tutorials/process/gestaltprinciples/gestaltprinc.htm http://lifehacker.com/5739492/learn-the-basics-of-design-this-weekend http://justcreative.com/2008/06/13/how-to-design-learn-the-basics/ Typography A vast amount of information that is communicated is in the form of text. The visual form of this text affects how the information presented is consumed. If letters are very too close together or too far apart, reading can be hindered. If margin between lines of text is too big, discerning if information belongs together can become difficult. Typography is about addressing these sorts of problems with text and presenting text in a legible readable format. http://tangledindesign.com/5-basic-principles-you-must-consider-to-master-the-art-of-typography/ https://www.smashingmagazine.com/2009/03/10-principles-for-readable-web-typography/ Layouts TODO Links There are a number of resources to help developer types understand basics of design. I’ve also included articles that cover the the concept of information hierarchy, which is very important tool for aiding the digestion of information. https://blog.prototypr.io/design-for-programmers-d38c56982cd0 https://hackdesign.org/lessons https://webdesign.tutsplus.com/articles/typography-basics-for-developers–webdesign-14025 http://www.slideshare.net/Wolfr/design-for-developersonlineversionlong/25-Examples_of_desirable_qualities_Fast https://realm.io/news/christopher-downer-design-101-for-developers/ https://www.smashingmagazine.com/2015/02/design-principles-dominance-focal-points-hierarchy/ https://thoughtbot.com/upcase/design-for-developers http://www.dadapixel.com/blog/2014/7/30/opinion-information-density-isnt-as-important-as-information-hierarchy https://www.smashingmagazine.com/2014/03/design-principles-visual-perception-and-the-principles-of-gestalt/ http://ui-patterns.com/ http://uxmag.com/ http://52weeksofux.com Showcases Reading about principles &amp;amp; concepts is great but may feel abstract. Seeing finished products where these principles are applied helps tie the concepts together. http://www.awwwards.com/websites pttrns.com http://littlebigdetails.com/ https://material.uplabs.com/ http://beta.uihaus.com/ https://www.uplabs.com/ Tutorials https://tutsplus.com/ https://teamtreehouse.com/tracks/web-design https://www.coursera.org/browse/computer-science/design-and-product?languages=en Books https://www.amazon.com/Things-Designer-People-Voices-Matter/dp/0321767535 https://www.amazon.com/Dont-Make-Think-Revisited-Usability/dp/0321965515/ref=pd_sbs_14_img_0?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=KSRVRJR3RBHD00H7TVQD https://www.amazon.com/Designing-Mind-Simple-Understanding-Interface/dp/012375030X/</summary></entry><entry><title type="html">Naming Things!</title><link href="http://ahermosilla.com/craftmanship/2017/02/08/naming-methods-variables.html" rel="alternate" type="text/html" title="Naming Things!" /><published>2017-02-08T00:00:00+00:00</published><updated>2017-02-08T00:00:00+00:00</updated><id>http://ahermosilla.com/craftmanship/2017/02/08/naming-methods-variables</id><content type="html" xml:base="http://ahermosilla.com/craftmanship/2017/02/08/naming-methods-variables.html">&lt;p&gt;** This is a work in progress, that mostly contains lots of good links **&lt;/p&gt;

&lt;p&gt;It’s one of the &lt;a href=&quot;http://martinfowler.com/bliki/TwoHardThings.html&quot;&gt;hardest things&lt;/a&gt; you do a 
programmer and also one of the most important aspects of writing code. 
Code is read &lt;a href=&quot;http://www.goodreads.com/quotes/835238-indeed-the-ratio-of-time-spent-reading-versus-writing-is&quot;&gt;10x more&lt;/a&gt;
than it’s written so when you are writing you need to be very thoughtful of the 
future readers, which are yourself &amp;amp; others. You want your code to be very
clear to readers, even if you are the only reader. Readability makes or break a project
There has been plenty of times that I don’t look at a piece of code for months 
and come back and have to re-learn what I what I was doing.&lt;/p&gt;

&lt;p&gt;An important principle for naming is to communicate intentions.&lt;/p&gt;

&lt;p&gt;The process of thoughtful naming also help you to identify code smells. If you are having 
a hard time naming a class, it may do too many things and should be possbily broken down.&lt;/p&gt;

&lt;h4 id=&quot;purpose--potential&quot;&gt;Purpose &amp;amp; Potential&lt;/h4&gt;
&lt;p&gt;There is this idea that people live up to their names, &amp;amp; derive meaning/purpose from
their name. You should apply this notion of naming things to objects. 
Naming something gives it a purpose &amp;amp; meaning - it essentially creates it’s “definition”.
If you name an object generically, it doesn’t have clear
definiion, clear boundaries.  Due to this lack of focus an object 
can quickly end up doing more than it should which lead be bad code smell.&lt;/p&gt;

&lt;h3 id=&quot;hints&quot;&gt;Hints&lt;/h3&gt;
&lt;p&gt;Is there a physical object that can help describe&lt;/p&gt;

&lt;p&gt;When you are struggling with naming something, created wordmaps, word graphs from
the name or concept that you are starting with.&lt;/p&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;
&lt;p&gt;Using a thesarus helps you to find similar terms that may better communicate 
intent &amp;amp;/or context&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://source-code-wordle.de/&quot;&gt;http://source-code-wordle.de/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://visualthesaurus.com/&quot;&gt;http://visualthesaurus.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.thesaurus.com/&quot;&gt;http://www.thesaurus.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inversely, if you enter your variable or method on the link and it’s on the list
then you probably shouldn’t use the name.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://sph.mn/o/svn?words=evnHndlr&quot;&gt;http://sph.mn/o/svn?words=evnHndlr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;seek&quot;&gt;Seek&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Names that reveal intent&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;class CommentModerator&lt;/code&gt; encapsulates logic for moderating comments&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find_configs(directory)&lt;/code&gt; returns list of configs from a directory&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;is_risky_command(command)&lt;/code&gt; returns true/false of risk of command&lt;/li&gt;
  &lt;li&gt;Names that remove need for comments&lt;/li&gt;
  &lt;li&gt;Be consistent&lt;/li&gt;
  &lt;li&gt;To name things that correlate to the domain&lt;/li&gt;
  &lt;li&gt;Accurately describe the variable or method&lt;/li&gt;
  &lt;li&gt;Conciseness over verbosity&lt;/li&gt;
  &lt;li&gt;Use analogies &amp;amp; metaphors&lt;/li&gt;
  &lt;li&gt;Scalable patterns&lt;/li&gt;
  &lt;li&gt;Have some fun&lt;/li&gt;
  &lt;li&gt;Memorable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;avoid&quot;&gt;Avoid&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Ambiguity
    &lt;ul&gt;
      &lt;li&gt;One letter or Short names&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Don’t use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bcz&lt;/code&gt; unless &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt; in loop&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Generic terms like &lt;em&gt;Manager&lt;/em&gt; or &lt;em&gt;Provider&lt;/em&gt; or &lt;em&gt;words&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;class ServiceProvider ...&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list = ['a', 'b', 'c']&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;process_data(d)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;word = &quot;word&quot;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file_handle = open('output.log')&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Uneeded abbreviations or prefixes/suffixes
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WordPrcsr&lt;/code&gt; vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WordProcessor&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Including type in variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;listOfCats&lt;/code&gt; vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cats&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Misleading names
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;words = [1, 2, 3]&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;has_word(sentence) # -&amp;gt; but returns 'string'&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Methods or functions that describe how it works
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query_mysql_users()&lt;/code&gt; vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_users()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cleverness&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nuke(cache)&lt;/code&gt; vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flush(cache)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shun(user)&lt;/code&gt; vs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ban(user)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;inspirations&quot;&gt;Inspirations&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bbc.co.uk/ontologies&quot;&gt;http://www.bbc.co.uk/ontologies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://schema.org/CreativeWork&quot;&gt;http://schema.org/CreativeWork&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://namingschemes.com/&quot;&gt;https://namingschemes.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ereadingworksheets.com/figurative-language/figurative-language-examples/metaphor-examples/&quot;&gt;http://www.ereadingworksheets.com/figurative-language/figurative-language-examples/metaphor-examples/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://literarydevices.net/a-huge-list-of-short-metaphor-examples/&quot;&gt;http://literarydevices.net/a-huge-list-of-short-metaphor-examples/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.scribd.com/doc/29896677/Some-Common-Traditional-Symbols-in-Western-Literature&quot;&gt;https://www.scribd.com/doc/29896677/Some-Common-Traditional-Symbols-in-Western-Literature&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://fos.iloveindia.com/analogy-examples.html&quot;&gt;http://fos.iloveindia.com/analogy-examples.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://24ways.org/2014/naming-things/&quot;&gt;https://24ways.org/2014/naming-things/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://deviq.com/naming-things/&quot;&gt;http://deviq.com/naming-things/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://a-nickels-worth.blogspot.com/2016/04/a-guide-to-naming-variables.html&quot;&gt;https://a-nickels-worth.blogspot.com/2016/04/a-guide-to-naming-variables.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yacoset.com/Home/naming-tips&quot;&gt;http://www.yacoset.com/Home/naming-tips&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bensmith.io/20-tips-for-better-naming&quot;&gt;http://bensmith.io/20-tips-for-better-naming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.makinggoodsoftware.com/2009/05/04/71-tips-for-naming-variables/&quot;&gt;http://www.makinggoodsoftware.com/2009/05/04/71-tips-for-naming-variables/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.eventhelix.com/RealtimeMantra/Object_Oriented/object_design_tips.htm&quot;&gt;http://www.eventhelix.com/RealtimeMantra/Object_Oriented/object_design_tips.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html&quot;&gt;http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://objology.blogspot.com/2011/09/one-of-best-bits-of-programming-advice.html&quot;&gt;http://objology.blogspot.com/2011/09/one-of-best-bits-of-programming-advice.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://codebuild.blogspot.com/2012/02/15-best-practices-of-variable-method.html&quot;&gt;http://codebuild.blogspot.com/2012/02/15-best-practices-of-variable-method.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://caseysoftware.com/blog/useful-naming-conventions&quot;&gt;http://caseysoftware.com/blog/useful-naming-conventions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mojones.net/how-to-pick-bad-function-and-variable-names.html&quot;&gt;http://mojones.net/how-to-pick-bad-function-and-variable-names.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yegor256.com/2015/03/09/objects-end-with-er.html&quot;&gt;http://www.yegor256.com/2015/03/09/objects-end-with-er.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ed.ac.uk/records-management/records-management/staff-guidance/electronic-records/naming-conventions&quot;&gt;http://www.ed.ac.uk/records-management/records-management/staff-guidance/electronic-records/naming-conventions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.c2.com/?IntentionRevealingNames&quot;&gt;http://wiki.c2.com/?IntentionRevealingNames&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.c2.com/?IntentionRevealingSelector&quot;&gt;http://wiki.c2.com/?IntentionRevealingSelector&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.outofscope.com/name-with-intention-not-implementation/&quot;&gt;http://www.outofscope.com/name-with-intention-not-implementation/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cs.uakron.edu/~chanc/CS490/SeniorSeminar2012/Lecture%202%20-%20Program%20Style/programming%20style.pdf&quot;&gt;http://www.cs.uakron.edu/~chanc/CS490/SeniorSeminar2012/Lecture%202%20-%20Program%20Style/programming%20style.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://signalvnoise.com/posts/3531-intention-revealing-methods&quot;&gt;https://signalvnoise.com/posts/3531-intention-revealing-methods&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names&quot;&gt;https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.c2.com/?TheWhatButNotTheWhy&quot;&gt;http://wiki.c2.com/?TheWhatButNotTheWhy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.c2.com/?DontNameClassesObjectManagerHandlerOrData&quot;&gt;http://wiki.c2.com/?DontNameClassesObjectManagerHandlerOrData&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.codinghorror.com/i-shall-call-it-somethingmanager/&quot;&gt;https://blog.codinghorror.com/i-shall-call-it-somethingmanager/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1866794/naming-classes-how-to-avoid-calling-everything-a-whatevermanager&quot;&gt;http://stackoverflow.com/questions/1866794/naming-classes-how-to-avoid-calling-everything-a-whatevermanager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sandywalsh.com/2010/04/am-i-bad-man-for-naming-my-classes.html&quot;&gt;http://www.sandywalsh.com/2010/04/am-i-bad-man-for-naming-my-classes.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.goyello.com/2013/05/17/express-names-in-code-bad-vs-clean/&quot;&gt;https://blog.goyello.com/2013/05/17/express-names-in-code-bad-vs-clean/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.itiseezee.com/?p=83&quot;&gt;http://www.itiseezee.com/?p=83&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2014/10/10-java-best-practices-to-name-variables-methods-classes-packages.html&quot;&gt;http://javarevisited.blogspot.com/2014/10/10-java-best-practices-to-name-variables-methods-classes-packages.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.carlopescio.com/2011/04/your-coding-conventions-are-hurting-you.html&quot;&gt;http://www.carlopescio.com/2011/04/your-coding-conventions-are-hurting-you.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ontologydesignpatterns.org/wiki/Submissions:ContentOPs&quot;&gt;http://ontologydesignpatterns.org/wiki/Submissions:ContentOPs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yesodweb.com/blog/2011/12/variable-naming-context&quot;&gt;http://www.yesodweb.com/blog/2011/12/variable-naming-context&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://breckyunits.com/naming-things.html&quot;&gt;http://breckyunits.com/naming-things.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://slidedeck.io/hoontw/naming-things&quot;&gt;http://slidedeck.io/hoontw/naming-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@cavill/how-to-name-your-product-876f78b959d4#.rb65jb5ju&quot;&gt;https://medium.com/@cavill/how-to-name-your-product-876f78b959d4#.rb65jb5ju&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.freshconsulting.com/development-principle-1-choose-appropriate-variable-names/&quot;&gt;https://www.freshconsulting.com/development-principle-1-choose-appropriate-variable-names/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="craftmanship" /><category term="ideas" /><category term="raw" /><summary type="html">** This is a work in progress, that mostly contains lots of good links **</summary></entry><entry><title type="html">Inspecting Windows with cli!</title><link href="http://ahermosilla.com/tools/2017/01/21/windows-commands.html" rel="alternate" type="text/html" title="Inspecting Windows with cli!" /><published>2017-01-21T00:00:00+00:00</published><updated>2017-01-21T00:00:00+00:00</updated><id>http://ahermosilla.com/tools/2017/01/21/windows-commands</id><content type="html" xml:base="http://ahermosilla.com/tools/2017/01/21/windows-commands.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#wmi&quot; id=&quot;markdown-toc-wmi&quot;&gt;WMI&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#powershell&quot; id=&quot;markdown-toc-powershell&quot;&gt;Powershell&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hardware&quot; id=&quot;markdown-toc-hardware&quot;&gt;Hardware&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#network&quot; id=&quot;markdown-toc-network&quot;&gt;Network&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#processes&quot; id=&quot;markdown-toc-processes&quot;&gt;Processes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m pretty green when it comes to knowledge of windows commands &amp;amp; cli tools.
From the security perspective, a large percent of businesses/corporations run 
windows on their platform, so some basic tools to introduce ideas is helpful!&lt;/p&gt;

&lt;h3 id=&quot;wmi&quot;&gt;WMI&lt;/h3&gt;
&lt;p&gt;With the command line you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wmic&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;powershell&lt;/code&gt; to utilize WMI (Windows Management Instrumentation) which can give you insight into all sorts of things about your system!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://betanews.com/2011/01/14/wmic-the-best-command-line-tool-you-ve-never-used/&quot;&gt;https://betanews.com/2011/01/14/wmic-the-best-command-line-tool-you-ve-never-used/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.dedoimedo.com/computers/windows-wmic.html&quot;&gt;http://www.dedoimedo.com/computers/windows-wmic.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://people.virginia.edu/~rtg2t/winadmin/wmic.html&quot;&gt;http://people.virginia.edu/~rtg2t/winadmin/wmic.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Get Windows Version&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; wmic os get Name,Version,BuildNumber,OSArchitecture,InstallDate
BuildNumber  InstallDate                Name                             OSArchitecture  Version
14393        20161028165102.000000-420  Microsoft Windows 10 Enterprise  64-bit          10.0.14393
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;powershell&quot;&gt;Powershell&lt;/h4&gt;
&lt;p&gt;@todo Fill this out more!&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-WmiObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-List&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Logged&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-WmiObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Win32_LoggedOnUser&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-WmiObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Win32_SystemUsers&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;processes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-WmiObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Win32_Process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Format-Table&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Wrap&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Property&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ExecutablePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProcessId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CreationDate&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;What&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;running&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startup&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Get-WmiObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Win32_StartupCommand&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;hardware&quot;&gt;Hardware&lt;/h3&gt;
&lt;p&gt;I used to always use cpu-z to id the hardware, but there are plenty of other tools to
figure out hardware is on the system you’re using.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; systeminfo

Host Name:                 REZEN
OS Name:                   Microsoft Windows 7 Professional
OS Version:                6.1.7601 Service Pack 1 Build 7601
OS Manufacturer:           Microsoft Corporation
OS Configuration:          Standalone Workstation
OS Build Type:             Multiprocessor Free
Registered Owner:          Andres
Registered Organization:
Product ID:                00371-153-6150126-85809
Original Install Date:     2/18/2013, 10:21:17 PM
System Boot Time:          1/31/2017, 9:22:30 PM
System Manufacturer:       To Be Filled By O.E.M.
System Model:              To Be Filled By O.E.M.
System Type:               x64-based PC
Processor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:              1 Processor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Installed.
                           &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;01]: AMD64 Family 16 Model 4 Stepping 2 AuthenticAMD ~3000 Mhz
BIOS Version:              American Megatrends Inc. P1.90, 5/24/2010
Windows Directory:         C:&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows
System Directory:          C:&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem32
Boot Device:               &lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume3
System Locale:             en-us&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;English &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;United States&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Input Locale:              en-us&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;English &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;United States&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Time Zone:                 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UTC-08:00&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Pacific Time &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;US &amp;amp; Canada&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
.....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; wmic memphysical get MaxCapacity
MaxCapacity
16777216
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; wmic baseboard list /format:LIST


&lt;span class=&quot;nv&quot;&gt;ConfigOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Depth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Base Board
&lt;span class=&quot;nv&quot;&gt;Height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;HostingBoard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TRUE
&lt;span class=&quot;nv&quot;&gt;HotSwappable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FALSE
&lt;span class=&quot;nv&quot;&gt;InstallDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Manufacturer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASRock
&lt;span class=&quot;nv&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Base Board
&lt;span class=&quot;nv&quot;&gt;OtherIdentifyingInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PartNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PoweredOn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TRUE
&lt;span class=&quot;nv&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A780FullDisplayPort
&lt;span class=&quot;nv&quot;&gt;Removable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FALSE
&lt;span class=&quot;nv&quot;&gt;Replaceable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TRUE
&lt;span class=&quot;nv&quot;&gt;RequiresDaughterBoard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FALSE
&lt;span class=&quot;nv&quot;&gt;SpecialRequirements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;OK
&lt;span class=&quot;nv&quot;&gt;Tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Base Board
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;network&quot;&gt;Network&lt;/h3&gt;
&lt;p&gt;On linux &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netstat&lt;/code&gt; are gold but on Windows the you have different tools. Well, there is netstat, but it’s different.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blogs.technet.microsoft.com/mrsnrub/2009/09/10/capturing-network-traffic-in-windows-7-server-2008-r2/&quot;&gt;https://blogs.technet.microsoft.com/mrsnrub/2009/09/10/capturing-network-traffic-in-windows-7-server-2008-r2/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netsh&lt;/code&gt; to capture traffic&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netsh trace start capture=yes
netsh trace stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;Get-WmiObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Win32_IP4RouteTable&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Format-Table&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Wrap&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Property&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Caption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Destination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; netsh int show int

Admin State    State          Type             Interface Name
-------------------------------------------------------------------------
Enabled        Connected      Dedicated        VirtualBox Host-Only Network
Enabled        Connected      Dedicated        Npcap Loopback Adapter
Enabled        Connected      Dedicated        VirtualBox Host-Only Network #2
Enabled        Connected      Dedicated        VirtualBox Host-Only Network #3
Enabled        Connected      Dedicated        Ethernet 2
Enabled        Connected      Dedicated        vEthernet (DockerNAT)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Quickly find gateway address&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; netsh interface ip show config | findstr &lt;span class=&quot;s2&quot;&gt;&quot;Default&quot;&lt;/span&gt;
    Default Gateway:                      10.15.128.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s find DNS!&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; netsh interface ip show config | findstr &lt;span class=&quot;s2&quot;&gt;&quot;DNS&quot;&lt;/span&gt;
    DNS servers configured through DHCP:  10.8.1.90
    Statically Configured DNS Servers:    192.168.1.104
    Statically Configured DNS Servers:    None
    Statically Configured DNS Servers:    None
    Statically Configured DNS Servers:    None
    Statically Configured DNS Servers:    None
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; netsh interface ipv4 show tcpconnections

MIB-II TCP Connection Entry
Local Address   Local Port      Remote Address  Remote Port     State
&lt;span class=&quot;nt&quot;&gt;-----------------------------------------------------------------------------&lt;/span&gt;
        0.0.0.0       22               0.0.0.0          0       Listen
        0.0.0.0      135               0.0.0.0          0       Listen
      10.0.75.1      139               0.0.0.0          0       Listen
  10.15.130.204      139               0.0.0.0          0       Listen
 169.254.54.117      139               0.0.0.0          0       Listen
      127.0.0.1     2201               0.0.0.0          0       Listen
      127.0.0.1     2202             127.0.0.1      10240  Established
      127.0.0.1     2202             127.0.0.1      13370  Established
      127.0.0.1     2202               0.0.0.0          0       Listen
      127.0.0.1     2222             127.0.0.1      14513  Established
      127.0.0.1     2222               0.0.0.0          0       Listen
  10.15.130.204     3144         65.52.108.195        443  Established
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;netstat&lt;/strong&gt; which is familiar is on Windows!&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; netstat &lt;span class=&quot;nt&quot;&gt;-ab&lt;/span&gt;

Active Connections

  Proto  Local Address          Foreign Address        State
  TCP    0.0.0.0:22             console-10:0           LISTENING
  SshProxy
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;svchost.exe]
  TCP    0.0.0.0:135            console-10:0           LISTENING
  RpcSs
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;svchost.exe]
  TCP    0.0.0.0:445            console-10:0           LISTENING
 Can not obtain ownership information
  TCP    0.0.0.0:1536           console-10:0           LISTENING
 Can not obtain ownership information
  TCP    0.0.0.0:1537           console-10:0           LISTENING
  EventLog
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;svchost.exe]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; netstat &lt;span class=&quot;nt&quot;&gt;-ao&lt;/span&gt;

Active Connections

  Proto  Local Address          Foreign Address        State           PID
  TCP    0.0.0.0:22             console-10:0           LISTENING       2720
  TCP    0.0.0.0:135            console-10:0           LISTENING       892
  TCP    0.0.0.0:445            console-10:0           LISTENING       4
  TCP    0.0.0.0:1536           console-10:0           LISTENING       592
  TCP    0.0.0.0:1537           console-10:0           LISTENING       372
  TCP    0.0.0.0:1538           console-10:0           LISTENING       1332
  TCP    0.0.0.0:1539           console-10:0           LISTENING       2024
  TCP    0.0.0.0:1541           console-10:0           LISTENING       732
  TCP    0.0.0.0:1550           console-10:0           LISTENING       748
  TCP    0.0.0.0:2179           console-10:0           LISTENING       2680
  TCP    0.0.0.0:3389           console-10:0           LISTENING       292
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;processes&quot;&gt;Processes&lt;/h3&gt;
&lt;p&gt;You need to be able to quickly check processes for anything phishy!&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; schtasks

Folder: &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
TaskName                                 Next Run Time          Status
&lt;span class=&quot;o&quot;&gt;========================================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===============&lt;/span&gt;
G2MUpdateTask-S-1-5-21-3622734366-314535 2/10/2017 4:07:00 PM   Ready
G2MUploadTask-S-1-5-21-3622734366-314535 2/10/2017 4:31:00 PM   Ready
GoogleUpdateTaskMachineCore              2/11/2017 1:58:09 PM   Ready
GoogleUpdateTaskMachineUA                2/10/2017 3:58:09 PM   Ready
klcp_update                              2/25/2017 7:10:00 PM   Ready
OneDrive Standalone Update Task v2       2/11/2017 4:41:36 PM   Ready
RtHDVBg_LENOVO_MICPKEY                   N/A                    Running
RTKCPL                                   N/A                    Running

Folder: &lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;icrosoft
TaskName                                 Next Run Time          Status
&lt;span class=&quot;o&quot;&gt;========================================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===============&lt;/span&gt;
INFO: There are no scheduled tasks presently available at your access level.

Folder: &lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;icrosoft&lt;span class=&quot;se&quot;&gt;\O&lt;/span&gt;ffice
TaskName                                 Next Run Time          Status
&lt;span class=&quot;o&quot;&gt;========================================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===============&lt;/span&gt;
Office Automatic Updates                 2/12/2017 4:01:03 AM   Ready
Office ClickToRun Service Monitor        2/11/2017 8:58:46 AM   Ready
Office Subscription Maintenance          2/11/2017 8:25:18 AM   Ready
OfficeTelemetryAgentFallBack2016         N/A                    Ready
OfficeTelemetryAgentLogOn2016            N/A                    Ready

Folder: &lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;icrosoft&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows
TaskName                                 Next Run Time          Status
&lt;span class=&quot;o&quot;&gt;========================================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===============&lt;/span&gt;
INFO: There are no scheduled tasks presently available at your access level.

.....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; tasklist                                                                        
                                                                                  
Image Name                     PID Session Name        Session#    Mem Usage      
&lt;span class=&quot;o&quot;&gt;=========================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;========&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;============&lt;/span&gt;      
System Idle Process              0 Services                   0          4 K      
System                           4 Services                   0         32 K      
smss.exe                       324 Services                   0        336 K      
csrss.exe                      500 Services                   0      1,592 K      
wininit.exe                    592 Services                   0        836 K      
csrss.exe                      600 Console                    1      3,972 K      
winlogon.exe                   680 Console                    1      3,116 K      
services.exe                   732 Services                   0      4,660 K      
lsass.exe                      748 Services                   0     10,104 K      
svchost.exe                    840 Services                   0     10,992 K      
svchost.exe                    892 Services                   0      8,520 K      
svchost.exe                    292 Services                   0     19,944 K      
svchost.exe                    372 Services                   0     17,176 K      
svchost.exe                    384 Services                   0     15,152 K      
svchost.exe                   1104 Services                   0     15,980 K      
nvvsvc.exe                    1140 Services                   0      3,424 K      
nvSCPAPISvr.exe               1148 Services                   0      2,136 K      
svchost.exe                   1180 Services                   0     18,308 K      
svchost.exe                   1332 Services                   0     64,384 K      
nvxdsync.exe                  1380 Console                    1     13,292 K      
nvvsvc.exe                    1452 Console                    1      7,852 K      
svchost.exe                   1960 Services                   0      7,104 K      
svchost.exe                   2004 Services                   0      1,960 K      
spoolsv.exe                   2024 Services                   0      8,512 K      
svchost.exe                   2236 Services                   0     23,336 K      
com.docker.service            2252 Services                   0      2,552 K      
dirmngr.exe                   2280 Services                   0      1,568 K      
IpOverUsbSvc.exe              2296 Services                   0      2,576 K      
.....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="tools" /><category term="windows" /><summary type="html">WMI Powershell Hardware Network Processes I’m pretty green when it comes to knowledge of windows commands &amp;amp; cli tools. From the security perspective, a large percent of businesses/corporations run windows on their platform, so some basic tools to introduce ideas is helpful! WMI With the command line you can use wmic or powershell to utilize WMI (Windows Management Instrumentation) which can give you insight into all sorts of things about your system! https://betanews.com/2011/01/14/wmic-the-best-command-line-tool-you-ve-never-used/ http://www.dedoimedo.com/computers/windows-wmic.html http://people.virginia.edu/~rtg2t/winadmin/wmic.html Get Windows Version &amp;gt; wmic os get Name,Version,BuildNumber,OSArchitecture,InstallDate BuildNumber InstallDate Name OSArchitecture Version 14393 20161028165102.000000-420 Microsoft Windows 10 Enterprise 64-bit 10.0.14393 Powershell @todo Fill this out more! :: List available objects Get-WmiObject -List :: Logged on users Get-WmiObject Win32_LoggedOnUser :: Users ... Get-WmiObject Win32_SystemUsers :: Get processes Get-WmiObject Win32_Process | Format-Table -Wrap -Property Name,Path,ExecutablePath,ProcessId,CreationDate :: What is running in startup? Get-WmiObject Win32_StartupCommand Hardware I used to always use cpu-z to id the hardware, but there are plenty of other tools to figure out hardware is on the system you’re using. &amp;gt; systeminfo Host Name: REZEN OS Name: Microsoft Windows 7 Professional OS Version: 6.1.7601 Service Pack 1 Build 7601 OS Manufacturer: Microsoft Corporation OS Configuration: Standalone Workstation OS Build Type: Multiprocessor Free Registered Owner: Andres Registered Organization: Product ID: 00371-153-6150126-85809 Original Install Date: 2/18/2013, 10:21:17 PM System Boot Time: 1/31/2017, 9:22:30 PM System Manufacturer: To Be Filled By O.E.M. System Model: To Be Filled By O.E.M. System Type: x64-based PC Processor(s): 1 Processor(s) Installed. [01]: AMD64 Family 16 Model 4 Stepping 2 AuthenticAMD ~3000 Mhz BIOS Version: American Megatrends Inc. P1.90, 5/24/2010 Windows Directory: C:\Windows System Directory: C:\Windows\system32 Boot Device: \Device\HarddiskVolume3 System Locale: en-us;English (United States) Input Locale: en-us;English (United States) Time Zone: (UTC-08:00) Pacific Time (US &amp;amp; Canada) ..... &amp;gt; wmic memphysical get MaxCapacity MaxCapacity 16777216 &amp;gt; wmic baseboard list /format:LIST ConfigOptions= Depth= Description=Base Board Height= HostingBoard=TRUE HotSwappable=FALSE InstallDate= Manufacturer=ASRock Model= Name=Base Board OtherIdentifyingInfo= PartNumber= PoweredOn=TRUE Product=A780FullDisplayPort Removable=FALSE Replaceable=TRUE RequiresDaughterBoard=FALSE SpecialRequirements= Status=OK Tag=Base Board Network On linux tcpdump and netstat are gold but on Windows the you have different tools. Well, there is netstat, but it’s different. https://blogs.technet.microsoft.com/mrsnrub/2009/09/10/capturing-network-traffic-in-windows-7-server-2008-r2/ Instead of tcpdump you can use netsh to capture traffic netsh trace start capture=yes netsh trace stop Get-WmiObject Win32_IP4RouteTable | Format-Table -Wrap -Property Age,Caption,Mask,Destination,Name &amp;gt; netsh int show int Admin State State Type Interface Name ------------------------------------------------------------------------- Enabled Connected Dedicated VirtualBox Host-Only Network Enabled Connected Dedicated Npcap Loopback Adapter Enabled Connected Dedicated VirtualBox Host-Only Network #2 Enabled Connected Dedicated VirtualBox Host-Only Network #3 Enabled Connected Dedicated Ethernet 2 Enabled Connected Dedicated vEthernet (DockerNAT) Quickly find gateway address &amp;gt; netsh interface ip show config | findstr &quot;Default&quot; Default Gateway: 10.15.128.1 Let’s find DNS! &amp;gt; netsh interface ip show config | findstr &quot;DNS&quot; DNS servers configured through DHCP: 10.8.1.90 Statically Configured DNS Servers: 192.168.1.104 Statically Configured DNS Servers: None Statically Configured DNS Servers: None Statically Configured DNS Servers: None Statically Configured DNS Servers: None &amp;gt; netsh interface ipv4 show tcpconnections MIB-II TCP Connection Entry Local Address Local Port Remote Address Remote Port State ----------------------------------------------------------------------------- 0.0.0.0 22 0.0.0.0 0 Listen 0.0.0.0 135 0.0.0.0 0 Listen 10.0.75.1 139 0.0.0.0 0 Listen 10.15.130.204 139 0.0.0.0 0 Listen 169.254.54.117 139 0.0.0.0 0 Listen 127.0.0.1 2201 0.0.0.0 0 Listen 127.0.0.1 2202 127.0.0.1 10240 Established 127.0.0.1 2202 127.0.0.1 13370 Established 127.0.0.1 2202 0.0.0.0 0 Listen 127.0.0.1 2222 127.0.0.1 14513 Established 127.0.0.1 2222 0.0.0.0 0 Listen 10.15.130.204 3144 65.52.108.195 443 Established netstat which is familiar is on Windows! &amp;gt; netstat -ab Active Connections Proto Local Address Foreign Address State TCP 0.0.0.0:22 console-10:0 LISTENING SshProxy [svchost.exe] TCP 0.0.0.0:135 console-10:0 LISTENING RpcSs [svchost.exe] TCP 0.0.0.0:445 console-10:0 LISTENING Can not obtain ownership information TCP 0.0.0.0:1536 console-10:0 LISTENING Can not obtain ownership information TCP 0.0.0.0:1537 console-10:0 LISTENING EventLog [svchost.exe] &amp;gt; netstat -ao Active Connections Proto Local Address Foreign Address State PID TCP 0.0.0.0:22 console-10:0 LISTENING 2720 TCP 0.0.0.0:135 console-10:0 LISTENING 892 TCP 0.0.0.0:445 console-10:0 LISTENING 4 TCP 0.0.0.0:1536 console-10:0 LISTENING 592 TCP 0.0.0.0:1537 console-10:0 LISTENING 372 TCP 0.0.0.0:1538 console-10:0 LISTENING 1332 TCP 0.0.0.0:1539 console-10:0 LISTENING 2024 TCP 0.0.0.0:1541 console-10:0 LISTENING 732 TCP 0.0.0.0:1550 console-10:0 LISTENING 748 TCP 0.0.0.0:2179 console-10:0 LISTENING 2680 TCP 0.0.0.0:3389 console-10:0 LISTENING 292 Processes You need to be able to quickly check processes for anything phishy! &amp;gt; schtasks Folder: \ TaskName Next Run Time Status ======================================== ====================== =============== G2MUpdateTask-S-1-5-21-3622734366-314535 2/10/2017 4:07:00 PM Ready G2MUploadTask-S-1-5-21-3622734366-314535 2/10/2017 4:31:00 PM Ready GoogleUpdateTaskMachineCore 2/11/2017 1:58:09 PM Ready GoogleUpdateTaskMachineUA 2/10/2017 3:58:09 PM Ready klcp_update 2/25/2017 7:10:00 PM Ready OneDrive Standalone Update Task v2 2/11/2017 4:41:36 PM Ready RtHDVBg_LENOVO_MICPKEY N/A Running RTKCPL N/A Running Folder: \Microsoft TaskName Next Run Time Status ======================================== ====================== =============== INFO: There are no scheduled tasks presently available at your access level. Folder: \Microsoft\Office TaskName Next Run Time Status ======================================== ====================== =============== Office Automatic Updates 2/12/2017 4:01:03 AM Ready Office ClickToRun Service Monitor 2/11/2017 8:58:46 AM Ready Office Subscription Maintenance 2/11/2017 8:25:18 AM Ready OfficeTelemetryAgentFallBack2016 N/A Ready OfficeTelemetryAgentLogOn2016 N/A Ready Folder: \Microsoft\Windows TaskName Next Run Time Status ======================================== ====================== =============== INFO: There are no scheduled tasks presently available at your access level. ..... &amp;gt; tasklist Image Name PID Session Name Session# Mem Usage ========================= ======== ================ =========== ============ System Idle Process 0 Services 0 4 K System 4 Services 0 32 K smss.exe 324 Services 0 336 K csrss.exe 500 Services 0 1,592 K wininit.exe 592 Services 0 836 K csrss.exe 600 Console 1 3,972 K winlogon.exe 680 Console 1 3,116 K services.exe 732 Services 0 4,660 K lsass.exe 748 Services 0 10,104 K svchost.exe 840 Services 0 10,992 K svchost.exe 892 Services 0 8,520 K svchost.exe 292 Services 0 19,944 K svchost.exe 372 Services 0 17,176 K svchost.exe 384 Services 0 15,152 K svchost.exe 1104 Services 0 15,980 K nvvsvc.exe 1140 Services 0 3,424 K nvSCPAPISvr.exe 1148 Services 0 2,136 K svchost.exe 1180 Services 0 18,308 K svchost.exe 1332 Services 0 64,384 K nvxdsync.exe 1380 Console 1 13,292 K nvvsvc.exe 1452 Console 1 7,852 K svchost.exe 1960 Services 0 7,104 K svchost.exe 2004 Services 0 1,960 K spoolsv.exe 2024 Services 0 8,512 K svchost.exe 2236 Services 0 23,336 K com.docker.service 2252 Services 0 2,552 K dirmngr.exe 2280 Services 0 1,568 K IpOverUsbSvc.exe 2296 Services 0 2,576 K .....</summary></entry></feed>