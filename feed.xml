<<<<<<< Updated upstream
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.3.0">Jekyll</generator><link href="http://ahermosilla.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://ahermosilla.com/" rel="alternate" type="text/html" /><updated>2020-03-11T16:23:02-07:00</updated><id>http://ahermosilla.com/feed.xml</id><title type="html">Andres Hermosilla | brain –archive</title><subtitle>Hi there, this is where I archive some of my brain records on development and design topics I've been working through. Some of these thoughts are raw as I'm evolving and others  are refined from years of experience.
=======
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.3.0">Jekyll</generator><link href="http://ahermosilla.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://ahermosilla.com/" rel="alternate" type="text/html" /><updated>2020-03-11T16:57:08-07:00</updated><id>http://ahermosilla.com/feed.xml</id><title type="html">Andres Hermosilla | brain –archive</title><subtitle>Hi there, this is where I archive some of my brain records on development and design topics I've been working through. Some of these thoughts are raw as I'm evolving and others  are refined from years of experience.
>>>>>>> Stashed changes
</subtitle><entry><title type="html">Thinking about computer science?</title><link href="http://ahermosilla.com/learning/2017/07/29/thinking-about-com-sci.html" rel="alternate" type="text/html" title="Thinking about computer science?" /><published>2017-07-29T00:00:00-07:00</published><updated>2017-07-29T00:00:00-07:00</updated><id>http://ahermosilla.com/learning/2017/07/29/thinking-about-com-sci</id><content type="html" xml:base="http://ahermosilla.com/learning/2017/07/29/thinking-about-com-sci.html">&lt;p&gt;My initial career plans were to get degree in Mechanical Engineering. Plans didn’t go as planned, and I wasn’t quite 
mature enough to handle the level of rigor immediately outside of high school. My plans evolved into an art direction, 
since I always enjoyed art &amp;amp; I decided to ignore the $$$ (or there lack of) problem with art careers. From art, I realized 
I needed to make some money so I honed in on Graphic Design, which actually described my art process anyways. I went to 
community college, and then to Fresno State majored in GD and minored in Philosophy. My first job out of school was doing 
front-end development. My background in design and small experience with coding HTML/CSS made me a good fit for the position 
which consisted mostly of PSD to HMTL conversion. There I realized I could make the computer do repetitive tasks for me so 
that I wouldn’t have to - welcome to programming! From that position I moved on to another marketing agency doing the same
 thing, but more advanced websites, also while doing design as well. From there I made the jump into full-time development as 
a Software Engineer.&lt;/p&gt;

&lt;p&gt;Before I give any advice suggestions regarding programming I will give you some general advice/questions to help you decide what to pursue.
What activity did/do you most enjoy when you were younger?
When I was a kid, I always enjoyed building things with Legos. For a long time I knew when I was older I wanted to build stuff. 
Initially I thought that would be engineering, but I didn’t particularly enjoy the math and science (which changed after I ‘grew’ up) 
when I was younger. I realized an important part of the building for me was the aesthetic, which led me down the graphic design path. 
Recognizing what you enjoyed as a kid can help you identify careers that line up with who you are. That being said, be 
pragmatic at the same time. I enjoyed art, but choose a focus that could pay bills vs eating paint.&lt;/p&gt;

&lt;h3 id=&quot;what-sort-of-life-style-do-you-want-to-have&quot;&gt;What sort of life-style do you want to have?&lt;/h3&gt;
&lt;p&gt;Initially, before I settled on graphic design &amp;amp; then programming I decided I wanted a career that would give me flexibility and 
wouldn’t require me to necessarily work every day or even at a specific location. I wanted something that I could easily work from home and/or 
for myself. I didn’t care as much about money, I just wanted freedom - I just always assumed money was the avenue to freedom.
 Some people like to travel, some people like to be outdoors, some people like
 to never see another person during their job, some people like variety and some people don’t. Figuring out what kind of lifestyle you want to live 
can help you eliminate a number of options and hone in on what make sense.&lt;/p&gt;

&lt;h3 id=&quot;where-do-you-want-to-live&quot;&gt;Where do you want to live?&lt;/h3&gt;
&lt;p&gt;I want to be where my family lives, which is currently Fresno area. STEM jobs in this area are typically ag-focused 
but there are places I can work. Now if I wanted to study Marine Biology, I probably couldn’t live in Fresno and do that. 
You need to consider what how the work you want to do lines up or doesn’t line up with where you you want to live&lt;/p&gt;

&lt;h3 id=&quot;what-is-the-forecast-of-career&quot;&gt;What is the forecast of career?&lt;/h3&gt;
&lt;p&gt;Will the field be relevant in 10 years? Does it pay enough to support a family? Will robots take over your job very soon?&lt;/p&gt;

&lt;p&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.npr.org/sections/money/2015/05/21/408234543/will-your-job-be-done-by-a-machine&quot;&gt;http://www.npr.org/sections/money/2015/05/21/408234543/will-your-job-be-done-by-a-machine&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;avoid-college-debt&quot;&gt;Avoid College Debt&lt;/h3&gt;
&lt;p&gt;College debt carries with you until you pay it off. You can’t declare bankruptcy and rid yourself of it.
 It really puts you at a disadvantage financially. For this reason I would suggest starting off 
with community college and then go to a four year school. This is additionally helpful for students that are unsure – 
it’s not worth wasting money on general-ed classes.&lt;/p&gt;

&lt;p&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.hamiltonproject.org/charts/undergraduate_student_loan_calculator&quot;&gt;http://www.hamiltonproject.org/charts/undergraduate_student_loan_calculator&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;softwareprogramming&quot;&gt;Software/Programming&lt;/h2&gt;
&lt;h3 id=&quot;context&quot;&gt;Context&lt;/h3&gt;
&lt;p&gt;My focus in the world of software is and will always be the web so my suggestions as far as technology goes will be web-slanted. 
Many of the suggestions transcend the web platform but do keep that in mind.&lt;/p&gt;

&lt;p&gt;Computers are constantly evolving machines. They require you to also evolve to maintain relevance in the industry. If you enjoy learning and trying new things you will be fine. If you don’t enjoy constant evolution and change, you probably won’t be happy. Below are some good ingredients to success.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adaptiveness&lt;/li&gt;
  &lt;li&gt;Not afraid of trial and error&lt;/li&gt;
  &lt;li&gt;Humility&lt;/li&gt;
  &lt;li&gt;Learning&lt;/li&gt;
  &lt;li&gt;Can-do-attitude&lt;/li&gt;
  &lt;li&gt;Efficiency&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;learn-linux&quot;&gt;Learn Linux&lt;/h3&gt;
&lt;p&gt;Linux is on servers, phones, cameras, cars … linux is everywhere! No matter what you decide to focus on software wise you will probably have to work with linux. In fact, good ol’ Microsft released .NET for linux and is transitioning Azure to linux? To learn install Ubuntu (easiest to start with) on a computer and learn the command line. You can also get an Amazon EC2 free instance! Most servers are linux and the number of jobs you can get just from being awesome at linux is quite substantial.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;Virtualbox&lt;/a&gt; - Fire up a linux vm!&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://overthewire.org/wargames/bandit/bandit0.html&quot;&gt;http://overthewire.org/wargames/bandit/bandit0.html&lt;/a&gt;  - use ssh to learn on a vm&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/ec2/pricing/&quot;&gt;AWS EC2&lt;/a&gt; - free tier!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jlevy/the-art-of-command-line&quot;&gt;CLI Tips &amp;amp; Tricks&lt;/a&gt; - lots of cli tips&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;learn-languages&quot;&gt;Learn Languages&lt;/h3&gt;
&lt;p&gt;You should learn the language that fits into the industry that interests you - if you aren’t sure yet what you interests you, that’s ok. Below are some common language that are good to know and are pretty universal. Keep in mind this advice come from the web platform perspective.&lt;/p&gt;

&lt;p&gt;In regards to learning specifically, you can only learn if you do. Come up with a project, and create it in the language you want to learn. A simple project for learning a web stack for example is to make a twitter clone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Charts on Trends&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.tiobe.com/tiobe_index&quot;&gt;Tiobe Index&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.indeed.com/jobtrends/q-python-q-javascript-q-ruby-q-c++.html&quot;&gt;Indeed Trends&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;python&quot;&gt;Python&lt;/h4&gt;
&lt;p&gt;Python is an easy language to get started with. It is supported on every platform and is easy to read. It does a good job of introducing you to programming concepts and to clean code. Almost every software company has python somewhere in their infrastructure – I can guarantee you, you can use it the rest of your career. There are so many resources&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://learnpythonthehardway.org/&quot;&gt;Python the Hard way&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codecademy.com/learn/python&quot;&gt;Code Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;javascript&quot;&gt;JavaScript&lt;/h4&gt;
&lt;p&gt;“Always bet on JavaScript” - It is the “Lingua franca” of the web. There are tons of resources everywhere and you don’t need
anything other than a browser to get started on it. Personally I have spent the most time on JavaScript and really enjoy it
but there are lots of gotchas compared to python that make it less intuitive.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodeschool.io/&quot;&gt;NodeSchool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bonsaiden.github.io/JavaScript-Garden/&quot;&gt;JavaScript Garden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;golang&quot;&gt;Golang&lt;/h4&gt;
&lt;p&gt;Golang is a statically typed language that was designed with concurrency from the get-go. It’s a very fast and up and coming platform.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gobyexample.com/&quot;&gt;Go by Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;learn-a-database&quot;&gt;Learn a Database&lt;/h4&gt;
&lt;p&gt;MySql, SQL Server, Postgres - it doesn’t matter, just know some SQL basics! Relational databases are going to be here forever
and so familiarity with creating data structures and querying data is handy-dandy!&lt;/p&gt;

&lt;h4 id=&quot;learn-version-control&quot;&gt;Learn Version Control&lt;/h4&gt;
&lt;p&gt;Version control is a skill every professioanl developer must have! If you work on a team or even by yourself
the organization you’ll be working at will have something.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.codeschool.com/courses/try-git&quot;&gt;https://www.codeschool.com/courses/try-git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.git-tower.com/learn/ &quot;&gt;https://www.git-tower.com/learn/ &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.atlassian.com/git/&quot;&gt;https://www.atlassian.com/git/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://learngitbranching.js.org/ &quot;&gt;http://learngitbranching.js.org/ &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;resources-for-learning&quot;&gt;Resources for learning&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://github.com/karlhorky/learn-to-program&quot;&gt;https://github.com/karlhorky/learn-to-program&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://exercism.io/&quot;&gt;http://exercism.io/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.codecademy.com/&quot;&gt;https://www.codecademy.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://tutsplus.com/&quot;&gt;http://tutsplus.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://teamtreehouse.com/&quot;&gt;https://teamtreehouse.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.codeschool.com/&quot;&gt;https://www.codeschool.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.pluralsight.com/&quot;&gt;https://www.pluralsight.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;alternative-degrees&quot;&gt;Alternative Degrees&lt;/h3&gt;
&lt;p&gt;Computer science degrees don’t guarantee success or jobs and are generally  at least 5+ years  behind current trends. The reality is your best education will be self motivated using many of the online resources available. I think generally getting a degree is a good idea, but it may serve you well to have a degree to complement your self-guided computer education.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Complementary&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Economics, Finance, Business, Statistics, Cognitive Science, Psychology, Linguistics, Mathematics, Graphic Design/Comm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Related&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Engineering, Information System&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are tons of industries that have lots of oppurtunity if you have mixed disciplines. Many industries have barely started
leveraging computers so many are ripe the evolution brought on by software. For example if you combo a medical education
with a software education you will have unique opportunities that require expertise in both fields that others could never have.&lt;/p&gt;

&lt;p&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.quora.com/What-advice-would-you-give-to-a-Computer-Science-major-student-that-you-wish-you-were-given-when-you-started-Computer-Science&quot;&gt;https://www.quora.com/What-advice-would-you-give-to-a-Computer-Science-major-student-that-you-wish-you-were-given-when-you-started-Computer-Science&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="raw" /><category term="ideas" /><summary type="html">My initial career plans were to get degree in Mechanical Engineering. Plans didn’t go as planned, and I wasn’t quite mature enough to handle the level of rigor immediately outside of high school. My plans evolved into an art direction, since I always enjoyed art &amp;amp; I decided to ignore the $$$ (or there lack of) problem with art careers. From art, I realized I needed to make some money so I honed in on Graphic Design, which actually described my art process anyways. I went to community college, and then to Fresno State majored in GD and minored in Philosophy. My first job out of school was doing front-end development. My background in design and small experience with coding HTML/CSS made me a good fit for the position which consisted mostly of PSD to HMTL conversion. There I realized I could make the computer do repetitive tasks for me so that I wouldn’t have to - welcome to programming! From that position I moved on to another marketing agency doing the same thing, but more advanced websites, also while doing design as well. From there I made the jump into full-time development as a Software Engineer. Before I give any advice suggestions regarding programming I will give you some general advice/questions to help you decide what to pursue. What activity did/do you most enjoy when you were younger? When I was a kid, I always enjoyed building things with Legos. For a long time I knew when I was older I wanted to build stuff. Initially I thought that would be engineering, but I didn’t particularly enjoy the math and science (which changed after I ‘grew’ up) when I was younger. I realized an important part of the building for me was the aesthetic, which led me down the graphic design path. Recognizing what you enjoyed as a kid can help you identify careers that line up with who you are. That being said, be pragmatic at the same time. I enjoyed art, but choose a focus that could pay bills vs eating paint. What sort of life-style do you want to have? Initially, before I settled on graphic design &amp;amp; then programming I decided I wanted a career that would give me flexibility and wouldn’t require me to necessarily work every day or even at a specific location. I wanted something that I could easily work from home and/or for myself. I didn’t care as much about money, I just wanted freedom - I just always assumed money was the avenue to freedom. Some people like to travel, some people like to be outdoors, some people like to never see another person during their job, some people like variety and some people don’t. Figuring out what kind of lifestyle you want to live can help you eliminate a number of options and hone in on what make sense. Where do you want to live? I want to be where my family lives, which is currently Fresno area. STEM jobs in this area are typically ag-focused but there are places I can work. Now if I wanted to study Marine Biology, I probably couldn’t live in Fresno and do that. You need to consider what how the work you want to do lines up or doesn’t line up with where you you want to live What is the forecast of career? Will the field be relevant in 10 years? Does it pay enough to support a family? Will robots take over your job very soon? http://www.npr.org/sections/money/2015/05/21/408234543/will-your-job-be-done-by-a-machine Avoid College Debt College debt carries with you until you pay it off. You can’t declare bankruptcy and rid yourself of it. It really puts you at a disadvantage financially. For this reason I would suggest starting off with community college and then go to a four year school. This is additionally helpful for students that are unsure – it’s not worth wasting money on general-ed classes. http://www.hamiltonproject.org/charts/undergraduate_student_loan_calculator Software/Programming Context My focus in the world of software is and will always be the web so my suggestions as far as technology goes will be web-slanted. Many of the suggestions transcend the web platform but do keep that in mind. Computers are constantly evolving machines. They require you to also evolve to maintain relevance in the industry. If you enjoy learning and trying new things you will be fine. If you don’t enjoy constant evolution and change, you probably won’t be happy. Below are some good ingredients to success. Adaptiveness Not afraid of trial and error Humility Learning Can-do-attitude Efficiency Learn Linux Linux is on servers, phones, cameras, cars … linux is everywhere! No matter what you decide to focus on software wise you will probably have to work with linux. In fact, good ol’ Microsft released .NET for linux and is transitioning Azure to linux? To learn install Ubuntu (easiest to start with) on a computer and learn the command line. You can also get an Amazon EC2 free instance! Most servers are linux and the number of jobs you can get just from being awesome at linux is quite substantial. Virtualbox - Fire up a linux vm! http://overthewire.org/wargames/bandit/bandit0.html - use ssh to learn on a vm AWS EC2 - free tier! CLI Tips &amp;amp; Tricks - lots of cli tips Learn Languages You should learn the language that fits into the industry that interests you - if you aren’t sure yet what you interests you, that’s ok. Below are some common language that are good to know and are pretty universal. Keep in mind this advice come from the web platform perspective. In regards to learning specifically, you can only learn if you do. Come up with a project, and create it in the language you want to learn. A simple project for learning a web stack for example is to make a twitter clone. Charts on Trends Tiobe Index Indeed Trends Python Python is an easy language to get started with. It is supported on every platform and is easy to read. It does a good job of introducing you to programming concepts and to clean code. Almost every software company has python somewhere in their infrastructure – I can guarantee you, you can use it the rest of your career. There are so many resources Python the Hard way Code Academy JavaScript “Always bet on JavaScript” - It is the “Lingua franca” of the web. There are tons of resources everywhere and you don’t need anything other than a browser to get started on it. Personally I have spent the most time on JavaScript and really enjoy it but there are lots of gotchas compared to python that make it less intuitive. NodeSchool JavaScript Garden Golang Golang is a statically typed language that was designed with concurrency from the get-go. It’s a very fast and up and coming platform. Go by Example Learn a Database MySql, SQL Server, Postgres - it doesn’t matter, just know some SQL basics! Relational databases are going to be here forever and so familiarity with creating data structures and querying data is handy-dandy! Learn Version Control Version control is a skill every professioanl developer must have! If you work on a team or even by yourself the organization you’ll be working at will have something. https://www.codeschool.com/courses/try-git https://www.git-tower.com/learn/ https://www.atlassian.com/git/ http://learngitbranching.js.org/ Resources for learning https://github.com/karlhorky/learn-to-program http://exercism.io/ https://www.codecademy.com/ http://tutsplus.com/ https://teamtreehouse.com/ https://www.codeschool.com/ https://www.pluralsight.com/ Alternative Degrees Computer science degrees don’t guarantee success or jobs and are generally at least 5+ years behind current trends. The reality is your best education will be self motivated using many of the online resources available. I think generally getting a degree is a good idea, but it may serve you well to have a degree to complement your self-guided computer education. Complementary Economics, Finance, Business, Statistics, Cognitive Science, Psychology, Linguistics, Mathematics, Graphic Design/Comm Related Engineering, Information System There are tons of industries that have lots of oppurtunity if you have mixed disciplines. Many industries have barely started leveraging computers so many are ripe the evolution brought on by software. For example if you combo a medical education with a software education you will have unique opportunities that require expertise in both fields that others could never have. https://www.quora.com/What-advice-would-you-give-to-a-Computer-Science-major-student-that-you-wish-you-were-given-when-you-started-Computer-Science</summary></entry><entry><title type="html">Design resources for developers</title><link href="http://ahermosilla.com/craftmanship/2017/07/29/design-for-devs.html" rel="alternate" type="text/html" title="Design resources for developers" /><published>2017-07-29T00:00:00-07:00</published><updated>2017-07-29T00:00:00-07:00</updated><id>http://ahermosilla.com/craftmanship/2017/07/29/design-for-devs</id><content type="html" xml:base="http://ahermosilla.com/craftmanship/2017/07/29/design-for-devs.html">&lt;p&gt;As a developer, it is beneficial to understand basics of design
and how people digest information. You may think to yourself that you will never
have to create a visual interface, but the reality is even code
has a visual aspect which has impact on its consumption. A deeper
understanding of visual perception can positively impact your code!&lt;/p&gt;

&lt;h4 id=&quot;principles&quot;&gt;Principles&lt;/h4&gt;
&lt;p&gt;Design is a mature industry with centuries of application and study. There are many
tried and true principles and concepts that you should apply and keep in mind when
creating designs. Also understanding the elements of design and how they relate 
together allows you to put the pieces together in a cohesive fashion&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://www.johnlovett.com/test.htm&lt;/li&gt;
  &lt;li&gt;http://visual.ly/6-principles-design&lt;/li&gt;
  &lt;li&gt;http://learndesignprinciples.com/&lt;/li&gt;
  &lt;li&gt;http://www.creativebloq.com/graphic-design/gestalt-theory-10134960&lt;/li&gt;
  &lt;li&gt;http://graphicdesign.spokanefalls.edu/tutorials/process/gestaltprinciples/gestaltprinc.htm&lt;/li&gt;
  &lt;li&gt;http://lifehacker.com/5739492/learn-the-basics-of-design-this-weekend&lt;/li&gt;
  &lt;li&gt;http://justcreative.com/2008/06/13/how-to-design-learn-the-basics/&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;typography&quot;&gt;Typography&lt;/h4&gt;
&lt;p&gt;A vast amount of information that is communicated is in the form of text.
The visual form of this text affects how the information presented is consumed.
If letters are very too close together or too far apart, reading can be hindered. 
If margin between lines of text is too big, discerning if information belongs together
can become difficult. Typography is about addressing these sorts of problems with
text and presenting text in a legible readable format.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;http://tangledindesign.com/5-basic-principles-you-must-consider-to-master-the-art-of-typography/&lt;/li&gt;
  &lt;li&gt;https://www.smashingmagazine.com/2009/03/10-principles-for-readable-web-typography/&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;layouts&quot;&gt;Layouts&lt;/h4&gt;
&lt;p&gt;TODO&lt;/p&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;
&lt;p&gt;There are a number of resources to help developer types understand basics of design. 
I’ve also included articles that cover the the concept of information hierarchy,
which is very important tool for aiding the digestion of information.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://blog.prototypr.io/design-for-programmers-d38c56982cd0&lt;/li&gt;
  &lt;li&gt;https://hackdesign.org/lessons&lt;/li&gt;
  &lt;li&gt;https://webdesign.tutsplus.com/articles/typography-basics-for-developers–webdesign-14025&lt;/li&gt;
  &lt;li&gt;http://www.slideshare.net/Wolfr/design-for-developersonlineversionlong/25-Examples_of_desirable_qualities_Fast&lt;/li&gt;
  &lt;li&gt;https://realm.io/news/christopher-downer-design-101-for-developers/&lt;/li&gt;
  &lt;li&gt;https://www.smashingmagazine.com/2015/02/design-principles-dominance-focal-points-hierarchy/&lt;/li&gt;
  &lt;li&gt;https://thoughtbot.com/upcase/design-for-developers&lt;/li&gt;
  &lt;li&gt;http://www.dadapixel.com/blog/2014/7/30/opinion-information-density-isnt-as-important-as-information-hierarchy&lt;/li&gt;
  &lt;li&gt;https://www.smashingmagazine.com/2014/03/design-principles-visual-perception-and-the-principles-of-gestalt/&lt;/li&gt;
  &lt;li&gt;http://ui-patterns.com/&lt;/li&gt;
  &lt;li&gt;http://uxmag.com/&lt;/li&gt;
  &lt;li&gt;http://52weeksofux.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;showcases&quot;&gt;Showcases&lt;/h2&gt;
&lt;p&gt;Reading about principles &amp;amp; concepts is great but may feel abstract. 
Seeing finished products where these principles are applied helps tie 
the concepts together.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://www.awwwards.com/websites&lt;/li&gt;
  &lt;li&gt;pttrns.com&lt;/li&gt;
  &lt;li&gt;http://littlebigdetails.com/&lt;/li&gt;
  &lt;li&gt;https://material.uplabs.com/&lt;/li&gt;
  &lt;li&gt;http://beta.uihaus.com/&lt;/li&gt;
  &lt;li&gt;https://www.uplabs.com/&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tutorials&quot;&gt;Tutorials&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;https://tutsplus.com/&lt;/li&gt;
  &lt;li&gt;https://teamtreehouse.com/tracks/web-design&lt;/li&gt;
  &lt;li&gt;https://www.coursera.org/browse/computer-science/design-and-product?languages=en&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;books&quot;&gt;Books&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;https://www.amazon.com/Things-Designer-People-Voices-Matter/dp/0321767535&lt;/li&gt;
  &lt;li&gt;https://www.amazon.com/Dont-Make-Think-Revisited-Usability/dp/0321965515/ref=pd_sbs_14_img_0?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=KSRVRJR3RBHD00H7TVQD&lt;/li&gt;
  &lt;li&gt;https://www.amazon.com/Designing-Mind-Simple-Understanding-Interface/dp/012375030X/&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="design" /><category term="raw" /><summary type="html">As a developer, it is beneficial to understand basics of design and how people digest information. You may think to yourself that you will never have to create a visual interface, but the reality is even code has a visual aspect which has impact on its consumption. A deeper understanding of visual perception can positively impact your code! Principles Design is a mature industry with centuries of application and study. There are many tried and true principles and concepts that you should apply and keep in mind when creating designs. Also understanding the elements of design and how they relate together allows you to put the pieces together in a cohesive fashion http://www.johnlovett.com/test.htm http://visual.ly/6-principles-design http://learndesignprinciples.com/ http://www.creativebloq.com/graphic-design/gestalt-theory-10134960 http://graphicdesign.spokanefalls.edu/tutorials/process/gestaltprinciples/gestaltprinc.htm http://lifehacker.com/5739492/learn-the-basics-of-design-this-weekend http://justcreative.com/2008/06/13/how-to-design-learn-the-basics/ Typography A vast amount of information that is communicated is in the form of text. The visual form of this text affects how the information presented is consumed. If letters are very too close together or too far apart, reading can be hindered. If margin between lines of text is too big, discerning if information belongs together can become difficult. Typography is about addressing these sorts of problems with text and presenting text in a legible readable format. http://tangledindesign.com/5-basic-principles-you-must-consider-to-master-the-art-of-typography/ https://www.smashingmagazine.com/2009/03/10-principles-for-readable-web-typography/ Layouts TODO Links There are a number of resources to help developer types understand basics of design. I’ve also included articles that cover the the concept of information hierarchy, which is very important tool for aiding the digestion of information. https://blog.prototypr.io/design-for-programmers-d38c56982cd0 https://hackdesign.org/lessons https://webdesign.tutsplus.com/articles/typography-basics-for-developers–webdesign-14025 http://www.slideshare.net/Wolfr/design-for-developersonlineversionlong/25-Examples_of_desirable_qualities_Fast https://realm.io/news/christopher-downer-design-101-for-developers/ https://www.smashingmagazine.com/2015/02/design-principles-dominance-focal-points-hierarchy/ https://thoughtbot.com/upcase/design-for-developers http://www.dadapixel.com/blog/2014/7/30/opinion-information-density-isnt-as-important-as-information-hierarchy https://www.smashingmagazine.com/2014/03/design-principles-visual-perception-and-the-principles-of-gestalt/ http://ui-patterns.com/ http://uxmag.com/ http://52weeksofux.com Showcases Reading about principles &amp;amp; concepts is great but may feel abstract. Seeing finished products where these principles are applied helps tie the concepts together. http://www.awwwards.com/websites pttrns.com http://littlebigdetails.com/ https://material.uplabs.com/ http://beta.uihaus.com/ https://www.uplabs.com/ Tutorials https://tutsplus.com/ https://teamtreehouse.com/tracks/web-design https://www.coursera.org/browse/computer-science/design-and-product?languages=en Books https://www.amazon.com/Things-Designer-People-Voices-Matter/dp/0321767535 https://www.amazon.com/Dont-Make-Think-Revisited-Usability/dp/0321965515/ref=pd_sbs_14_img_0?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=KSRVRJR3RBHD00H7TVQD https://www.amazon.com/Designing-Mind-Simple-Understanding-Interface/dp/012375030X/</summary></entry><entry><title type="html">Naming Things!</title><link href="http://ahermosilla.com/craftmanship/2017/02/08/naming-methods-variables.html" rel="alternate" type="text/html" title="Naming Things!" /><published>2017-02-08T00:00:00-08:00</published><updated>2017-02-08T00:00:00-08:00</updated><id>http://ahermosilla.com/craftmanship/2017/02/08/naming-methods-variables</id><content type="html" xml:base="http://ahermosilla.com/craftmanship/2017/02/08/naming-methods-variables.html">&lt;p&gt;** This is a work in progress, that mostly contains lots of good links **&lt;/p&gt;

&lt;p&gt;It’s one of the &lt;a href=&quot;http://martinfowler.com/bliki/TwoHardThings.html&quot;&gt;hardest things&lt;/a&gt; you do a 
programmer and also one of the most important aspects of writing code. 
Code is read &lt;a href=&quot;http://www.goodreads.com/quotes/835238-indeed-the-ratio-of-time-spent-reading-versus-writing-is&quot;&gt;10x more&lt;/a&gt;
than it’s written so when you are writing you need to be very thoughtful of the 
future readers, which are yourself &amp;amp; others. You want your code to be very
clear to readers, even if you are the only reader. Readability makes or break a project
There has been plenty of times that I don’t look at a piece of code for months 
and come back and have to re-learn what I what I was doing.&lt;/p&gt;

&lt;p&gt;An important principle for naming is to communicate intentions.&lt;/p&gt;

&lt;p&gt;The process of thoughtful naming also help you to identify code smells. If you are having 
a hard time naming a class, it may do too many things and should be possbily broken down.&lt;/p&gt;

&lt;h4 id=&quot;purpose--potential&quot;&gt;Purpose &amp;amp; Potential&lt;/h4&gt;
&lt;p&gt;There is this idea that people live up to their names, &amp;amp; derive meaning/purpose from
their name. You should apply this notion of naming things to objects. 
Naming something gives it a purpose &amp;amp; meaning - it essentially creates it’s “definition”.
If you name an object generically, it doesn’t have clear
definiion, clear boundaries.  Due to this lack of focus an object 
can quickly end up doing more than it should which lead be bad code smell.&lt;/p&gt;

&lt;h3 id=&quot;hints&quot;&gt;Hints&lt;/h3&gt;
&lt;p&gt;Is there a physical object that can help describe&lt;/p&gt;

&lt;p&gt;When you are struggling with naming something, created wordmaps, word graphs from
the name or concept that you are starting with.&lt;/p&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;
&lt;p&gt;Using a thesarus helps you to find similar terms that may better communicate 
intent &amp;amp;/or context&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://source-code-wordle.de/&quot;&gt;http://source-code-wordle.de/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://visualthesaurus.com/&quot;&gt;http://visualthesaurus.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.thesaurus.com/&quot;&gt;http://www.thesaurus.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inversely, if you enter your variable or method on the link and it’s on the list
then you probably shouldn’t use the name.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://sph.mn/o/svn?words=evnHndlr&quot;&gt;http://sph.mn/o/svn?words=evnHndlr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;seek&quot;&gt;Seek&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Names that reveal intent&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;class CommentModerator&lt;/code&gt; encapsulates logic for moderating comments&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find_configs(directory)&lt;/code&gt; returns list of configs from a directory&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;is_risky_command(command)&lt;/code&gt; returns true/false of risk of command&lt;/li&gt;
  &lt;li&gt;Names that remove need for comments&lt;/li&gt;
  &lt;li&gt;Be consistent&lt;/li&gt;
  &lt;li&gt;To name things that correlate to the domain&lt;/li&gt;
  &lt;li&gt;Accurately describe the variable or method&lt;/li&gt;
  &lt;li&gt;Conciseness over verbosity&lt;/li&gt;
  &lt;li&gt;Use analogies &amp;amp; metaphors&lt;/li&gt;
  &lt;li&gt;Scalable patterns&lt;/li&gt;
  &lt;li&gt;Have some fun&lt;/li&gt;
  &lt;li&gt;Memorable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;avoid&quot;&gt;Avoid&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Ambiguity
    &lt;ul&gt;
      &lt;li&gt;One letter or Short names&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Don’t use &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;bcz&lt;/code&gt; unless &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; in loop&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Generic terms like &lt;em&gt;Manager&lt;/em&gt; or &lt;em&gt;Provider&lt;/em&gt; or &lt;em&gt;words&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;class ServiceProvider ...&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;list = ['a', 'b', 'c']&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;process_data(d)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;word = &quot;word&quot;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;file_handle = open('output.log')&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Uneeded abbreviations or prefixes/suffixes
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WordPrcsr&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;WordProcessor&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Including type in variable &lt;code class=&quot;highlighter-rouge&quot;&gt;listOfCats&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;cats&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Misleading names
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;words = [1, 2, 3]&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;has_word(sentence) # -&amp;gt; but returns 'string'&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Methods or functions that describe how it works
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;query_mysql_users()&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;get_users()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cleverness&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nuke(cache)&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;flush(cache)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shun(user)&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;ban(user)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;inspirations&quot;&gt;Inspirations&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.bbc.co.uk/ontologies&quot;&gt;http://www.bbc.co.uk/ontologies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://schema.org/CreativeWork&quot;&gt;http://schema.org/CreativeWork&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://namingschemes.com/&quot;&gt;https://namingschemes.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.ereadingworksheets.com/figurative-language/figurative-language-examples/metaphor-examples/&quot;&gt;http://www.ereadingworksheets.com/figurative-language/figurative-language-examples/metaphor-examples/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://literarydevices.net/a-huge-list-of-short-metaphor-examples/&quot;&gt;http://literarydevices.net/a-huge-list-of-short-metaphor-examples/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.scribd.com/doc/29896677/Some-Common-Traditional-Symbols-in-Western-Literature&quot;&gt;https://www.scribd.com/doc/29896677/Some-Common-Traditional-Symbols-in-Western-Literature&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://fos.iloveindia.com/analogy-examples.html&quot;&gt;http://fos.iloveindia.com/analogy-examples.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://24ways.org/2014/naming-things/&quot;&gt;https://24ways.org/2014/naming-things/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://deviq.com/naming-things/&quot;&gt;http://deviq.com/naming-things/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://a-nickels-worth.blogspot.com/2016/04/a-guide-to-naming-variables.html&quot;&gt;https://a-nickels-worth.blogspot.com/2016/04/a-guide-to-naming-variables.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.yacoset.com/Home/naming-tips&quot;&gt;http://www.yacoset.com/Home/naming-tips&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://bensmith.io/20-tips-for-better-naming&quot;&gt;http://bensmith.io/20-tips-for-better-naming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.makinggoodsoftware.com/2009/05/04/71-tips-for-naming-variables/&quot;&gt;http://www.makinggoodsoftware.com/2009/05/04/71-tips-for-naming-variables/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.eventhelix.com/RealtimeMantra/Object_Oriented/object_design_tips.htm&quot;&gt;http://www.eventhelix.com/RealtimeMantra/Object_Oriented/object_design_tips.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html&quot;&gt;http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://objology.blogspot.com/2011/09/one-of-best-bits-of-programming-advice.html&quot;&gt;http://objology.blogspot.com/2011/09/one-of-best-bits-of-programming-advice.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://codebuild.blogspot.com/2012/02/15-best-practices-of-variable-method.html&quot;&gt;http://codebuild.blogspot.com/2012/02/15-best-practices-of-variable-method.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://caseysoftware.com/blog/useful-naming-conventions&quot;&gt;http://caseysoftware.com/blog/useful-naming-conventions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://mojones.net/how-to-pick-bad-function-and-variable-names.html&quot;&gt;http://mojones.net/how-to-pick-bad-function-and-variable-names.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.yegor256.com/2015/03/09/objects-end-with-er.html&quot;&gt;http://www.yegor256.com/2015/03/09/objects-end-with-er.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.ed.ac.uk/records-management/records-management/staff-guidance/electronic-records/naming-conventions&quot;&gt;http://www.ed.ac.uk/records-management/records-management/staff-guidance/electronic-records/naming-conventions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://wiki.c2.com/?IntentionRevealingNames&quot;&gt;http://wiki.c2.com/?IntentionRevealingNames&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://wiki.c2.com/?IntentionRevealingSelector&quot;&gt;http://wiki.c2.com/?IntentionRevealingSelector&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.outofscope.com/name-with-intention-not-implementation/&quot;&gt;http://www.outofscope.com/name-with-intention-not-implementation/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.cs.uakron.edu/~chanc/CS490/SeniorSeminar2012/Lecture%202%20-%20Program%20Style/programming%20style.pdf&quot;&gt;http://www.cs.uakron.edu/~chanc/CS490/SeniorSeminar2012/Lecture%202%20-%20Program%20Style/programming%20style.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://signalvnoise.com/posts/3531-intention-revealing-methods&quot;&gt;https://signalvnoise.com/posts/3531-intention-revealing-methods&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names&quot;&gt;https://signalvnoise.com/posts/3250-clarity-over-brevity-in-variable-and-method-names&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://wiki.c2.com/?TheWhatButNotTheWhy&quot;&gt;http://wiki.c2.com/?TheWhatButNotTheWhy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://wiki.c2.com/?DontNameClassesObjectManagerHandlerOrData&quot;&gt;http://wiki.c2.com/?DontNameClassesObjectManagerHandlerOrData&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://blog.codinghorror.com/i-shall-call-it-somethingmanager/&quot;&gt;https://blog.codinghorror.com/i-shall-call-it-somethingmanager/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://stackoverflow.com/questions/1866794/naming-classes-how-to-avoid-calling-everything-a-whatevermanager&quot;&gt;http://stackoverflow.com/questions/1866794/naming-classes-how-to-avoid-calling-everything-a-whatevermanager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.sandywalsh.com/2010/04/am-i-bad-man-for-naming-my-classes.html&quot;&gt;http://www.sandywalsh.com/2010/04/am-i-bad-man-for-naming-my-classes.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://blog.goyello.com/2013/05/17/express-names-in-code-bad-vs-clean/&quot;&gt;https://blog.goyello.com/2013/05/17/express-names-in-code-bad-vs-clean/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.itiseezee.com/?p=83&quot;&gt;http://www.itiseezee.com/?p=83&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://javarevisited.blogspot.com/2014/10/10-java-best-practices-to-name-variables-methods-classes-packages.html&quot;&gt;http://javarevisited.blogspot.com/2014/10/10-java-best-practices-to-name-variables-methods-classes-packages.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.carlopescio.com/2011/04/your-coding-conventions-are-hurting-you.html&quot;&gt;http://www.carlopescio.com/2011/04/your-coding-conventions-are-hurting-you.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://ontologydesignpatterns.org/wiki/Submissions:ContentOPs&quot;&gt;http://ontologydesignpatterns.org/wiki/Submissions:ContentOPs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.yesodweb.com/blog/2011/12/variable-naming-context&quot;&gt;http://www.yesodweb.com/blog/2011/12/variable-naming-context&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://breckyunits.com/naming-things.html&quot;&gt;http://breckyunits.com/naming-things.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://slidedeck.io/hoontw/naming-things&quot;&gt;http://slidedeck.io/hoontw/naming-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://medium.com/@cavill/how-to-name-your-product-876f78b959d4#.rb65jb5ju&quot;&gt;https://medium.com/@cavill/how-to-name-your-product-876f78b959d4#.rb65jb5ju&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.freshconsulting.com/development-principle-1-choose-appropriate-variable-names/&quot;&gt;https://www.freshconsulting.com/development-principle-1-choose-appropriate-variable-names/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="ideas" /><category term="raw" /><summary type="html">** This is a work in progress, that mostly contains lots of good links **</summary></entry><entry><title type="html">Inspecting Windows with cli!</title><link href="http://ahermosilla.com/tools/2017/01/21/windows-commands.html" rel="alternate" type="text/html" title="Inspecting Windows with cli!" /><published>2017-01-21T00:00:00-08:00</published><updated>2017-01-21T00:00:00-08:00</updated><id>http://ahermosilla.com/tools/2017/01/21/windows-commands</id><content type="html" xml:base="http://ahermosilla.com/tools/2017/01/21/windows-commands.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#wmi&quot; id=&quot;markdown-toc-wmi&quot;&gt;WMI&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#powershell&quot; id=&quot;markdown-toc-powershell&quot;&gt;Powershell&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hardware&quot; id=&quot;markdown-toc-hardware&quot;&gt;Hardware&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#network&quot; id=&quot;markdown-toc-network&quot;&gt;Network&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#processes&quot; id=&quot;markdown-toc-processes&quot;&gt;Processes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m pretty green when it comes to knowledge of windows commands &amp;amp; cli tools.
From the security perspective, a large percent of businesses/corporations run 
windows on their platform, so some basic tools to introduce ideas is helpful!&lt;/p&gt;

&lt;h3 id=&quot;wmi&quot;&gt;WMI&lt;/h3&gt;
&lt;p&gt;With the command line you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;wmic&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;powershell&lt;/code&gt; to utilize WMI (Windows Management Instrumentation) which can give you insight into all sorts of things about your system!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://betanews.com/2011/01/14/wmic-the-best-command-line-tool-you-ve-never-used/&quot;&gt;https://betanews.com/2011/01/14/wmic-the-best-command-line-tool-you-ve-never-used/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.dedoimedo.com/computers/windows-wmic.html&quot;&gt;http://www.dedoimedo.com/computers/windows-wmic.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://people.virginia.edu/~rtg2t/winadmin/wmic.html&quot;&gt;http://people.virginia.edu/~rtg2t/winadmin/wmic.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Get Windows Version&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;wmic os get Name,Version,BuildNumber,OSArchitecture,InstallDate
BuildNumber  InstallDate                Name                             OSArchitecture  Version
14393        20161028165102.000000-420  Microsoft Windows 10 Enterprise  64-bit          10.0.14393
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;powershell&quot;&gt;Powershell&lt;/h4&gt;
&lt;p&gt;@todo Fill this out more!&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:: List available objects
&lt;span class=&quot;nb&quot;&gt;Get-WmiObject&lt;/span&gt; -List

:: Logged on users
&lt;span class=&quot;nb&quot;&gt;Get-WmiObject &lt;/span&gt;Win32_LoggedOnUser

:: Users ...
&lt;span class=&quot;nb&quot;&gt;Get-WmiObject &lt;/span&gt;Win32_SystemUsers

:: Get processes
&lt;span class=&quot;nb&quot;&gt;Get-WmiObject &lt;/span&gt;Win32_Process | &lt;span class=&quot;nb&quot;&gt;Format-Table&lt;/span&gt; -Wrap -Property Name,Path,ExecutablePath,ProcessId,CreationDate

:: What is running &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;startup?
&lt;span class=&quot;nb&quot;&gt;Get-WmiObject &lt;/span&gt;Win32_StartupCommand
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;hardware&quot;&gt;Hardware&lt;/h3&gt;
&lt;p&gt;I used to always use cpu-z to id the hardware, but there are plenty of other tools to
figure out hardware is on the system you’re using.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;systeminfo

Host Name:                 REZEN
OS Name:                   Microsoft Windows 7 Professional
OS Version:                6.1.7601 Service Pack 1 Build 7601
OS Manufacturer:           Microsoft Corporation
OS Configuration:          Standalone Workstation
OS Build Type:             Multiprocessor Free
Registered Owner:          Andres
Registered Organization:
Product ID:                00371-153-6150126-85809
Original Install Date:     2/18/2013, 10:21:17 PM
System Boot Time:          1/31/2017, 9:22:30 PM
System Manufacturer:       To Be Filled By O.E.M.
System Model:              To Be Filled By O.E.M.
System Type:               x64-based PC
Processor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:              1 Processor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Installed.
                           &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;01]: AMD64 Family 16 Model 4 Stepping 2 AuthenticAMD ~3000 Mhz
BIOS Version:              American Megatrends Inc. P1.90, 5/24/2010
Windows Directory:         C:&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows
System Directory:          C:&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem32
Boot Device:               &lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume3
System Locale:             en-us;English &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;United States&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Input Locale:              en-us;English &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;United States&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Time Zone:                 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UTC-08:00&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Pacific Time &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;US &amp;amp; Canada&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
.....
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;wmic memphysical get MaxCapacity
MaxCapacity
16777216
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;wmic baseboard list /format:LIST


&lt;span class=&quot;nv&quot;&gt;ConfigOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Depth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Base Board
&lt;span class=&quot;nv&quot;&gt;Height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;HostingBoard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TRUE
&lt;span class=&quot;nv&quot;&gt;HotSwappable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FALSE
&lt;span class=&quot;nv&quot;&gt;InstallDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Manufacturer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ASRock
&lt;span class=&quot;nv&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Base Board
&lt;span class=&quot;nv&quot;&gt;OtherIdentifyingInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PartNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PoweredOn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TRUE
&lt;span class=&quot;nv&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;A780FullDisplayPort
&lt;span class=&quot;nv&quot;&gt;Removable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FALSE
&lt;span class=&quot;nv&quot;&gt;Replaceable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TRUE
&lt;span class=&quot;nv&quot;&gt;RequiresDaughterBoard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FALSE
&lt;span class=&quot;nv&quot;&gt;SpecialRequirements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;OK
&lt;span class=&quot;nv&quot;&gt;Tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Base Board
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;network&quot;&gt;Network&lt;/h3&gt;
&lt;p&gt;On linux &lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;netstat&lt;/code&gt; are gold but on Windows the you have different tools. Well, there is netstat, but it’s different.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://blogs.technet.microsoft.com/mrsnrub/2009/09/10/capturing-network-traffic-in-windows-7-server-2008-r2/&quot;&gt;https://blogs.technet.microsoft.com/mrsnrub/2009/09/10/capturing-network-traffic-in-windows-7-server-2008-r2/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;netsh&lt;/code&gt; to capture traffic&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netsh trace start capture=yes
netsh trace stop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;Get-WmiObject &lt;/span&gt;Win32_IP4RouteTable | &lt;span class=&quot;nb&quot;&gt;Format-Table&lt;/span&gt; -Wrap -Property Age,Caption,Mask,Destination,Name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; netsh int show int

Admin State    State          Type             Interface Name
-------------------------------------------------------------------------
Enabled        Connected      Dedicated        VirtualBox Host-Only Network
Enabled        Connected      Dedicated        Npcap Loopback Adapter
Enabled        Connected      Dedicated        VirtualBox Host-Only Network #2
Enabled        Connected      Dedicated        VirtualBox Host-Only Network #3
Enabled        Connected      Dedicated        Ethernet 2
Enabled        Connected      Dedicated        vEthernet (DockerNAT)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Quickly find gateway address&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;netsh interface ip show config | findstr &lt;span class=&quot;s2&quot;&gt;&quot;Default&quot;&lt;/span&gt;
    Default Gateway:                      10.15.128.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let’s find DNS!&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;netsh interface ip show config | findstr &lt;span class=&quot;s2&quot;&gt;&quot;DNS&quot;&lt;/span&gt;
    DNS servers configured through DHCP:  10.8.1.90
    Statically Configured DNS Servers:    192.168.1.104
    Statically Configured DNS Servers:    None
    Statically Configured DNS Servers:    None
    Statically Configured DNS Servers:    None
    Statically Configured DNS Servers:    None
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;netsh interface ipv4 show tcpconnections

MIB-II TCP Connection Entry
Local Address   Local Port      Remote Address  Remote Port     State
-----------------------------------------------------------------------------
        0.0.0.0       22               0.0.0.0          0       Listen
        0.0.0.0      135               0.0.0.0          0       Listen
      10.0.75.1      139               0.0.0.0          0       Listen
  10.15.130.204      139               0.0.0.0          0       Listen
 169.254.54.117      139               0.0.0.0          0       Listen
      127.0.0.1     2201               0.0.0.0          0       Listen
      127.0.0.1     2202             127.0.0.1      10240  Established
      127.0.0.1     2202             127.0.0.1      13370  Established
      127.0.0.1     2202               0.0.0.0          0       Listen
      127.0.0.1     2222             127.0.0.1      14513  Established
      127.0.0.1     2222               0.0.0.0          0       Listen
  10.15.130.204     3144         65.52.108.195        443  Established
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;netstat&lt;/strong&gt; which is familiar is on Windows!&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;netstat -ab

Active Connections

  Proto  Local Address          Foreign Address        State
  TCP    0.0.0.0:22             console-10:0           LISTENING
  SshProxy
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;svchost.exe]
  TCP    0.0.0.0:135            console-10:0           LISTENING
  RpcSs
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;svchost.exe]
  TCP    0.0.0.0:445            console-10:0           LISTENING
 Can not obtain ownership information
  TCP    0.0.0.0:1536           console-10:0           LISTENING
 Can not obtain ownership information
  TCP    0.0.0.0:1537           console-10:0           LISTENING
  EventLog
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;svchost.exe]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;netstat -ao

Active Connections

  Proto  Local Address          Foreign Address        State           PID
  TCP    0.0.0.0:22             console-10:0           LISTENING       2720
  TCP    0.0.0.0:135            console-10:0           LISTENING       892
  TCP    0.0.0.0:445            console-10:0           LISTENING       4
  TCP    0.0.0.0:1536           console-10:0           LISTENING       592
  TCP    0.0.0.0:1537           console-10:0           LISTENING       372
  TCP    0.0.0.0:1538           console-10:0           LISTENING       1332
  TCP    0.0.0.0:1539           console-10:0           LISTENING       2024
  TCP    0.0.0.0:1541           console-10:0           LISTENING       732
  TCP    0.0.0.0:1550           console-10:0           LISTENING       748
  TCP    0.0.0.0:2179           console-10:0           LISTENING       2680
  TCP    0.0.0.0:3389           console-10:0           LISTENING       292
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;processes&quot;&gt;Processes&lt;/h3&gt;
&lt;p&gt;You need to be able to quickly check processes for anything phishy!&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;schtasks

Folder: &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
TaskName                                 Next Run Time          Status
&lt;span class=&quot;o&quot;&gt;========================================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===============&lt;/span&gt;
G2MUpdateTask-S-1-5-21-3622734366-314535 2/10/2017 4:07:00 PM   Ready
G2MUploadTask-S-1-5-21-3622734366-314535 2/10/2017 4:31:00 PM   Ready
GoogleUpdateTaskMachineCore              2/11/2017 1:58:09 PM   Ready
GoogleUpdateTaskMachineUA                2/10/2017 3:58:09 PM   Ready
klcp_update                              2/25/2017 7:10:00 PM   Ready
OneDrive Standalone Update Task v2       2/11/2017 4:41:36 PM   Ready
RtHDVBg_LENOVO_MICPKEY                   N/A                    Running
RTKCPL                                   N/A                    Running

Folder: &lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;icrosoft
TaskName                                 Next Run Time          Status
&lt;span class=&quot;o&quot;&gt;========================================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===============&lt;/span&gt;
INFO: There are no scheduled tasks presently available at your access level.

Folder: &lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;icrosoft&lt;span class=&quot;se&quot;&gt;\O&lt;/span&gt;ffice
TaskName                                 Next Run Time          Status
&lt;span class=&quot;o&quot;&gt;========================================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===============&lt;/span&gt;
Office Automatic Updates                 2/12/2017 4:01:03 AM   Ready
Office ClickToRun Service Monitor        2/11/2017 8:58:46 AM   Ready
Office Subscription Maintenance          2/11/2017 8:25:18 AM   Ready
OfficeTelemetryAgentFallBack2016         N/A                    Ready
OfficeTelemetryAgentLogOn2016            N/A                    Ready

Folder: &lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;icrosoft&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows
TaskName                                 Next Run Time          Status
&lt;span class=&quot;o&quot;&gt;========================================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;======================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===============&lt;/span&gt;
INFO: There are no scheduled tasks presently available at your access level.

.....
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;tasklist                                                                        
                                                                                  
Image Name                     PID Session Name        Session#    Mem Usage      
&lt;span class=&quot;o&quot;&gt;=========================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;========&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;================&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===========&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;============&lt;/span&gt;      
System Idle Process              0 Services                   0          4 K      
System                           4 Services                   0         32 K      
smss.exe                       324 Services                   0        336 K      
csrss.exe                      500 Services                   0      1,592 K      
wininit.exe                    592 Services                   0        836 K      
csrss.exe                      600 Console                    1      3,972 K      
winlogon.exe                   680 Console                    1      3,116 K      
services.exe                   732 Services                   0      4,660 K      
lsass.exe                      748 Services                   0     10,104 K      
svchost.exe                    840 Services                   0     10,992 K      
svchost.exe                    892 Services                   0      8,520 K      
svchost.exe                    292 Services                   0     19,944 K      
svchost.exe                    372 Services                   0     17,176 K      
svchost.exe                    384 Services                   0     15,152 K      
svchost.exe                   1104 Services                   0     15,980 K      
nvvsvc.exe                    1140 Services                   0      3,424 K      
nvSCPAPISvr.exe               1148 Services                   0      2,136 K      
svchost.exe                   1180 Services                   0     18,308 K      
svchost.exe                   1332 Services                   0     64,384 K      
nvxdsync.exe                  1380 Console                    1     13,292 K      
nvvsvc.exe                    1452 Console                    1      7,852 K      
svchost.exe                   1960 Services                   0      7,104 K      
svchost.exe                   2004 Services                   0      1,960 K      
spoolsv.exe                   2024 Services                   0      8,512 K      
svchost.exe                   2236 Services                   0     23,336 K      
com.docker.service            2252 Services                   0      2,552 K      
dirmngr.exe                   2280 Services                   0      1,568 K      
IpOverUsbSvc.exe              2296 Services                   0      2,576 K      
.....
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="windows" /><summary type="html">WMI Powershell Hardware Network Processes I’m pretty green when it comes to knowledge of windows commands &amp;amp; cli tools. From the security perspective, a large percent of businesses/corporations run windows on their platform, so some basic tools to introduce ideas is helpful! WMI With the command line you can use wmic or powershell to utilize WMI (Windows Management Instrumentation) which can give you insight into all sorts of things about your system! https://betanews.com/2011/01/14/wmic-the-best-command-line-tool-you-ve-never-used/ http://www.dedoimedo.com/computers/windows-wmic.html http://people.virginia.edu/~rtg2t/winadmin/wmic.html Get Windows Version &amp;gt; wmic os get Name,Version,BuildNumber,OSArchitecture,InstallDate BuildNumber InstallDate Name OSArchitecture Version 14393 20161028165102.000000-420 Microsoft Windows 10 Enterprise 64-bit 10.0.14393 Powershell @todo Fill this out more! :: List available objects Get-WmiObject -List :: Logged on users Get-WmiObject Win32_LoggedOnUser :: Users ... Get-WmiObject Win32_SystemUsers :: Get processes Get-WmiObject Win32_Process | Format-Table -Wrap -Property Name,Path,ExecutablePath,ProcessId,CreationDate :: What is running in startup? Get-WmiObject Win32_StartupCommand Hardware I used to always use cpu-z to id the hardware, but there are plenty of other tools to figure out hardware is on the system you’re using. &amp;gt; systeminfo Host Name: REZEN OS Name: Microsoft Windows 7 Professional OS Version: 6.1.7601 Service Pack 1 Build 7601 OS Manufacturer: Microsoft Corporation OS Configuration: Standalone Workstation OS Build Type: Multiprocessor Free Registered Owner: Andres Registered Organization: Product ID: 00371-153-6150126-85809 Original Install Date: 2/18/2013, 10:21:17 PM System Boot Time: 1/31/2017, 9:22:30 PM System Manufacturer: To Be Filled By O.E.M. System Model: To Be Filled By O.E.M. System Type: x64-based PC Processor(s): 1 Processor(s) Installed. [01]: AMD64 Family 16 Model 4 Stepping 2 AuthenticAMD ~3000 Mhz BIOS Version: American Megatrends Inc. P1.90, 5/24/2010 Windows Directory: C:\Windows System Directory: C:\Windows\system32 Boot Device: \Device\HarddiskVolume3 System Locale: en-us;English (United States) Input Locale: en-us;English (United States) Time Zone: (UTC-08:00) Pacific Time (US &amp;amp; Canada) ..... &amp;gt; wmic memphysical get MaxCapacity MaxCapacity 16777216 &amp;gt; wmic baseboard list /format:LIST ConfigOptions= Depth= Description=Base Board Height= HostingBoard=TRUE HotSwappable=FALSE InstallDate= Manufacturer=ASRock Model= Name=Base Board OtherIdentifyingInfo= PartNumber= PoweredOn=TRUE Product=A780FullDisplayPort Removable=FALSE Replaceable=TRUE RequiresDaughterBoard=FALSE SpecialRequirements= Status=OK Tag=Base Board Network On linux tcpdump and netstat are gold but on Windows the you have different tools. Well, there is netstat, but it’s different. https://blogs.technet.microsoft.com/mrsnrub/2009/09/10/capturing-network-traffic-in-windows-7-server-2008-r2/ Instead of tcpdump you can use netsh to capture traffic netsh trace start capture=yes netsh trace stop Get-WmiObject Win32_IP4RouteTable | Format-Table -Wrap -Property Age,Caption,Mask,Destination,Name &amp;gt; netsh int show int Admin State State Type Interface Name ------------------------------------------------------------------------- Enabled Connected Dedicated VirtualBox Host-Only Network Enabled Connected Dedicated Npcap Loopback Adapter Enabled Connected Dedicated VirtualBox Host-Only Network #2 Enabled Connected Dedicated VirtualBox Host-Only Network #3 Enabled Connected Dedicated Ethernet 2 Enabled Connected Dedicated vEthernet (DockerNAT) Quickly find gateway address &amp;gt; netsh interface ip show config | findstr &quot;Default&quot; Default Gateway: 10.15.128.1 Let’s find DNS! &amp;gt; netsh interface ip show config | findstr &quot;DNS&quot; DNS servers configured through DHCP: 10.8.1.90 Statically Configured DNS Servers: 192.168.1.104 Statically Configured DNS Servers: None Statically Configured DNS Servers: None Statically Configured DNS Servers: None Statically Configured DNS Servers: None &amp;gt; netsh interface ipv4 show tcpconnections MIB-II TCP Connection Entry Local Address Local Port Remote Address Remote Port State ----------------------------------------------------------------------------- 0.0.0.0 22 0.0.0.0 0 Listen 0.0.0.0 135 0.0.0.0 0 Listen 10.0.75.1 139 0.0.0.0 0 Listen 10.15.130.204 139 0.0.0.0 0 Listen 169.254.54.117 139 0.0.0.0 0 Listen 127.0.0.1 2201 0.0.0.0 0 Listen 127.0.0.1 2202 127.0.0.1 10240 Established 127.0.0.1 2202 127.0.0.1 13370 Established 127.0.0.1 2202 0.0.0.0 0 Listen 127.0.0.1 2222 127.0.0.1 14513 Established 127.0.0.1 2222 0.0.0.0 0 Listen 10.15.130.204 3144 65.52.108.195 443 Established netstat which is familiar is on Windows! &amp;gt; netstat -ab Active Connections Proto Local Address Foreign Address State TCP 0.0.0.0:22 console-10:0 LISTENING SshProxy [svchost.exe] TCP 0.0.0.0:135 console-10:0 LISTENING RpcSs [svchost.exe] TCP 0.0.0.0:445 console-10:0 LISTENING Can not obtain ownership information TCP 0.0.0.0:1536 console-10:0 LISTENING Can not obtain ownership information TCP 0.0.0.0:1537 console-10:0 LISTENING EventLog [svchost.exe] &amp;gt; netstat -ao Active Connections Proto Local Address Foreign Address State PID TCP 0.0.0.0:22 console-10:0 LISTENING 2720 TCP 0.0.0.0:135 console-10:0 LISTENING 892 TCP 0.0.0.0:445 console-10:0 LISTENING 4 TCP 0.0.0.0:1536 console-10:0 LISTENING 592 TCP 0.0.0.0:1537 console-10:0 LISTENING 372 TCP 0.0.0.0:1538 console-10:0 LISTENING 1332 TCP 0.0.0.0:1539 console-10:0 LISTENING 2024 TCP 0.0.0.0:1541 console-10:0 LISTENING 732 TCP 0.0.0.0:1550 console-10:0 LISTENING 748 TCP 0.0.0.0:2179 console-10:0 LISTENING 2680 TCP 0.0.0.0:3389 console-10:0 LISTENING 292 Processes You need to be able to quickly check processes for anything phishy! &amp;gt; schtasks Folder: \ TaskName Next Run Time Status ======================================== ====================== =============== G2MUpdateTask-S-1-5-21-3622734366-314535 2/10/2017 4:07:00 PM Ready G2MUploadTask-S-1-5-21-3622734366-314535 2/10/2017 4:31:00 PM Ready GoogleUpdateTaskMachineCore 2/11/2017 1:58:09 PM Ready GoogleUpdateTaskMachineUA 2/10/2017 3:58:09 PM Ready klcp_update 2/25/2017 7:10:00 PM Ready OneDrive Standalone Update Task v2 2/11/2017 4:41:36 PM Ready RtHDVBg_LENOVO_MICPKEY N/A Running RTKCPL N/A Running Folder: \Microsoft TaskName Next Run Time Status ======================================== ====================== =============== INFO: There are no scheduled tasks presently available at your access level. Folder: \Microsoft\Office TaskName Next Run Time Status ======================================== ====================== =============== Office Automatic Updates 2/12/2017 4:01:03 AM Ready Office ClickToRun Service Monitor 2/11/2017 8:58:46 AM Ready Office Subscription Maintenance 2/11/2017 8:25:18 AM Ready OfficeTelemetryAgentFallBack2016 N/A Ready OfficeTelemetryAgentLogOn2016 N/A Ready Folder: \Microsoft\Windows TaskName Next Run Time Status ======================================== ====================== =============== INFO: There are no scheduled tasks presently available at your access level. ..... &amp;gt; tasklist Image Name PID Session Name Session# Mem Usage ========================= ======== ================ =========== ============ System Idle Process 0 Services 0 4 K System 4 Services 0 32 K smss.exe 324 Services 0 336 K csrss.exe 500 Services 0 1,592 K wininit.exe 592 Services 0 836 K csrss.exe 600 Console 1 3,972 K winlogon.exe 680 Console 1 3,116 K services.exe 732 Services 0 4,660 K lsass.exe 748 Services 0 10,104 K svchost.exe 840 Services 0 10,992 K svchost.exe 892 Services 0 8,520 K svchost.exe 292 Services 0 19,944 K svchost.exe 372 Services 0 17,176 K svchost.exe 384 Services 0 15,152 K svchost.exe 1104 Services 0 15,980 K nvvsvc.exe 1140 Services 0 3,424 K nvSCPAPISvr.exe 1148 Services 0 2,136 K svchost.exe 1180 Services 0 18,308 K svchost.exe 1332 Services 0 64,384 K nvxdsync.exe 1380 Console 1 13,292 K nvvsvc.exe 1452 Console 1 7,852 K svchost.exe 1960 Services 0 7,104 K svchost.exe 2004 Services 0 1,960 K spoolsv.exe 2024 Services 0 8,512 K svchost.exe 2236 Services 0 23,336 K com.docker.service 2252 Services 0 2,552 K dirmngr.exe 2280 Services 0 1,568 K IpOverUsbSvc.exe 2296 Services 0 2,576 K .....</summary></entry><entry><title type="html">Getting going with Jekyll</title><link href="http://ahermosilla.com/tools/2016/11/02/starting-jekyll.html" rel="alternate" type="text/html" title="Getting going with Jekyll" /><published>2016-11-02T00:00:00-07:00</published><updated>2016-11-02T00:00:00-07:00</updated><id>http://ahermosilla.com/tools/2016/11/02/starting-jekyll</id><content type="html" xml:base="http://ahermosilla.com/tools/2016/11/02/starting-jekyll.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#requirements&quot; id=&quot;markdown-toc-requirements&quot;&gt;Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installing-jekyll&quot; id=&quot;markdown-toc-installing-jekyll&quot;&gt;Installing jekyll&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ssl-errors&quot; id=&quot;markdown-toc-ssl-errors&quot;&gt;SSL Errors&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#editing&quot; id=&quot;markdown-toc-editing&quot;&gt;Editing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#customizing--plugins&quot; id=&quot;markdown-toc-customizing--plugins&quot;&gt;Customizing &amp;amp; Plugins&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#no-auto-urlize&quot; id=&quot;markdown-toc-no-auto-urlize&quot;&gt;No auto-urlize?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#pinning-posts&quot; id=&quot;markdown-toc-pinning-posts&quot;&gt;Pinning Posts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#post-css-classes&quot; id=&quot;markdown-toc-post-css-classes&quot;&gt;Post CSS Classes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#heading-anchors&quot; id=&quot;markdown-toc-heading-anchors&quot;&gt;Heading Anchors&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#archives&quot; id=&quot;markdown-toc-archives&quot;&gt;Archives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#image-classes&quot; id=&quot;markdown-toc-image-classes&quot;&gt;Image Classes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#more&quot; id=&quot;markdown-toc-more&quot;&gt;More&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#next-steps&quot; id=&quot;markdown-toc-next-steps&quot;&gt;Next Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve been wanting to start blogging for quite some time and decided to finally make the jump.
I’ve created countless WordPress sites for clients but wanted to go a different route for my own 
blog. I wanted to use a system that was simple and light and something I didn’t need a db for.
I wanted something that would let me write markdown files and generate the site from there.
Nowadays there are so many &lt;a href=&quot;https://www.staticgen.com/&quot;&gt;static site generators&lt;/a&gt; to choose from 
it is easy to find something that fits your needs. I personally decided to use Jekyll, since it 
is ubiquitous and has a robust ecosystem. Another nice thing about  Jekyll is you can host your blog on 
&lt;a href=&quot;https://help.github.com/articles/about-github-pages-and-jekyll/&quot;&gt;github&lt;/a&gt; and it just works&lt;em&gt;*! *(provided you don’t use plugins)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An aside, there is an interesting alternative to Jekyll in the nodejs world - Metalsmith&lt;/strong&gt;.
Metalsmith let’s you essentially mix your own functionality with plugins to morph into a
generator you are used to. Below is an example how to use Metalsmith with a Jekyll structure 
if you are more inclined to use nodejs tools.&lt;/p&gt;

&lt;p&gt;&lt;a rel=&quot;external&quot; href=&quot;https://github.com/metalsmith/metalsmith/tree/master/examples/jekyll&quot;&gt;https://github.com/metalsmith/metalsmith/tree/master/examples/jekyll&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;An aside, there are plenty of guides to tools on Mac, I want to make sure windows users get some love!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Jekyll is powered by ruby which you can install on windows/mac/*nix. For windows you can download a Windows 
specific &lt;a href=&quot;http://rubyinstaller.org/&quot;&gt;ruby installer&lt;/a&gt;  which is an executable to set ruby up. Personally I’m a big 
fan of &lt;a href=&quot;https://chocolatey.org/&quot;&gt;chocolatey&lt;/a&gt;,  which is a package mananger for windows! (A post on my windows setup coming soon!)&lt;/p&gt;

&lt;p&gt;To first install chocolately, run &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd.exe&lt;/code&gt; as an Administrator and run the following command&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@powershell -NoProfile -ExecutionPolicy Bypass -Command &lt;span class=&quot;s2&quot;&gt;&quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PATH=%PATH%;%ALLUSERSPROFILE%&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hocolatey&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;in&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a rel=&quot;external&quot; href=&quot;https://chocolatey.org/install&quot;&gt;https://chocolatey.org/install&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once that is complete you can use chocolatey to install ruby!&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;choco install -y ruby
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Alternatively if you are a running &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt; on Windows 10 via the &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows Subsystems for Linux&lt;/code&gt; you can 
quickly setup ruby! (You can find installation guide for setting up &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;bash on Windows here&lt;/a&gt;.)&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Debian setup instructions!&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# https://www.brightbox.com/blog/2016/01/06/ruby-2-3-ubuntu-packages/&lt;/span&gt;
sudo apt-add-repository ppa:brightbox/ruby-ng
sudo apt-get update
sudo apt-get install ruby2.3 ruby2.3-dev
gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;installing-jekyll&quot;&gt;Installing jekyll&lt;/h2&gt;
&lt;p&gt;Once ruby is installed, getting jekyll installed is pretty straight forward!&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll bundler
jekyll new awesome-blog
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;awesome-blog
gem install
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ssl-errors&quot;&gt;SSL Errors&lt;/h3&gt;
&lt;p&gt;If you are running windows you may run into a certificate error …&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;… luckily there is a guide for that! You can create a &lt;code class=&quot;highlighter-rouge&quot;&gt;batch&lt;/code&gt; script &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby_gem_fix.bat&lt;/code&gt; width the snippet below are run that!
I used the &lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/&quot;&gt;guide on rubygems.org&lt;/a&gt; to 
help me figure out how to fix the issue.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:: http://stackoverflow.com/questions/636381/what-is-the-best-way-to-do-a-substring-in-a-batch-file
:: http://stackoverflow.com/questions/6359820/how-to-set-commands-output-as-a-variable-in-a-batch-file
&lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; /F &lt;span class=&quot;s2&quot;&gt;&quot;tokens=* USEBACKQ&quot;&lt;/span&gt; %%F &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;gem which rubygems&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;SET &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GEM_BIN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%%F
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;PUSHD&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%GEM_BIN:~0,-3%/ssl_certs&quot;&lt;/span&gt;
powershell -Command &lt;span class=&quot;s2&quot;&gt;&quot;(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/rubygems/rubygems/master/lib/rubygems/ssl_certs/index.rubygems.org/GlobalSignRootCA.pem', 'GlobalSignRootCA.pem')&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;POPD&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you are still having certificate errors, I found this answer on &lt;a href=&quot;http://stackoverflow.com/questions/5720484/how-to-solve-certificate-verify-failed-on-windows#answer-16134586&quot;&gt;Stackoverflow helpful&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also check out this thorough guide for windows install I found after wrestling through SSL troubles.
&lt;a rel=&quot;external&quot; href=&quot;http://yizeng.me/2013/05/10/setup-jekyll-on-windows/&quot;&gt;http://yizeng.me/2013/05/10/setup-jekyll-on-windows/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;editing&quot;&gt;Editing&lt;/h2&gt;
&lt;p&gt;Once you are all setup you’ll see the contents of the blog similar to structure below.
If you aren’t tweaking the theme, the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory is where you can write and 
edit posts. The name of the each file contains the date the post will be published as well as
the url/slug of the post.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- _posts
|   |-- 2016-11-09-post.md
|   |-- 2016-11-10-best-cats.md
|   `-- 2020-11-11-gifs-on-fire.md
|-- _site
|-- _config.yml
|-- about.md
|-- Gemfile
|-- Gemfile.lock
`-- index.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The content of a post looks like this!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title:  &quot;Getting going with Jekyll&quot;
subtitle: &quot;Jumping into THE static site generator&quot;
categories: tools
tags: [ tools, windows ]
---
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut id eleifend augue. 
Ut varius sit amet ipsum eu maximus. Praesent odio mauris, pellentesque in porttitor 
vitae, dictum nec magna. Aenean elementum sem non facilisis malesuada. Suspendisse a

## Blarg
laoreet dui, vitae fermentum odio. Fusce dictum, magna sed congue pellentesque, velit 
velit facilisis dolor, quis commodo dolor purus dignissim eros. Cras in magna gravida, 
viverra enim non, rhoncus mauris. Phasellus vel turpis tincidunt, tristique mi vel ....

- Fusce dictum
- Phasellus vel 
- Aenean elementum

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; One thing nice I discovered by accident is you can future 
date a post and it won’t render/display until that date!&lt;/p&gt;

&lt;h2 id=&quot;customizing--plugins&quot;&gt;Customizing &amp;amp; Plugins&lt;/h2&gt;
&lt;p&gt;Jekyll has a healthy ecosystem which of course includes plugins &amp;amp; themes. One feature I 
wanted to add that I found a plugin for was embedding twitter posts.
Adding the new plugin was pretty straightforward! I edited the &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; in the project
root and under the &lt;code class=&quot;highlighter-rouge&quot;&gt;:jekyll_plugins&lt;/code&gt; group added the name of the plugins I wanted
installed.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://rubygems.org&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RUBY_VERSION&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;3.3.0&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:jekyll_plugins&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-feed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~&amp;gt; 0.6&quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Added a new plugin&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-twitter-plugin&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;After I updated the &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;  I ran &lt;code class=&quot;highlighter-rouge&quot;&gt;bundler install&lt;/code&gt; and the additional dependancies were added!&lt;/p&gt;

&lt;h3 id=&quot;no-auto-urlize&quot;&gt;No auto-urlize?&lt;/h3&gt;
&lt;p&gt;One thing that I’ve grown accustom to with markdown on github, was automatic url to link conversion.
I’m not sure if I used another markdown renderer if it would be different, but the default renderer,
&lt;code class=&quot;highlighter-rouge&quot;&gt;kramdown&lt;/code&gt; didn’t handle that automagically. Luckily it is 
really easy to create a plugin! I didn’t feel like investing the time to create an 
auto urlizer at this point so I made a liquid filter and dropped it into the project -
 &lt;code class=&quot;highlighter-rouge&quot;&gt;_plugins/urlize-filter.rb&lt;/code&gt;! to use it it’s as simple as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'http://jekyllrb.com/docs/home'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;urlize&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;UrlizeFilter&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;urlize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;a rel=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;external&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register_filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UrlizeFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;pinning-posts&quot;&gt;Pinning Posts&lt;/h3&gt;
&lt;p&gt;In WordPress you can tag posts as “sticky”, essentially pinning them as more important.
I did some quick searching around and found a solution to add a &lt;code class=&quot;highlighter-rouge&quot;&gt;pinned&lt;/code&gt; attribute
and drop in a new plugin!&lt;/p&gt;

&lt;p&gt;&lt;a rel=&quot;external&quot; href=&quot;https://talk.jekyllrb.com/t/pinned-posts-like-wordpress/1595/4&quot;&gt;https://talk.jekyllrb.com/t/pinned-posts-like-wordpress/1595/4&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title:  &quot;Getting going with Jekyll (on Windows!)&quot;
categories: tools
tags: [ tools, windows ]
pinned: true
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I dropped a new ruby file into the &lt;code class=&quot;highlighter-rouge&quot;&gt;_plugins&lt;/code&gt; directory following the 
pattern found &lt;a href=&quot;https://talk.jekyllrb.com/t/pinned-posts-like-wordpress/1595/4&quot;&gt;on this this&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Hooks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:pre_render&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Sort pinned posts up!&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# https://talk.jekyllrb.com/t/pinned-posts-like-wordpress/1595/4&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'site'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'posts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_by!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pinned'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reverse!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now pinned posts percolate to the top! Once I unpin the post it will be sorted normally.&lt;/p&gt;

&lt;h3 id=&quot;post-css-classes&quot;&gt;Post CSS Classes&lt;/h3&gt;
&lt;p&gt;In WordPress there is a handy dandy function &lt;code class=&quot;highlighter-rouge&quot;&gt;post_class();&lt;/code&gt; that give a CSS 
class with names derived from the post attributes, including post type, category,
tags etc. I wanted to implement a post_class attribute on posts/pages that I could
use in the templates.&lt;/p&gt;

&lt;p&gt;In templates I wanted to be able to reference the attribute like this!&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ post.post_class }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;… which would render this!&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;category-tools tag-tools tag-windows is-pinned&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;… so I went ahead and dropped in another plugin which I quickly wrote!&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Hooks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:pre_render&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Add an attribute, post_class, for use in templates&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'site'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'posts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'categories'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;category-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tags'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tag-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pinned'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;is-pinned&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'post_class'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The nice thing about having category and tag classes is I can customize the style of the page
depending on the tag!&lt;/p&gt;

&lt;h3 id=&quot;heading-anchors&quot;&gt;Heading Anchors&lt;/h3&gt;
&lt;p&gt;One thing handy-dandy github does is id &amp;amp; link headers. Jekyll automatically adds
ids to headers but not links. The quickest way to remedy this missing feature is 
to use JavaScript to add a link!&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Add anchors to headings that have ids&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// https://github.com/jekyll/jekyll/issues/2690#issuecomment-153697263&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'h2,h3,h4,h5,h6'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'[id]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;a href=&quot;#'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&quot;&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;archives&quot;&gt;Archives&lt;/h3&gt;
&lt;p&gt;In WordPress I am used to have an archives page for categories, tags etc.
One thing that appeared to be missing by default from Jekyll is the notion of a category archives.
I assume this could be easily remedied by a plugin and found &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-archives&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;Here are some more links on archives you can check out, maybe there is another solution you like better!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.mikeapted.com/jekyll/2015/12/30/category-and-tag-archives-in-jekyll-no-plugins/&quot;&gt;https://www.mikeapted.com/jekyll/2015/12/30/category-and-tag-archives-in-jekyll-no-plugins/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://blog.webjeda.com/jekyll-categories/&quot;&gt;https://blog.webjeda.com/jekyll-categories/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.chrisanthropic.com/blog/2014/jekyll-themed-category-pages-without-plugins/&quot;&gt;https://www.chrisanthropic.com/blog/2014/jekyll-themed-category-pages-without-plugins/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://reyhan.org/2013/03/jekyll-archive-without-plugins.html&quot;&gt;http://reyhan.org/2013/03/jekyll-archive-without-plugins.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;image-classes&quot;&gt;Image Classes&lt;/h3&gt;
&lt;p&gt;I wanted to add a custom class to an image but didn’t think markdown supported the
notion of arbitrary attributes on elements. Apparently the &lt;code class=&quot;highlighter-rouge&quot;&gt;kramdown&lt;/code&gt; markdown render
supports &lt;strong&gt;“extended”&lt;/strong&gt; features including extra attributes. I found the 
&lt;a href=&quot;https://thornelabs.net/2014/11/30/centering-images-with-jekyll-and-markdown.html&quot;&gt;link here&lt;/a&gt;
that explains the details, but below is how you do it in the markdown.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--
This markdown ....

![Andres](https://s.gravatar.com/avatar/md5yo?s=100){:class=&quot;biopic gravatar&quot;}

... turns into
--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://s.gravatar.com/avatar/md5yo?s=100&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Andres&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;biopic gravatar&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;
&lt;p&gt;I covered some quick “plugins” to get you introduced, but make sure check out the resources below!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://jekyllrb.com/docs/plugins/&quot;&gt;https://jekyllrb.com/docs/plugins/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.jekyll-plugins.com/&quot;&gt;http://www.jekyll-plugins.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://tuananh.org/2014/08/04/writing-your-first-jekyll-plugin/&quot;&gt;https://tuananh.org/2014/08/04/writing-your-first-jekyll-plugin/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://divshot.com/blog/web-development/advanced-jekyll-features/&quot;&gt;https://divshot.com/blog/web-development/advanced-jekyll-features/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.createdbypete.com/articles/create-a-custom-liquid-tag-as-a-jekyll-plugin/&quot;&gt;http://www.createdbypete.com/articles/create-a-custom-liquid-tag-as-a-jekyll-plugin/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.xorcode.com/2012/08/15/jekyll-creating-your-first-liquid-plugin/&quot;&gt;http://www.xorcode.com/2012/08/15/jekyll-creating-your-first-liquid-plugin/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://github.com/planetjekyll/awesome-jekyll-plugins&quot;&gt;https://github.com/planetjekyll/awesome-jekyll-plugins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://dev-notes.eu/2016/01/images-in-kramdown-jekyll/&quot;&gt;http://dev-notes.eu/2016/01/images-in-kramdown-jekyll/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;Once you are all setup and installed you can jump into creating content
or customizing your &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;theme&lt;/a&gt;! There is
so much you can do to customize your blog! As I continue hacking on this site
I will share more&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/smutnyleszek/9803727&quot;&gt;Cheatsheet!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://shopify.github.io/liquid/&quot;&gt;Liquid templating&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://jekyllrb.com/docs/home&quot;&gt;http://jekyllrb.com/docs/home&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://github.com/planetjekyll/awesome-jekyll&quot;&gt;https://github.com/planetjekyll/awesome-jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.digitalocean.com/community/tutorials/exploring-jekyll-s-default-content&quot;&gt;https://www.digitalocean.com/community/tutorials/exploring-jekyll-s-default-content&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://www.jflh.ca/2016-01-23-adding-and-displaying-tags-on-jekyll-posts&quot;&gt;https://www.jflh.ca/2016-01-23-adding-and-displaying-tags-on-jekyll-posts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://jekyll-windows.juthilo.com/&quot;&gt;http://jekyll-windows.juthilo.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;https://divshot.com/blog/web-development/advanced-jekyll-features/&quot;&gt;https://divshot.com/blog/web-development/advanced-jekyll-features/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://www.remotesynthesis.com/general/2015/10/02/advanced-jekyll-templates/&quot;&gt;http://www.remotesynthesis.com/general/2015/10/02/advanced-jekyll-templates/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://svmiller.com/blog/2015/08/create-your-website-in-jekyll&quot;&gt;http://svmiller.com/blog/2015/08/create-your-website-in-jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a rel=&quot;external&quot; href=&quot;http://blog.apps.npr.org/2012/11/08/npr-news-apps-blog.html&quot;&gt;http://blog.apps.npr.org/2012/11/08/npr-news-apps-blog.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="tools" /><category term="jekyll" /><summary type="html">Requirements Installing jekyll SSL Errors Editing Customizing &amp;amp; Plugins No auto-urlize? Pinning Posts Post CSS Classes Heading Anchors Archives Image Classes More Next Steps I’ve been wanting to start blogging for quite some time and decided to finally make the jump. I’ve created countless WordPress sites for clients but wanted to go a different route for my own blog. I wanted to use a system that was simple and light and something I didn’t need a db for. I wanted something that would let me write markdown files and generate the site from there. Nowadays there are so many static site generators to choose from it is easy to find something that fits your needs. I personally decided to use Jekyll, since it is ubiquitous and has a robust ecosystem. Another nice thing about Jekyll is you can host your blog on github and it just works*! *(provided you don’t use plugins) An aside, there is an interesting alternative to Jekyll in the nodejs world - Metalsmith. Metalsmith let’s you essentially mix your own functionality with plugins to morph into a generator you are used to. Below is an example how to use Metalsmith with a Jekyll structure if you are more inclined to use nodejs tools. https://github.com/metalsmith/metalsmith/tree/master/examples/jekyll Requirements An aside, there are plenty of guides to tools on Mac, I want to make sure windows users get some love! Jekyll is powered by ruby which you can install on windows/mac/*nix. For windows you can download a Windows specific ruby installer which is an executable to set ruby up. Personally I’m a big fan of chocolatey, which is a package mananger for windows! (A post on my windows setup coming soon!) To first install chocolately, run cmd.exe as an Administrator and run the following command @powershell -NoProfile -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;amp;&amp;amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot; https://chocolatey.org/install Once that is complete you can use chocolatey to install ruby! choco install -y ruby Alternatively if you are a running bash on Windows 10 via the Windows Subsystems for Linux you can quickly setup ruby! (You can find installation guide for setting up bash on Windows here.) # Debian setup instructions! # https://www.brightbox.com/blog/2016/01/06/ruby-2-3-ubuntu-packages/ sudo apt-add-repository ppa:brightbox/ruby-ng sudo apt-get update sudo apt-get install ruby2.3 ruby2.3-dev gem install jekyll bundler Installing jekyll Once ruby is installed, getting jekyll installed is pretty straight forward! gem install jekyll bundler jekyll new awesome-blog cd awesome-blog gem install bundle exec jekyll serve SSL Errors If you are running windows you may run into a certificate error … SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed … luckily there is a guide for that! You can create a batch script ruby_gem_fix.bat width the snippet below are run that! I used the guide on rubygems.org to help me figure out how to fix the issue. :: http://stackoverflow.com/questions/636381/what-is-the-best-way-to-do-a-substring-in-a-batch-file :: http://stackoverflow.com/questions/6359820/how-to-set-commands-output-as-a-variable-in-a-batch-file FOR /F &quot;tokens=* USEBACKQ&quot; %%F IN (`gem which rubygems`) DO ( SET GEM_BIN=%%F ) PUSHD &quot;%GEM_BIN:~0,-3%/ssl_certs&quot; powershell -Command &quot;(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/rubygems/rubygems/master/lib/rubygems/ssl_certs/index.rubygems.org/GlobalSignRootCA.pem', 'GlobalSignRootCA.pem')&quot; POPD If you are still having certificate errors, I found this answer on Stackoverflow helpful. You can also check out this thorough guide for windows install I found after wrestling through SSL troubles. http://yizeng.me/2013/05/10/setup-jekyll-on-windows/ Editing Once you are all setup you’ll see the contents of the blog similar to structure below. If you aren’t tweaking the theme, the _posts directory is where you can write and edit posts. The name of the each file contains the date the post will be published as well as the url/slug of the post. |-- _posts | |-- 2016-11-09-post.md | |-- 2016-11-10-best-cats.md | `-- 2020-11-11-gifs-on-fire.md |-- _site |-- _config.yml |-- about.md |-- Gemfile |-- Gemfile.lock `-- index.md The content of a post looks like this! --- layout: post title: &quot;Getting going with Jekyll&quot; subtitle: &quot;Jumping into THE static site generator&quot; categories: tools tags: [ tools, windows ] --- Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut id eleifend augue. Ut varius sit amet ipsum eu maximus. Praesent odio mauris, pellentesque in porttitor vitae, dictum nec magna. Aenean elementum sem non facilisis malesuada. Suspendisse a ## Blarg laoreet dui, vitae fermentum odio. Fusce dictum, magna sed congue pellentesque, velit velit facilisis dolor, quis commodo dolor purus dignissim eros. Cras in magna gravida, viverra enim non, rhoncus mauris. Phasellus vel turpis tincidunt, tristique mi vel .... - Fusce dictum - Phasellus vel - Aenean elementum Note One thing nice I discovered by accident is you can future date a post and it won’t render/display until that date! Customizing &amp;amp; Plugins Jekyll has a healthy ecosystem which of course includes plugins &amp;amp; themes. One feature I wanted to add that I found a plugin for was embedding twitter posts. Adding the new plugin was pretty straightforward! I edited the Gemfile in the project root and under the :jekyll_plugins group added the name of the plugins I wanted installed. source &quot;https://rubygems.org&quot; ruby RUBY_VERSION gem &quot;jekyll&quot;, &quot;3.3.0&quot; group :jekyll_plugins do gem &quot;jekyll-feed&quot;, &quot;~&amp;gt; 0.6&quot; # Added a new plugin gem &quot;jekyll-twitter-plugin&quot; end After I updated the Gemfile I ran bundler install and the additional dependancies were added! No auto-urlize? One thing that I’ve grown accustom to with markdown on github, was automatic url to link conversion. I’m not sure if I used another markdown renderer if it would be different, but the default renderer, kramdown didn’t handle that automagically. Luckily it is really easy to create a plugin! I didn’t feel like investing the time to create an auto urlizer at this point so I made a liquid filter and dropped it into the project - _plugins/urlize-filter.rb! to use it it’s as simple as {{ 'http://jekyllrb.com/docs/home' | urlize }} module Jekyll module UrlizeFilter def urlize(input) &quot;&amp;lt;a rel=\&quot;external\&quot; href=\&quot;#{input}\&quot;&amp;gt;#{input}&amp;lt;/a&amp;gt;&quot; end end end Liquid::Template.register_filter(Jekyll::UrlizeFilter) Pinning Posts In WordPress you can tag posts as “sticky”, essentially pinning them as more important. I did some quick searching around and found a solution to add a pinned attribute and drop in a new plugin! https://talk.jekyllrb.com/t/pinned-posts-like-wordpress/1595/4 --- layout: post title: &quot;Getting going with Jekyll (on Windows!)&quot; categories: tools tags: [ tools, windows ] pinned: true --- I dropped a new ruby file into the _plugins directory following the pattern found on this this Jekyll::Hooks.register :site, :pre_render do |site, payload| # Sort pinned posts up! # https://talk.jekyllrb.com/t/pinned-posts-like-wordpress/1595/4 payload['site']['posts'].sort_by!{|p| [p.data['pinned'] ? 1:0, p.date]}.reverse! end Now pinned posts percolate to the top! Once I unpin the post it will be sorted normally. Post CSS Classes In WordPress there is a handy dandy function post_class(); that give a CSS class with names derived from the post attributes, including post type, category, tags etc. I wanted to implement a post_class attribute on posts/pages that I could use in the templates. In templates I wanted to be able to reference the attribute like this! &amp;lt;div class=&quot;{{ post.post_class }}&quot;&amp;gt; &amp;lt;!-- ... --&amp;gt; &amp;lt;/div&amp;gt; … which would render this! &amp;lt;div class=&quot;category-tools tag-tools tag-windows is-pinned&quot;&amp;gt; &amp;lt;!-- ... --&amp;gt; &amp;lt;/div&amp;gt; … so I went ahead and dropped in another plugin which I quickly wrote! Jekyll::Hooks.register :site, :pre_render do |site, payload| # Add an attribute, post_class, for use in templates payload['site']['posts'].map!{|p| classes = [ p.data['categories'].map{|c|&quot;category-#{c.downcase}&quot;}.join(&quot; &quot;), p.data['tags'].map{|t|&quot;tag-#{t.downcase}&quot;}.join(&quot; &quot;) ] if p.data['pinned'] classes.push(&quot;is-pinned&quot;) end p.data['post_class'] = classes.join(&quot; &quot;) p } end The nice thing about having category and tag classes is I can customize the style of the page depending on the tag! Heading Anchors One thing handy-dandy github does is id &amp;amp; link headers. Jekyll automatically adds ids to headers but not links. The quickest way to remedy this missing feature is to use JavaScript to add a link! &amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; jQuery(function ($) { // Add anchors to headings that have ids // https://github.com/jekyll/jekyll/issues/2690#issuecomment-153697263 $('h2,h3,h4,h5,h6').filter('[id]').each(function () { $(this).html('&amp;lt;a href=&quot;#'+$(this).attr('id')+'&quot;&amp;gt;' + $(this).text() + '&amp;lt;/a&amp;gt;'); }); }); &amp;lt;/script&amp;gt; Archives In WordPress I am used to have an archives page for categories, tags etc. One thing that appeared to be missing by default from Jekyll is the notion of a category archives. I assume this could be easily remedied by a plugin and found jekyll-archives! Here are some more links on archives you can check out, maybe there is another solution you like better! https://www.mikeapted.com/jekyll/2015/12/30/category-and-tag-archives-in-jekyll-no-plugins/ https://blog.webjeda.com/jekyll-categories/ https://www.chrisanthropic.com/blog/2014/jekyll-themed-category-pages-without-plugins/ http://reyhan.org/2013/03/jekyll-archive-without-plugins.html Image Classes I wanted to add a custom class to an image but didn’t think markdown supported the notion of arbitrary attributes on elements. Apparently the kramdown markdown render supports “extended” features including extra attributes. I found the link here that explains the details, but below is how you do it in the markdown. &amp;lt;!-- This markdown .... ![Andres](https://s.gravatar.com/avatar/md5yo?s=100){:class=&quot;biopic gravatar&quot;} ... turns into --&amp;gt; &amp;lt;img src=&quot;https://s.gravatar.com/avatar/md5yo?s=100&quot; alt=&quot;Andres&quot; class=&quot;biopic gravatar&quot; /&amp;gt; More I covered some quick “plugins” to get you introduced, but make sure check out the resources below! https://jekyllrb.com/docs/plugins/ http://www.jekyll-plugins.com/ https://tuananh.org/2014/08/04/writing-your-first-jekyll-plugin/ https://divshot.com/blog/web-development/advanced-jekyll-features/ http://www.createdbypete.com/articles/create-a-custom-liquid-tag-as-a-jekyll-plugin/ http://www.xorcode.com/2012/08/15/jekyll-creating-your-first-liquid-plugin/ https://github.com/planetjekyll/awesome-jekyll-plugins http://dev-notes.eu/2016/01/images-in-kramdown-jekyll/ Next Steps Once you are all setup and installed you can jump into creating content or customizing your theme! There is so much you can do to customize your blog! As I continue hacking on this site I will share more Cheatsheet! Liquid templating http://jekyllrb.com/docs/home https://github.com/planetjekyll/awesome-jekyll https://www.digitalocean.com/community/tutorials/exploring-jekyll-s-default-content https://www.jflh.ca/2016-01-23-adding-and-displaying-tags-on-jekyll-posts http://jekyll-windows.juthilo.com/ https://divshot.com/blog/web-development/advanced-jekyll-features/ http://www.remotesynthesis.com/general/2015/10/02/advanced-jekyll-templates/ http://svmiller.com/blog/2015/08/create-your-website-in-jekyll http://blog.apps.npr.org/2012/11/08/npr-news-apps-blog.html Check out the Jekyll docs</summary></entry></feed>